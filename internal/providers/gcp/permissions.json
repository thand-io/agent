[
  {
    "apiDisabled": true,
    "name": "accessapproval.requests.approve",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.requests.dismiss",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.requests.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.requests.invalidate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.requests.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.serviceAccounts.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.settings.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.settings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "accessapproval.settings.update",
    "stage": "GA"
  },
  {
    "name": "actions.agent.claimContentProvider",
    "stage": "GA",
    "title": "Claim a content provider using an AoG project"
  },
  {
    "name": "actions.agent.get",
    "stage": "GA",
    "title": "Get action data and metadata"
  },
  {
    "name": "actions.agent.update",
    "stage": "GA",
    "title": "Update action data and metadata"
  },
  {
    "name": "actions.agentVersions.create",
    "stage": "GA",
    "title": "Create an action version"
  },
  {
    "name": "actions.agentVersions.delete",
    "stage": "GA",
    "title": "Delete an action version"
  },
  {
    "name": "actions.agentVersions.deploy",
    "stage": "GA",
    "title": "Deploy an action version"
  },
  {
    "name": "actions.agentVersions.get",
    "stage": "GA",
    "title": "Get an action version"
  },
  {
    "name": "actions.agentVersions.list",
    "stage": "GA",
    "title": "List all the action versions"
  },
  {
    "apiDisabled": true,
    "name": "advisorynotifications.notifications.get",
    "stage": "GA",
    "title": "Get notification"
  },
  {
    "apiDisabled": true,
    "name": "advisorynotifications.notifications.list",
    "stage": "GA",
    "title": "List notifications"
  },
  {
    "apiDisabled": true,
    "name": "advisorynotifications.settings.get",
    "stage": "GA",
    "title": "Get settings"
  },
  {
    "apiDisabled": true,
    "name": "advisorynotifications.settings.update",
    "stage": "GA",
    "title": "Update settings"
  },
  {
    "description": "Create agent example",
    "name": "aiplatform.agentExamples.create",
    "stage": "BETA",
    "title": "Create agent example"
  },
  {
    "description": "Delete agent example",
    "name": "aiplatform.agentExamples.delete",
    "stage": "BETA",
    "title": "Delete agent example"
  },
  {
    "description": "Get agent example",
    "name": "aiplatform.agentExamples.get",
    "stage": "BETA",
    "title": "Get agent example"
  },
  {
    "description": "List agent examples under an agent",
    "name": "aiplatform.agentExamples.list",
    "stage": "BETA",
    "title": "List agent examples under an agent"
  },
  {
    "description": "Update agent example",
    "name": "aiplatform.agentExamples.update",
    "stage": "BETA",
    "title": "Update agent example"
  },
  {
    "description": "Create agent",
    "name": "aiplatform.agents.create",
    "stage": "BETA",
    "title": "Create agent"
  },
  {
    "description": "Delete agent",
    "name": "aiplatform.agents.delete",
    "stage": "BETA",
    "title": "Delete agent"
  },
  {
    "description": "Get agent",
    "name": "aiplatform.agents.get",
    "stage": "BETA",
    "title": "Get agent"
  },
  {
    "description": "List agents under an app",
    "name": "aiplatform.agents.list",
    "stage": "BETA",
    "title": "List agents under an app"
  },
  {
    "description": "Update agent",
    "name": "aiplatform.agents.update",
    "stage": "BETA",
    "title": "Update agent"
  },
  {
    "apiDisabled": true,
    "description": "Create annotation specs",
    "name": "aiplatform.annotationSpecs.create",
    "stage": "GA",
    "title": "Create annotation specs"
  },
  {
    "apiDisabled": true,
    "description": "Delete annotation specs",
    "name": "aiplatform.annotationSpecs.delete",
    "stage": "GA",
    "title": "Delete annotation specs"
  },
  {
    "apiDisabled": true,
    "description": "Get annotation specs",
    "name": "aiplatform.annotationSpecs.get",
    "stage": "GA",
    "title": "Get annotation specs"
  },
  {
    "apiDisabled": true,
    "description": "List annotation specs under a dataset",
    "name": "aiplatform.annotationSpecs.list",
    "stage": "GA",
    "title": "List annotation specs under a dataset"
  },
  {
    "apiDisabled": true,
    "description": "Update annotation specs",
    "name": "aiplatform.annotationSpecs.update",
    "stage": "GA",
    "title": "Update annotation specs"
  },
  {
    "apiDisabled": true,
    "description": "Create annotations",
    "name": "aiplatform.annotations.create",
    "stage": "GA",
    "title": "Create annotations"
  },
  {
    "apiDisabled": true,
    "description": "Delete annotations",
    "name": "aiplatform.annotations.delete",
    "stage": "GA",
    "title": "Delete annotations"
  },
  {
    "apiDisabled": true,
    "description": "Get annotations",
    "name": "aiplatform.annotations.get",
    "stage": "GA",
    "title": "Get annotations"
  },
  {
    "apiDisabled": true,
    "description": "List annotations under a data item",
    "name": "aiplatform.annotations.list",
    "stage": "GA",
    "title": "List annotations under a data item"
  },
  {
    "apiDisabled": true,
    "description": "Update annotations",
    "name": "aiplatform.annotations.update",
    "stage": "GA",
    "title": "Update annotations"
  },
  {
    "description": "Create app",
    "name": "aiplatform.apps.create",
    "stage": "BETA",
    "title": "Create app"
  },
  {
    "description": "Delete app",
    "name": "aiplatform.apps.delete",
    "stage": "BETA",
    "title": "Delete app"
  },
  {
    "description": "Get app",
    "name": "aiplatform.apps.get",
    "stage": "BETA",
    "title": "Get app"
  },
  {
    "description": "List apps under a project",
    "name": "aiplatform.apps.list",
    "stage": "BETA",
    "title": "List apps under a project"
  },
  {
    "description": "Update app",
    "name": "aiplatform.apps.update",
    "stage": "BETA",
    "title": "Update app"
  },
  {
    "description": "Create artifact",
    "name": "aiplatform.artifacts.create",
    "stage": "BETA",
    "title": "Create artifact"
  },
  {
    "description": "Delete artifact",
    "name": "aiplatform.artifacts.delete",
    "stage": "BETA",
    "title": "Delete artifact"
  },
  {
    "description": "Get artifact",
    "name": "aiplatform.artifacts.get",
    "stage": "BETA",
    "title": "Get artifact"
  },
  {
    "description": "List artifacts",
    "name": "aiplatform.artifacts.list",
    "stage": "BETA",
    "title": "List artifacts"
  },
  {
    "description": "Update artifact",
    "name": "aiplatform.artifacts.update",
    "stage": "BETA",
    "title": "Update artifact"
  },
  {
    "apiDisabled": true,
    "description": "Cancel batch prediction jobs",
    "name": "aiplatform.batchPredictionJobs.cancel",
    "stage": "GA",
    "title": "Cancel batch prediction jobs"
  },
  {
    "apiDisabled": true,
    "description": "Create batch prediction jobs",
    "name": "aiplatform.batchPredictionJobs.create",
    "stage": "GA",
    "title": "Create batch prediction jobs"
  },
  {
    "apiDisabled": true,
    "description": "Delete batch prediction jobs",
    "name": "aiplatform.batchPredictionJobs.delete",
    "stage": "GA",
    "title": "Delete batch prediction jobs"
  },
  {
    "apiDisabled": true,
    "description": "Get batch prediction jobs",
    "name": "aiplatform.batchPredictionJobs.get",
    "stage": "GA",
    "title": "Get batch prediction jobs"
  },
  {
    "apiDisabled": true,
    "description": "List batch prediction jobs under a project",
    "name": "aiplatform.batchPredictionJobs.list",
    "stage": "GA",
    "title": "List batch prediction jobs under a project"
  },
  {
    "description": "Get cache configs",
    "name": "aiplatform.cacheConfigs.get",
    "stage": "BETA",
    "title": "Get cache configs"
  },
  {
    "description": "Update cache configs",
    "name": "aiplatform.cacheConfigs.update",
    "stage": "BETA",
    "title": "Update cache configs"
  },
  {
    "description": "Create cached content",
    "name": "aiplatform.cachedContents.create",
    "stage": "BETA",
    "title": "Create cached content"
  },
  {
    "description": "Delete cached content",
    "name": "aiplatform.cachedContents.delete",
    "stage": "BETA",
    "title": "Delete cached content"
  },
  {
    "description": "Get cached content",
    "name": "aiplatform.cachedContents.get",
    "stage": "BETA",
    "title": "Get cached content"
  },
  {
    "description": "List cached contents",
    "name": "aiplatform.cachedContents.list",
    "stage": "BETA",
    "title": "List cached contents"
  },
  {
    "description": "Update cached content",
    "name": "aiplatform.cachedContents.update",
    "stage": "BETA",
    "title": "Update cached content"
  },
  {
    "description": "Get consent",
    "name": "aiplatform.consents.get",
    "stage": "BETA",
    "title": "Get consent"
  },
  {
    "description": "Update consent",
    "name": "aiplatform.consents.update",
    "stage": "BETA",
    "title": "Update consent"
  },
  {
    "description": "Add artifacts and executions to context",
    "name": "aiplatform.contexts.addContextArtifactsAndExecutions",
    "stage": "BETA",
    "title": "Add artifacts and executions to context"
  },
  {
    "description": "Add contexts as children of another context",
    "name": "aiplatform.contexts.addContextChildren",
    "stage": "BETA",
    "title": "Add contexts as children of another context"
  },
  {
    "description": "Create context",
    "name": "aiplatform.contexts.create",
    "stage": "BETA",
    "title": "Create context"
  },
  {
    "description": "Delete context",
    "name": "aiplatform.contexts.delete",
    "stage": "BETA",
    "title": "Delete context"
  },
  {
    "description": "Get context",
    "name": "aiplatform.contexts.get",
    "stage": "BETA",
    "title": "Get context"
  },
  {
    "description": "List contexts",
    "name": "aiplatform.contexts.list",
    "stage": "BETA",
    "title": "List contexts"
  },
  {
    "description": "Get the lineage subgraph contained within the context",
    "name": "aiplatform.contexts.queryContextLineageSubgraph",
    "stage": "BETA",
    "title": "Get the lineage subgraph contained within the context"
  },
  {
    "description": "Update context",
    "name": "aiplatform.contexts.update",
    "stage": "BETA",
    "title": "Update context"
  },
  {
    "apiDisabled": true,
    "description": "Cancel custom jobs",
    "name": "aiplatform.customJobs.cancel",
    "stage": "GA",
    "title": "Cancel custom jobs"
  },
  {
    "apiDisabled": true,
    "description": "Create custom jobs",
    "name": "aiplatform.customJobs.create",
    "stage": "GA",
    "title": "Create custom jobs"
  },
  {
    "apiDisabled": true,
    "description": "Delete custom jobs",
    "name": "aiplatform.customJobs.delete",
    "stage": "GA",
    "title": "Delete custom jobs"
  },
  {
    "apiDisabled": true,
    "description": "Get custom jobs",
    "name": "aiplatform.customJobs.get",
    "stage": "GA",
    "title": "Get custom jobs"
  },
  {
    "apiDisabled": true,
    "description": "List custom jobs under a project",
    "name": "aiplatform.customJobs.list",
    "stage": "GA",
    "title": "List custom jobs under a project"
  },
  {
    "apiDisabled": true,
    "description": "Create data items",
    "name": "aiplatform.dataItems.create",
    "stage": "GA",
    "title": "Create data items"
  },
  {
    "apiDisabled": true,
    "description": "Delete data items",
    "name": "aiplatform.dataItems.delete",
    "stage": "GA",
    "title": "Delete data items"
  },
  {
    "apiDisabled": true,
    "description": "Get data items",
    "name": "aiplatform.dataItems.get",
    "stage": "GA",
    "title": "Get data items"
  },
  {
    "apiDisabled": true,
    "description": "List data items under a dataset",
    "name": "aiplatform.dataItems.list",
    "stage": "GA",
    "title": "List data items under a dataset"
  },
  {
    "apiDisabled": true,
    "description": "Update data items",
    "name": "aiplatform.dataItems.update",
    "stage": "GA",
    "title": "Update data items"
  },
  {
    "apiDisabled": true,
    "description": "Cancel data labeling jobs",
    "name": "aiplatform.dataLabelingJobs.cancel",
    "stage": "GA",
    "title": "Cancel data labeling jobs"
  },
  {
    "apiDisabled": true,
    "description": "Create data labeling jobs",
    "name": "aiplatform.dataLabelingJobs.create",
    "stage": "GA",
    "title": "Create data labeling jobs"
  },
  {
    "apiDisabled": true,
    "description": "Delete data labeling jobs",
    "name": "aiplatform.dataLabelingJobs.delete",
    "stage": "GA",
    "title": "Delete data labeling jobs"
  },
  {
    "apiDisabled": true,
    "description": "Get data labeling jobs",
    "name": "aiplatform.dataLabelingJobs.get",
    "stage": "GA",
    "title": "Get data labeling jobs"
  },
  {
    "apiDisabled": true,
    "description": "List data labeling jobs under a project",
    "name": "aiplatform.dataLabelingJobs.list",
    "stage": "GA",
    "title": "List data labeling jobs under a project"
  },
  {
    "apiDisabled": true,
    "description": "Create new dataset versions",
    "name": "aiplatform.datasetVersions.create",
    "stage": "GA",
    "title": "Create new dataset versions"
  },
  {
    "apiDisabled": true,
    "description": "Delete dataset versions",
    "name": "aiplatform.datasetVersions.delete",
    "stage": "GA",
    "title": "Delete dataset versions"
  },
  {
    "apiDisabled": true,
    "description": "Get dataset versions",
    "name": "aiplatform.datasetVersions.get",
    "stage": "GA",
    "title": "Get dataset versions"
  },
  {
    "apiDisabled": true,
    "description": "List dataset versions",
    "name": "aiplatform.datasetVersions.list",
    "stage": "GA",
    "title": "List dataset versions"
  },
  {
    "apiDisabled": true,
    "description": "Restore dataset versions",
    "name": "aiplatform.datasetVersions.restore",
    "stage": "GA",
    "title": "Restore dataset versions"
  },
  {
    "apiDisabled": true,
    "description": "Create datasets",
    "name": "aiplatform.datasets.create",
    "stage": "GA",
    "title": "Create datasets"
  },
  {
    "apiDisabled": true,
    "description": "Delete datasets",
    "name": "aiplatform.datasets.delete",
    "stage": "GA",
    "title": "Delete datasets"
  },
  {
    "apiDisabled": true,
    "description": "Export data from datasets",
    "name": "aiplatform.datasets.export",
    "stage": "GA",
    "title": "Export data from datasets"
  },
  {
    "apiDisabled": true,
    "description": "Get datasets",
    "name": "aiplatform.datasets.get",
    "stage": "GA",
    "title": "Get datasets"
  },
  {
    "apiDisabled": true,
    "description": "Import data into datasets",
    "name": "aiplatform.datasets.import",
    "stage": "GA",
    "title": "Import data into datasets"
  },
  {
    "apiDisabled": true,
    "description": "List datasets under a project",
    "name": "aiplatform.datasets.list",
    "stage": "GA",
    "title": "List datasets under a project"
  },
  {
    "apiDisabled": true,
    "description": "Update datasets",
    "name": "aiplatform.datasets.update",
    "stage": "GA",
    "title": "Update datasets"
  },
  {
    "description": "Create deploymentResourcePools",
    "name": "aiplatform.deploymentResourcePools.create",
    "stage": "BETA",
    "title": "Create deploymentResourcePools"
  },
  {
    "description": "Delete deploymentResourcePools",
    "name": "aiplatform.deploymentResourcePools.delete",
    "stage": "BETA",
    "title": "Delete deploymentResourcePools"
  },
  {
    "description": "Get deploymentResourcePools",
    "name": "aiplatform.deploymentResourcePools.get",
    "stage": "BETA",
    "title": "Get deploymentResourcePools"
  },
  {
    "description": "List deploymentResourcePools under a project",
    "name": "aiplatform.deploymentResourcePools.list",
    "stage": "BETA",
    "title": "List deploymentResourcePools under a project"
  },
  {
    "description": "List DeployedModels deployed on a DeploymentResourcePool",
    "name": "aiplatform.deploymentResourcePools.queryDeployedModels",
    "stage": "BETA",
    "title": "List DeployedModels deployed on a DeploymentResourcePool"
  },
  {
    "description": "Update deploymentResourcePools",
    "name": "aiplatform.deploymentResourcePools.update",
    "stage": "BETA",
    "title": "Update deploymentResourcePools"
  },
  {
    "description": "Create edge deployment jobs",
    "name": "aiplatform.edgeDeploymentJobs.create",
    "stage": "BETA",
    "title": "Create edge deployment jobs"
  },
  {
    "description": "Delete edge deployment jobs",
    "name": "aiplatform.edgeDeploymentJobs.delete",
    "stage": "BETA",
    "title": "Delete edge deployment jobs"
  },
  {
    "description": "Get edge deployment jobs",
    "name": "aiplatform.edgeDeploymentJobs.get",
    "stage": "BETA",
    "title": "Get edge deployment jobs"
  },
  {
    "description": "List edge deployment jobs under a project",
    "name": "aiplatform.edgeDeploymentJobs.list",
    "stage": "BETA",
    "title": "List edge deployment jobs under a project"
  },
  {
    "description": "Get edge device debug info",
    "name": "aiplatform.edgeDeviceDebugInfo.get",
    "stage": "BETA",
    "title": "Get edge device debug info"
  },
  {
    "description": "Create edge devices",
    "name": "aiplatform.edgeDevices.create",
    "stage": "BETA",
    "title": "Create edge devices"
  },
  {
    "description": "Delete edge devices",
    "name": "aiplatform.edgeDevices.delete",
    "stage": "BETA",
    "title": "Delete edge devices"
  },
  {
    "description": "Get edge devices",
    "name": "aiplatform.edgeDevices.get",
    "stage": "BETA",
    "title": "Get edge devices"
  },
  {
    "description": "List edge devices",
    "name": "aiplatform.edgeDevices.list",
    "stage": "BETA",
    "title": "List edge devices"
  },
  {
    "description": "Update edge devices",
    "name": "aiplatform.edgeDevices.update",
    "stage": "BETA",
    "title": "Update edge devices"
  },
  {
    "apiDisabled": true,
    "description": "Create endpoints",
    "name": "aiplatform.endpoints.create",
    "stage": "GA",
    "title": "Create endpoints"
  },
  {
    "apiDisabled": true,
    "description": "Delete endpoints",
    "name": "aiplatform.endpoints.delete",
    "stage": "GA",
    "title": "Delete endpoints"
  },
  {
    "apiDisabled": true,
    "description": "Deploy models to endpoints",
    "name": "aiplatform.endpoints.deploy",
    "stage": "GA",
    "title": "Deploy models to endpoints"
  },
  {
    "apiDisabled": true,
    "description": "Perform online explanations via endpoints",
    "name": "aiplatform.endpoints.explain",
    "stage": "GA",
    "title": "Perform online explanations via endpoints"
  },
  {
    "apiDisabled": true,
    "description": "Get endpoints",
    "name": "aiplatform.endpoints.get",
    "stage": "GA",
    "title": "Get endpoints"
  },
  {
    "description": "Get access control policy for endpoints",
    "name": "aiplatform.endpoints.getIamPolicy",
    "stage": "BETA",
    "title": "Get access control policy for endpoints"
  },
  {
    "apiDisabled": true,
    "description": "List endpoints",
    "name": "aiplatform.endpoints.list",
    "stage": "GA",
    "title": "List endpoints under a project"
  },
  {
    "apiDisabled": true,
    "description": "Perform online predictions via endpoints",
    "name": "aiplatform.endpoints.predict",
    "stage": "GA",
    "title": "Perform online predictions via endpoints"
  },
  {
    "description": "Set access control policy for endpoints",
    "name": "aiplatform.endpoints.setIamPolicy",
    "stage": "BETA",
    "title": "Set access control policy for endpoints"
  },
  {
    "apiDisabled": true,
    "description": "Undeploy models from endpoints",
    "name": "aiplatform.endpoints.undeploy",
    "stage": "GA",
    "title": "Undeploy models from endpoints"
  },
  {
    "apiDisabled": true,
    "description": "Update endpoints",
    "name": "aiplatform.endpoints.update",
    "stage": "GA",
    "title": "Update endpoints"
  },
  {
    "description": "Create entity types under a featurestore",
    "name": "aiplatform.entityTypes.create",
    "stage": "BETA",
    "title": "Create entity types"
  },
  {
    "description": "Delete entity types under a featurestore",
    "name": "aiplatform.entityTypes.delete",
    "stage": "BETA",
    "title": "Delete entity types"
  },
  {
    "description": "Delete feature values of target entity type",
    "name": "aiplatform.entityTypes.deleteFeatureValues",
    "stage": "BETA",
    "title": "Delete feature values"
  },
  {
    "description": "Export feature values for entities of target entity type",
    "name": "aiplatform.entityTypes.exportFeatureValues",
    "stage": "BETA",
    "title": "Export feature values"
  },
  {
    "description": "Get entity types",
    "name": "aiplatform.entityTypes.get",
    "stage": "BETA",
    "title": "Get entity types"
  },
  {
    "description": "Get access control policy for entityTypes",
    "name": "aiplatform.entityTypes.getIamPolicy",
    "stage": "BETA",
    "title": "Get access control policy for entityTypes"
  },
  {
    "description": "Import feature values for entities of target entity type",
    "name": "aiplatform.entityTypes.importFeatureValues",
    "stage": "BETA",
    "title": "Import feature values"
  },
  {
    "description": "List entity types under a featurestore",
    "name": "aiplatform.entityTypes.list",
    "stage": "BETA",
    "title": "List entity types"
  },
  {
    "description": "Read feature values for an entity of target entity type",
    "name": "aiplatform.entityTypes.readFeatureValues",
    "stage": "BETA",
    "title": "Read feature values for a single entity"
  },
  {
    "description": "Set access control policy for EntityTypes",
    "name": "aiplatform.entityTypes.setIamPolicy",
    "stage": "BETA",
    "title": "Set access control policy for EntityTypes"
  },
  {
    "description": "Stream read feature values for entities of target entity type",
    "name": "aiplatform.entityTypes.streamingReadFeatureValues",
    "stage": "BETA",
    "title": "Stream read feature values for multiple entities"
  },
  {
    "description": "Update entity types under a featurestore",
    "name": "aiplatform.entityTypes.update",
    "stage": "BETA",
    "title": "Update entity types"
  },
  {
    "description": "Write feature values for one or more entities of target entity type",
    "name": "aiplatform.entityTypes.writeFeatureValues",
    "stage": "BETA",
    "title": "Write feature values for one or more entities"
  },
  {
    "description": "Create ExampleStore",
    "name": "aiplatform.exampleStores.create",
    "stage": "BETA",
    "title": "Create ExampleStore"
  },
  {
    "description": "Delete ExampleStore",
    "name": "aiplatform.exampleStores.delete",
    "stage": "BETA",
    "title": "Delete ExampleStore"
  },
  {
    "description": "Get ExampleStore",
    "name": "aiplatform.exampleStores.get",
    "stage": "BETA",
    "title": "Get ExampleStore"
  },
  {
    "description": "List ExampleStores under a project",
    "name": "aiplatform.exampleStores.list",
    "stage": "BETA",
    "title": "List ExampleStores under a project"
  },
  {
    "description": "Read Example",
    "name": "aiplatform.exampleStores.readExample",
    "stage": "BETA",
    "title": "Read Example"
  },
  {
    "description": "Update ExampleStore",
    "name": "aiplatform.exampleStores.update",
    "stage": "BETA",
    "title": "Update ExampleStore"
  },
  {
    "description": "Write Example",
    "name": "aiplatform.exampleStores.writeExample",
    "stage": "BETA",
    "title": "Write Example"
  },
  {
    "description": "Add events to execution",
    "name": "aiplatform.executions.addExecutionEvents",
    "stage": "BETA",
    "title": "Add events to execution"
  },
  {
    "description": "Create execution",
    "name": "aiplatform.executions.create",
    "stage": "BETA",
    "title": "Create execution"
  },
  {
    "description": "Delete execution",
    "name": "aiplatform.executions.delete",
    "stage": "BETA",
    "title": "Delete execution"
  },
  {
    "description": "Get execution",
    "name": "aiplatform.executions.get",
    "stage": "BETA",
    "title": "Get execution"
  },
  {
    "description": "List executions",
    "name": "aiplatform.executions.list",
    "stage": "BETA",
    "title": "List executions"
  },
  {
    "description": "Get input/output lineage subgraph for execution",
    "name": "aiplatform.executions.queryExecutionInputsAndOutputs",
    "stage": "BETA",
    "title": "Get input/output lineage subgraph for execution"
  },
  {
    "description": "Update execution",
    "name": "aiplatform.executions.update",
    "stage": "BETA",
    "title": "Update execution"
  },
  {
    "description": "Delete extension",
    "name": "aiplatform.extensions.delete",
    "stage": "BETA",
    "title": "Delete extension"
  },
  {
    "description": "Execute extension",
    "name": "aiplatform.extensions.execute",
    "stage": "BETA",
    "title": "Execute extension"
  },
  {
    "description": "Get extension",
    "name": "aiplatform.extensions.get",
    "stage": "BETA",
    "title": "Get extension"
  },
  {
    "description": "Import extension",
    "name": "aiplatform.extensions.import",
    "stage": "BETA",
    "title": "Import extension"
  },
  {
    "description": "List extensions under a project",
    "name": "aiplatform.extensions.list",
    "stage": "BETA",
    "title": "List extensions under a project"
  },
  {
    "description": "Update extension",
    "name": "aiplatform.extensions.update",
    "stage": "BETA",
    "title": "Update extension"
  },
  {
    "description": "Create feature group",
    "name": "aiplatform.featureGroups.create",
    "stage": "BETA",
    "title": "Create feature group"
  },
  {
    "description": "Delete feature group",
    "name": "aiplatform.featureGroups.delete",
    "stage": "BETA",
    "title": "Delete feature group"
  },
  {
    "description": "Get feature group",
    "name": "aiplatform.featureGroups.get",
    "stage": "BETA",
    "title": "Get feature group"
  },
  {
    "description": "Get access control policy for a feature group",
    "name": "aiplatform.featureGroups.getIamPolicy",
    "stage": "BETA",
    "title": "Get access control policy for a feature group"
  },
  {
    "description": "List feature groups under a project",
    "name": "aiplatform.featureGroups.list",
    "stage": "BETA",
    "title": "List feature groups under a project"
  },
  {
    "description": "Set access control policy for a feature group",
    "name": "aiplatform.featureGroups.setIamPolicy",
    "stage": "BETA",
    "title": "Set access control policy for a feature group"
  },
  {
    "description": "Update feature group",
    "name": "aiplatform.featureGroups.update",
    "stage": "BETA",
    "title": "Update feature group"
  },
  {
    "description": "Create feature monitor job",
    "name": "aiplatform.featureMonitorJobs.create",
    "stage": "BETA",
    "title": "Create feature monitor job"
  },
  {
    "description": "Get feature monitor job",
    "name": "aiplatform.featureMonitorJobs.get",
    "stage": "BETA",
    "title": "Get feature monitor job"
  },
  {
    "description": "List feature monitor jobs under a project",
    "name": "aiplatform.featureMonitorJobs.list",
    "stage": "BETA",
    "title": "List feature monitor jobs under a project"
  },
  {
    "description": "Create feature monitor",
    "name": "aiplatform.featureMonitors.create",
    "stage": "BETA",
    "title": "Create feature monitor"
  },
  {
    "description": "Delete feature monitor",
    "name": "aiplatform.featureMonitors.delete",
    "stage": "BETA",
    "title": "Delete feature monitor"
  },
  {
    "description": "Get feature monitor",
    "name": "aiplatform.featureMonitors.get",
    "stage": "BETA",
    "title": "Get feature monitor"
  },
  {
    "description": "List feature monitors under a feature group",
    "name": "aiplatform.featureMonitors.list",
    "stage": "BETA",
    "title": "List feature monitors under a feature group"
  },
  {
    "description": "Update feature monitor",
    "name": "aiplatform.featureMonitors.update",
    "stage": "BETA",
    "title": "Update feature monitor"
  },
  {
    "description": "Create feature online store",
    "name": "aiplatform.featureOnlineStores.create",
    "stage": "BETA",
    "title": "Create feature online store"
  },
  {
    "description": "Delete feature online store",
    "name": "aiplatform.featureOnlineStores.delete",
    "stage": "BETA",
    "title": "Delete feature online store"
  },
  {
    "description": "Get feature online store",
    "name": "aiplatform.featureOnlineStores.get",
    "stage": "BETA",
    "title": "Get feature online store"
  },
  {
    "description": "Get access control policy for a feature online store",
    "name": "aiplatform.featureOnlineStores.getIamPolicy",
    "stage": "BETA",
    "title": "Get access control policy for a feature online store"
  },
  {
    "description": "List feature online stores under a project",
    "name": "aiplatform.featureOnlineStores.list",
    "stage": "BETA",
    "title": "List feature online stores under a project"
  },
  {
    "description": "Set access control policy for a feature online store",
    "name": "aiplatform.featureOnlineStores.setIamPolicy",
    "stage": "BETA",
    "title": "Set access control policy for a feature online store"
  },
  {
    "description": "Update feature online store",
    "name": "aiplatform.featureOnlineStores.update",
    "stage": "BETA",
    "title": "Update feature online store"
  },
  {
    "description": "Get feature view sync",
    "name": "aiplatform.featureViewSyncs.get",
    "stage": "BETA",
    "title": "Get feature view sync"
  },
  {
    "description": "List feature view syncs under a feature view",
    "name": "aiplatform.featureViewSyncs.list",
    "stage": "BETA",
    "title": "List feature view syncs under a feature view"
  },
  {
    "description": "Create feature view",
    "name": "aiplatform.featureViews.create",
    "stage": "BETA",
    "title": "Create feature view"
  },
  {
    "description": "Delete feature view",
    "name": "aiplatform.featureViews.delete",
    "stage": "BETA",
    "title": "Delete feature view"
  },
  {
    "description": "Directly write feature values into a feature view",
    "name": "aiplatform.featureViews.directWrite",
    "stage": "BETA",
    "title": "Directly write feature values into a feature view"
  },
  {
    "description": "Fetch feature values for an entity key under a feature view",
    "name": "aiplatform.featureViews.fetchFeatureValues",
    "stage": "BETA",
    "title": "Fetch feature values under a feature view"
  },
  {
    "description": "Get feature view",
    "name": "aiplatform.featureViews.get",
    "stage": "BETA",
    "title": "Get feature view"
  },
  {
    "description": "Get access control policy for a feature view",
    "name": "aiplatform.featureViews.getIamPolicy",
    "stage": "BETA",
    "title": "Get access control policy for a feature view"
  },
  {
    "description": "List feature views under an online store",
    "name": "aiplatform.featureViews.list",
    "stage": "BETA",
    "title": "List feature views under an online store"
  },
  {
    "description": "Search most similar entities under a feature view",
    "name": "aiplatform.featureViews.searchNearestEntities",
    "stage": "BETA",
    "title": "Search most similar entities under a feature view"
  },
  {
    "description": "Set access control policy for a feature view",
    "name": "aiplatform.featureViews.setIamPolicy",
    "stage": "BETA",
    "title": "Set access control policy for a feature view"
  },
  {
    "description": "Sync data to online store for feature view",
    "name": "aiplatform.featureViews.sync",
    "stage": "BETA",
    "title": "Sync data to online store for feature view"
  },
  {
    "description": "Update feature view",
    "name": "aiplatform.featureViews.update",
    "stage": "BETA",
    "title": "Update feature view"
  },
  {
    "description": "Create features under an entity type or feature group",
    "name": "aiplatform.features.create",
    "stage": "BETA",
    "title": "Create features"
  },
  {
    "description": "Delete features under an entity type or feature group",
    "name": "aiplatform.features.delete",
    "stage": "BETA",
    "title": "Delete features"
  },
  {
    "description": "Get features under an entity type or feature group",
    "name": "aiplatform.features.get",
    "stage": "BETA",
    "title": "Get features"
  },
  {
    "description": "List features under an entity type or feature group",
    "name": "aiplatform.features.list",
    "stage": "BETA",
    "title": "List features"
  },
  {
    "description": "Update features under an entity type or feature group",
    "name": "aiplatform.features.update",
    "stage": "BETA",
    "title": "Update features"
  },
  {
    "description": "Batch read feature values for entities of target featurestore",
    "name": "aiplatform.featurestores.batchReadFeatureValues",
    "stage": "BETA",
    "title": "Batch read feature values"
  },
  {
    "description": "Create featurestores",
    "name": "aiplatform.featurestores.create",
    "stage": "BETA",
    "title": "Create featurestores"
  },
  {
    "description": "Delete featurestores",
    "name": "aiplatform.featurestores.delete",
    "stage": "BETA",
    "title": "Delete featurestores"
  },
  {
    "description": "Export data from featurestores",
    "name": "aiplatform.featurestores.exportFeatures",
    "stage": "BETA",
    "title": "Export data from featurestores"
  },
  {
    "description": "Get featurestores",
    "name": "aiplatform.featurestores.get",
    "stage": "BETA",
    "title": "Get featurestores"
  },
  {
    "description": "Get access control policy for featurestores",
    "name": "aiplatform.featurestores.getIamPolicy",
    "stage": "BETA",
    "title": "Get access control policy for featurestores"
  },
  {
    "description": "Import data into featurestores",
    "name": "aiplatform.featurestores.importFeatures",
    "stage": "BETA",
    "title": "Import data into featurestores"
  },
  {
    "description": "List featurestores under a project",
    "name": "aiplatform.featurestores.list",
    "stage": "BETA",
    "title": "List featurestores under a project"
  },
  {
    "description": "Read features from featurestores",
    "name": "aiplatform.featurestores.readFeatures",
    "stage": "BETA",
    "title": "Read features from featurestores"
  },
  {
    "description": "Set access control policy for featurestores",
    "name": "aiplatform.featurestores.setIamPolicy",
    "stage": "BETA",
    "title": "Set access control policy for featurestores"
  },
  {
    "description": "Update featurestores",
    "name": "aiplatform.featurestores.update",
    "stage": "BETA",
    "title": "Update featurestores"
  },
  {
    "description": "Write features into featurestores",
    "name": "aiplatform.featurestores.writeFeatures",
    "stage": "BETA",
    "title": "Write features into featurestores"
  },
  {
    "description": "Cancel entry sent to humanInTheLoop",
    "name": "aiplatform.humanInTheLoops.cancel",
    "stage": "BETA",
    "title": "Cancel entry sent to humanInTheLoop"
  },
  {
    "description": "Create humanInTheLoop",
    "name": "aiplatform.humanInTheLoops.create",
    "stage": "BETA",
    "title": "Create humanInTheLoop"
  },
  {
    "description": "Delete humanInTheLoop",
    "name": "aiplatform.humanInTheLoops.delete",
    "stage": "BETA",
    "title": "Delete humanInTheLoop"
  },
  {
    "description": "Get humanInTheLoop",
    "name": "aiplatform.humanInTheLoops.get",
    "stage": "BETA",
    "title": "Get humanInTheLoop"
  },
  {
    "description": "List humanInTheLoops",
    "name": "aiplatform.humanInTheLoops.list",
    "stage": "BETA",
    "title": "List humanInTheLoops"
  },
  {
    "description": "Query annotation stats in humanInTheLoop",
    "name": "aiplatform.humanInTheLoops.queryAnnotationStats",
    "stage": "BETA",
    "title": "Query annotation stats in humanInTheLoop"
  },
  {
    "description": "Send humanInTheLoop entry",
    "name": "aiplatform.humanInTheLoops.send",
    "stage": "BETA",
    "title": "Send humanInTheLoop entry"
  },
  {
    "description": "Update humanInTheLoop",
    "name": "aiplatform.humanInTheLoops.update",
    "stage": "BETA",
    "title": "Update humanInTheLoop"
  },
  {
    "apiDisabled": true,
    "description": "Cancel hyperparameter tuning jobs",
    "name": "aiplatform.hyperparameterTuningJobs.cancel",
    "stage": "GA",
    "title": "Cancel hyperparameter tuning jobs"
  },
  {
    "apiDisabled": true,
    "description": "Create hyperparameter tuning jobs",
    "name": "aiplatform.hyperparameterTuningJobs.create",
    "stage": "GA",
    "title": "Create hyperparameter tuning jobs"
  },
  {
    "apiDisabled": true,
    "description": "Delete hyperparameter tuning jobs",
    "name": "aiplatform.hyperparameterTuningJobs.delete",
    "stage": "GA",
    "title": "Delete hyperparameter tuning jobs"
  },
  {
    "apiDisabled": true,
    "description": "Get hyperparameter tuning jobs",
    "name": "aiplatform.hyperparameterTuningJobs.get",
    "stage": "GA",
    "title": "Get hyperparameter tuning jobs"
  },
  {
    "apiDisabled": true,
    "description": "List hyperparameter tuning jobs under a project",
    "name": "aiplatform.hyperparameterTuningJobs.list",
    "stage": "GA",
    "title": "List hyperparameter tuning jobs under a project"
  },
  {
    "description": "Create index endpoints",
    "name": "aiplatform.indexEndpoints.create",
    "stage": "BETA",
    "title": "Create index endpoints"
  },
  {
    "description": "Delete index endpoints",
    "name": "aiplatform.indexEndpoints.delete",
    "stage": "BETA",
    "title": "Delete index endpoints"
  },
  {
    "description": "Deploy indexes to index endpoints",
    "name": "aiplatform.indexEndpoints.deploy",
    "stage": "BETA",
    "title": "Deploy indexes to index endpoints"
  },
  {
    "description": "Get index endpoints",
    "name": "aiplatform.indexEndpoints.get",
    "stage": "BETA",
    "title": "Get index endpoints"
  },
  {
    "description": "List index endpoints",
    "name": "aiplatform.indexEndpoints.list",
    "stage": "BETA",
    "title": "List index endpoints under a project"
  },
  {
    "description": "Query vectors on IndexEndpoints.",
    "name": "aiplatform.indexEndpoints.queryVectors",
    "stage": "BETA",
    "title": "Query vectors on IndexEndpoints."
  },
  {
    "description": "Undeploy indexes from index endpoints",
    "name": "aiplatform.indexEndpoints.undeploy",
    "stage": "BETA",
    "title": "Undeploy indexes from index endpoints"
  },
  {
    "description": "Update index endpoints",
    "name": "aiplatform.indexEndpoints.update",
    "stage": "BETA",
    "title": "Update index endpoints"
  },
  {
    "description": "Create indexes",
    "name": "aiplatform.indexes.create",
    "stage": "BETA",
    "title": "Create indexes"
  },
  {
    "description": "Delete indexes",
    "name": "aiplatform.indexes.delete",
    "stage": "BETA",
    "title": "Delete indexes"
  },
  {
    "description": "Get indexes",
    "name": "aiplatform.indexes.get",
    "stage": "BETA",
    "title": "Get indexes"
  },
  {
    "description": "List indexes",
    "name": "aiplatform.indexes.list",
    "stage": "BETA",
    "title": "List indexes under a project"
  },
  {
    "description": "Update indexes",
    "name": "aiplatform.indexes.update",
    "stage": "BETA",
    "title": "Update indexes"
  },
  {
    "description": "Evaluate instances",
    "name": "aiplatform.locations.evaluateInstances",
    "stage": "BETA",
    "title": "Evaluate instances"
  },
  {
    "apiDisabled": true,
    "description": "Get locations",
    "name": "aiplatform.locations.get",
    "stage": "GA",
    "title": "Get locations"
  },
  {
    "apiDisabled": true,
    "description": "List locations",
    "name": "aiplatform.locations.list",
    "stage": "GA",
    "title": "List locations"
  },
  {
    "description": "Create Memory",
    "name": "aiplatform.memories.create",
    "stage": "BETA",
    "title": "Create Memory"
  },
  {
    "description": "Delete Memory",
    "name": "aiplatform.memories.delete",
    "stage": "BETA",
    "title": "Delete Memory"
  },
  {
    "description": "Generate Memories",
    "name": "aiplatform.memories.generate",
    "stage": "BETA",
    "title": "Generate Memories"
  },
  {
    "description": "Get Memory",
    "name": "aiplatform.memories.get",
    "stage": "BETA",
    "title": "Get Memory"
  },
  {
    "description": "List Memories under a Memory Collection",
    "name": "aiplatform.memories.list",
    "stage": "BETA",
    "title": "List Memories under a Memory Collection"
  },
  {
    "description": "Retrieve Memories",
    "name": "aiplatform.memories.retrieve",
    "stage": "BETA",
    "title": "Retrieve Memories"
  },
  {
    "description": "Update Memory",
    "name": "aiplatform.memories.update",
    "stage": "BETA",
    "title": "Update Memory"
  },
  {
    "description": "Create metadataSchema",
    "name": "aiplatform.metadataSchemas.create",
    "stage": "BETA",
    "title": "Create metadataSchema"
  },
  {
    "description": "Delete metadataSchemas",
    "name": "aiplatform.metadataSchemas.delete",
    "stage": "BETA",
    "title": "Delete metadataSchemas"
  },
  {
    "description": "Get metadataSchema",
    "name": "aiplatform.metadataSchemas.get",
    "stage": "BETA",
    "title": "Get metadataSchema"
  },
  {
    "description": "List metadataSchemas",
    "name": "aiplatform.metadataSchemas.list",
    "stage": "BETA",
    "title": "List metadataSchemas"
  },
  {
    "description": "Create metadataStore",
    "name": "aiplatform.metadataStores.create",
    "stage": "BETA",
    "title": "Create metadataStore"
  },
  {
    "description": "Delete metadataStore",
    "name": "aiplatform.metadataStores.delete",
    "stage": "BETA",
    "title": "Delete metadataStore"
  },
  {
    "description": "Get metadataStore",
    "name": "aiplatform.metadataStores.get",
    "stage": "BETA",
    "title": "Get metadataStore"
  },
  {
    "description": "List metadataStores",
    "name": "aiplatform.metadataStores.list",
    "stage": "BETA",
    "title": "List metadataStores"
  },
  {
    "apiDisabled": true,
    "description": "Migrate resources",
    "name": "aiplatform.migratableResources.migrate",
    "stage": "GA",
    "title": "Migrate resources"
  },
  {
    "apiDisabled": true,
    "description": "View migratable resources",
    "name": "aiplatform.migratableResources.search",
    "stage": "GA",
    "title": "View migratable resources"
  },
  {
    "description": "Create model deployment monitoring jobs",
    "name": "aiplatform.modelDeploymentMonitoringJobs.create",
    "stage": "BETA",
    "title": "Create model deployment monitoring jobs"
  },
  {
    "description": "Delete model deployment monitoring jobs",
    "name": "aiplatform.modelDeploymentMonitoringJobs.delete",
    "stage": "BETA",
    "title": "Delete model deployment monitoring jobs"
  },
  {
    "description": "Get model deployment monitoring jobs",
    "name": "aiplatform.modelDeploymentMonitoringJobs.get",
    "stage": "BETA",
    "title": "Get model deployment monitoring jobs"
  },
  {
    "description": "List model deployment monitoring jobs under a project",
    "name": "aiplatform.modelDeploymentMonitoringJobs.list",
    "stage": "BETA",
    "title": "List model deployment monitoring jobs under a project"
  },
  {
    "description": "Pause model deployment monitoring jobs",
    "name": "aiplatform.modelDeploymentMonitoringJobs.pause",
    "stage": "BETA",
    "title": "Pause model deployment monitoring jobs"
  },
  {
    "description": "Resume model deployment monitoring jobs",
    "name": "aiplatform.modelDeploymentMonitoringJobs.resume",
    "stage": "BETA",
    "title": "Resume model deployment monitoring jobs"
  },
  {
    "description": "Search stats/anomalies under a model deployment monitoring job",
    "name": "aiplatform.modelDeploymentMonitoringJobs.searchStatsAnomalies",
    "stage": "BETA",
    "title": "Search stats/anomalies under a model deployment monitoring job"
  },
  {
    "description": "Update model deployment monitoring jobs",
    "name": "aiplatform.modelDeploymentMonitoringJobs.update",
    "stage": "BETA",
    "title": "Update model deployment monitoring jobs"
  },
  {
    "apiDisabled": true,
    "description": "Get model evaluation slices",
    "name": "aiplatform.modelEvaluationSlices.get",
    "stage": "GA",
    "title": "Get model evaluation slices"
  },
  {
    "description": "Import model evaluation slices and evaluated annotations",
    "name": "aiplatform.modelEvaluationSlices.import",
    "stage": "BETA",
    "title": "Import model evaluation slices and evaluated annotations"
  },
  {
    "apiDisabled": true,
    "description": "List model evaluations slices of a model evaluation",
    "name": "aiplatform.modelEvaluationSlices.list",
    "stage": "GA",
    "title": "List model evaluation slices of a model evaluation"
  },
  {
    "apiDisabled": true,
    "description": "Export evaluated data items",
    "name": "aiplatform.modelEvaluations.exportEvaluatedDataItems",
    "stage": "GA",
    "title": "Export evaluated data items"
  },
  {
    "apiDisabled": true,
    "description": "Get model evaluations",
    "name": "aiplatform.modelEvaluations.get",
    "stage": "GA",
    "title": "Get model evaluations"
  },
  {
    "description": "Import model evaluations",
    "name": "aiplatform.modelEvaluations.import",
    "stage": "BETA",
    "title": "Import model evaluations"
  },
  {
    "apiDisabled": true,
    "description": "List model evaluations of a model",
    "name": "aiplatform.modelEvaluations.list",
    "stage": "GA",
    "title": "List model evaluations of a model"
  },
  {
    "description": "Create ModelMonitoringJobs",
    "name": "aiplatform.modelMonitoringJobs.create",
    "stage": "BETA",
    "title": "Create ModelMonitoringJobs"
  },
  {
    "description": "Delete ModelMonitoringJobs",
    "name": "aiplatform.modelMonitoringJobs.delete",
    "stage": "BETA",
    "title": "Delete ModelMonitoringJobs"
  },
  {
    "description": "Get ModelMonitoringJobs",
    "name": "aiplatform.modelMonitoringJobs.get",
    "stage": "BETA",
    "title": "Get ModelMonitoringJobs"
  },
  {
    "description": "List ModelMonitoringJobs under a project",
    "name": "aiplatform.modelMonitoringJobs.list",
    "stage": "BETA",
    "title": "List ModelMonitoringJobs under a project"
  },
  {
    "description": "Create ModelMonitors",
    "name": "aiplatform.modelMonitors.create",
    "stage": "BETA",
    "title": "Create ModelMonitors"
  },
  {
    "description": "Delete ModelMonitors",
    "name": "aiplatform.modelMonitors.delete",
    "stage": "BETA",
    "title": "Delete ModelMonitors"
  },
  {
    "description": "Get ModelMonitors",
    "name": "aiplatform.modelMonitors.get",
    "stage": "BETA",
    "title": "Get ModelMonitors"
  },
  {
    "description": "List ModelMonitors under a project",
    "name": "aiplatform.modelMonitors.list",
    "stage": "BETA",
    "title": "List ModelMonitors under a project"
  },
  {
    "description": "Search alerts under a model monitor",
    "name": "aiplatform.modelMonitors.searchModelMonitoringAlerts",
    "stage": "BETA",
    "title": "Search alerts under a model monitor"
  },
  {
    "description": "Search stats under a model monitor",
    "name": "aiplatform.modelMonitors.searchModelMonitoringStats",
    "stage": "BETA",
    "title": "Search stats under a model monitor"
  },
  {
    "description": "Update ModelMonitors",
    "name": "aiplatform.modelMonitors.update",
    "stage": "BETA",
    "title": "Update ModelMonitors"
  },
  {
    "apiDisabled": true,
    "description": "Delete model artifacts",
    "name": "aiplatform.models.delete",
    "stage": "GA",
    "title": "Delete model artifacts"
  },
  {
    "apiDisabled": true,
    "description": "Export model artifacts",
    "name": "aiplatform.models.export",
    "stage": "GA",
    "title": "Export model artifacts"
  },
  {
    "apiDisabled": true,
    "description": "Get models",
    "name": "aiplatform.models.get",
    "stage": "GA",
    "title": "Get models"
  },
  {
    "apiDisabled": true,
    "description": "List models under a project",
    "name": "aiplatform.models.list",
    "stage": "GA",
    "title": "List models under a project"
  },
  {
    "description": "Update models",
    "name": "aiplatform.models.update",
    "stage": "BETA",
    "title": "Update models"
  },
  {
    "apiDisabled": true,
    "description": "Upload model artifacts",
    "name": "aiplatform.models.upload",
    "stage": "GA",
    "title": "Upload model artifacts"
  },
  {
    "description": "Cancel NAS jobs",
    "name": "aiplatform.nasJobs.cancel",
    "stage": "BETA",
    "title": "Cancel NAS jobs"
  },
  {
    "description": "Create NAS jobs",
    "name": "aiplatform.nasJobs.create",
    "stage": "BETA",
    "title": "Create NAS jobs"
  },
  {
    "description": "Delete NAS jobs",
    "name": "aiplatform.nasJobs.delete",
    "stage": "BETA",
    "title": "Delete NAS jobs"
  },
  {
    "description": "Get NAS jobs",
    "name": "aiplatform.nasJobs.get",
    "stage": "BETA",
    "title": "Get NAS jobs"
  },
  {
    "description": "List NAS jobs under a project",
    "name": "aiplatform.nasJobs.list",
    "stage": "BETA",
    "title": "List NAS jobs under a project"
  },
  {
    "description": "Get nasTrialDetail",
    "name": "aiplatform.nasTrialDetails.get",
    "stage": "BETA",
    "title": "Get nasTrialDetail"
  },
  {
    "description": "List nasTrialDetails",
    "name": "aiplatform.nasTrialDetails.list",
    "stage": "BETA",
    "title": "List nasTrialDetails"
  },
  {
    "description": "Create notebookExecutionJobs",
    "name": "aiplatform.notebookExecutionJobs.create",
    "stage": "BETA",
    "title": "Create notebookExecutionJobs"
  },
  {
    "description": "Delete notebookExecutionJobs",
    "name": "aiplatform.notebookExecutionJobs.delete",
    "stage": "BETA",
    "title": "Delete notebookExecutionJobs"
  },
  {
    "description": "Get notebookExecutionJobs",
    "name": "aiplatform.notebookExecutionJobs.get",
    "stage": "BETA",
    "title": "Get notebookExecutionJobs"
  },
  {
    "description": "List notebookExecutionJobs",
    "name": "aiplatform.notebookExecutionJobs.list",
    "stage": "BETA",
    "title": "List notebookExecutionJobs"
  },
  {
    "apiDisabled": true,
    "description": "Apply notebookRuntimeTemplate to assign notebookRuntime",
    "name": "aiplatform.notebookRuntimeTemplates.apply",
    "stage": "GA",
    "title": "Apply notebookRuntimeTemplate to assign notebookRuntime"
  },
  {
    "apiDisabled": true,
    "description": "Create notebookRuntimeTemplates",
    "name": "aiplatform.notebookRuntimeTemplates.create",
    "stage": "GA",
    "title": "Create notebookRuntimeTemplates"
  },
  {
    "apiDisabled": true,
    "description": "Delete notebookRuntimeTemplates",
    "name": "aiplatform.notebookRuntimeTemplates.delete",
    "stage": "GA",
    "title": "Delete notebookRuntimeTemplates"
  },
  {
    "apiDisabled": true,
    "description": "Get notebookRuntimeTemplates",
    "name": "aiplatform.notebookRuntimeTemplates.get",
    "stage": "GA",
    "title": "Get notebookRuntimeTemplates"
  },
  {
    "apiDisabled": true,
    "description": "Get access control policy for notebookRuntimeTemplates",
    "name": "aiplatform.notebookRuntimeTemplates.getIamPolicy",
    "stage": "GA",
    "title": "Get access control policy for notebookRuntimeTemplates"
  },
  {
    "apiDisabled": true,
    "description": "List notebookRuntimeTemplates",
    "name": "aiplatform.notebookRuntimeTemplates.list",
    "stage": "GA",
    "title": "List notebookRuntimeTemplates under a project"
  },
  {
    "apiDisabled": true,
    "description": "Set access control policy for notebookRuntimeTemplates",
    "name": "aiplatform.notebookRuntimeTemplates.setIamPolicy",
    "stage": "GA",
    "title": "Set access control policy for notebookRuntimeTemplates"
  },
  {
    "apiDisabled": true,
    "description": "Update notebookRuntimeTemplates",
    "name": "aiplatform.notebookRuntimeTemplates.update",
    "stage": "GA",
    "title": "Update notebookRuntimeTemplates"
  },
  {
    "apiDisabled": true,
    "description": "Assign notebookRuntimes",
    "name": "aiplatform.notebookRuntimes.assign",
    "stage": "GA",
    "title": "Assign notebookRuntimes"
  },
  {
    "apiDisabled": true,
    "description": "Delete notebookRuntimes",
    "name": "aiplatform.notebookRuntimes.delete",
    "stage": "GA",
    "title": "Delete notebookRuntimes"
  },
  {
    "apiDisabled": true,
    "description": "Get notebookRuntimes",
    "name": "aiplatform.notebookRuntimes.get",
    "stage": "GA",
    "title": "Get notebookRuntimes"
  },
  {
    "apiDisabled": true,
    "description": "List notebookRuntimes",
    "name": "aiplatform.notebookRuntimes.list",
    "stage": "GA",
    "title": "List notebookRuntimes under a project"
  },
  {
    "apiDisabled": true,
    "description": "Start notebookRuntimes",
    "name": "aiplatform.notebookRuntimes.start",
    "stage": "GA",
    "title": "Start notebookRuntimes"
  },
  {
    "apiDisabled": true,
    "description": "Update notebookRuntimes",
    "name": "aiplatform.notebookRuntimes.update",
    "stage": "GA",
    "title": "Update notebookRuntimes"
  },
  {
    "apiDisabled": true,
    "description": "Upgrade notebookRuntimes",
    "name": "aiplatform.notebookRuntimes.upgrade",
    "stage": "GA",
    "title": "Upgrade notebookRuntimes"
  },
  {
    "apiDisabled": true,
    "name": "aiplatform.operations.list",
    "stage": "GA"
  },
  {
    "description": "Create PersistentResources",
    "name": "aiplatform.persistentResources.create",
    "stage": "BETA",
    "title": "Create PersistentResources"
  },
  {
    "description": "Delete PersistentResources",
    "name": "aiplatform.persistentResources.delete",
    "stage": "BETA",
    "title": "Delete PersistentResources"
  },
  {
    "description": "Get PersistentResources",
    "name": "aiplatform.persistentResources.get",
    "stage": "BETA",
    "title": "Get PersistentResources"
  },
  {
    "description": "List PersistentResources under a project",
    "name": "aiplatform.persistentResources.list",
    "stage": "BETA",
    "title": "List PersistentResources under a project"
  },
  {
    "description": "Cancel pipelineJob",
    "name": "aiplatform.pipelineJobs.cancel",
    "stage": "BETA",
    "title": "Cancel pipelineJob"
  },
  {
    "description": "Create pipelineJob",
    "name": "aiplatform.pipelineJobs.create",
    "stage": "BETA",
    "title": "Create pipelineJob"
  },
  {
    "description": "Delete pipelineJob",
    "name": "aiplatform.pipelineJobs.delete",
    "stage": "BETA",
    "title": "Delete pipelineJob"
  },
  {
    "description": "Get pipeline jobs",
    "name": "aiplatform.pipelineJobs.get",
    "stage": "BETA",
    "title": "Get pipeline jobs"
  },
  {
    "description": "List pipelineJob under a project",
    "name": "aiplatform.pipelineJobs.list",
    "stage": "BETA",
    "title": "List pipelineJob under a project"
  },
  {
    "description": "Get provisioned throughput revision",
    "name": "aiplatform.provisionedThroughputRevisions.get",
    "stage": "BETA",
    "title": "Get provisioned throughput revision"
  },
  {
    "description": "List provisioned throughput revisions under an order",
    "name": "aiplatform.provisionedThroughputRevisions.list",
    "stage": "BETA",
    "title": "List provisioned throughput revisions under an order"
  },
  {
    "description": "Cancel provisioned throughput",
    "name": "aiplatform.provisionedThroughputs.cancel",
    "stage": "BETA",
    "title": "Cancel provisioned throughput"
  },
  {
    "description": "Create provisioned throughput orders",
    "name": "aiplatform.provisionedThroughputs.create",
    "stage": "BETA",
    "title": "Create provisioned throughput orders"
  },
  {
    "description": "Get provisioned throughput order",
    "name": "aiplatform.provisionedThroughputs.get",
    "stage": "BETA",
    "title": "Get provisioned throughput order"
  },
  {
    "description": "List provisioned throughput under a project",
    "name": "aiplatform.provisionedThroughputs.list",
    "stage": "BETA",
    "title": "List provisioned throughput under a project"
  },
  {
    "description": "Update provisioned throughput",
    "name": "aiplatform.provisionedThroughputs.update",
    "stage": "BETA",
    "title": "Update provisioned throughput"
  },
  {
    "apiDisabled": true,
    "description": "Create agent corpus",
    "name": "aiplatform.ragCorpora.create",
    "stage": "GA",
    "title": "Create rag corpus"
  },
  {
    "apiDisabled": true,
    "description": "Delete rag corpus",
    "name": "aiplatform.ragCorpora.delete",
    "stage": "GA",
    "title": "Delete rag corpus"
  },
  {
    "apiDisabled": true,
    "description": "Get rag corpus",
    "name": "aiplatform.ragCorpora.get",
    "stage": "GA",
    "title": "Get rag corpus"
  },
  {
    "apiDisabled": true,
    "description": "List rag corpora",
    "name": "aiplatform.ragCorpora.list",
    "stage": "GA",
    "title": "List rag corpora"
  },
  {
    "apiDisabled": true,
    "description": "Query rag corpus",
    "name": "aiplatform.ragCorpora.query",
    "stage": "GA",
    "title": "Query rag corpus"
  },
  {
    "apiDisabled": true,
    "description": "Update rag corpus",
    "name": "aiplatform.ragCorpora.update",
    "stage": "GA",
    "title": "Update rag corpus"
  },
  {
    "description": "Get RAG Engine config",
    "name": "aiplatform.ragEngineConfigs.get",
    "stage": "BETA",
    "title": "Get RAG Engine config"
  },
  {
    "description": "Update RAG Engine config",
    "name": "aiplatform.ragEngineConfigs.update",
    "stage": "BETA",
    "title": "Update RAG Engine config"
  },
  {
    "apiDisabled": true,
    "description": "Delete rag file",
    "name": "aiplatform.ragFiles.delete",
    "stage": "GA",
    "title": "Delete rag file"
  },
  {
    "apiDisabled": true,
    "description": "Get rag file",
    "name": "aiplatform.ragFiles.get",
    "stage": "GA",
    "title": "Get rag file"
  },
  {
    "apiDisabled": true,
    "description": "Import rag files",
    "name": "aiplatform.ragFiles.import",
    "stage": "GA",
    "title": "Import rag files"
  },
  {
    "apiDisabled": true,
    "description": "List rag files",
    "name": "aiplatform.ragFiles.list",
    "stage": "GA",
    "title": "List rag files"
  },
  {
    "apiDisabled": true,
    "description": "Upload rag file",
    "name": "aiplatform.ragFiles.upload",
    "stage": "GA",
    "title": "Upload rag file"
  },
  {
    "description": "Create Reasoning Engine",
    "name": "aiplatform.reasoningEngines.create",
    "stage": "BETA",
    "title": "Create Reasoning Engine"
  },
  {
    "description": "Delete Reasoning Engine",
    "name": "aiplatform.reasoningEngines.delete",
    "stage": "BETA",
    "title": "Delete Reasoning Engine"
  },
  {
    "description": "Get Reasoning Engine",
    "name": "aiplatform.reasoningEngines.get",
    "stage": "BETA",
    "title": "Get Reasoning Engine"
  },
  {
    "description": "List Reasoning Engine under a project",
    "name": "aiplatform.reasoningEngines.list",
    "stage": "BETA",
    "title": "List Reasoning Engine under a project"
  },
  {
    "description": "Execute a query using Reasoning Engine",
    "name": "aiplatform.reasoningEngines.query",
    "stage": "BETA",
    "title": "Execute a query using Reasoning Engine"
  },
  {
    "description": "Update Reasoning Engine",
    "name": "aiplatform.reasoningEngines.update",
    "stage": "BETA",
    "title": "Update Reasoning Engine"
  },
  {
    "apiDisabled": true,
    "description": "Create Schedules",
    "name": "aiplatform.schedules.create",
    "stage": "GA",
    "title": "Create Schedules"
  },
  {
    "apiDisabled": true,
    "description": "Delete Schedules",
    "name": "aiplatform.schedules.delete",
    "stage": "GA",
    "title": "Delete Schedules"
  },
  {
    "apiDisabled": true,
    "description": "Get Schedules",
    "name": "aiplatform.schedules.get",
    "stage": "GA",
    "title": "Get Schedules"
  },
  {
    "apiDisabled": true,
    "description": "List Schedules under a project",
    "name": "aiplatform.schedules.list",
    "stage": "GA",
    "title": "List Schedules under a project"
  },
  {
    "apiDisabled": true,
    "description": "Update Schedules",
    "name": "aiplatform.schedules.update",
    "stage": "GA",
    "title": "Update Schedules"
  },
  {
    "description": "Append a session event to a session",
    "name": "aiplatform.sessionEvents.append",
    "stage": "BETA",
    "title": "Append a session event to a session"
  },
  {
    "description": "List events under a session",
    "name": "aiplatform.sessionEvents.list",
    "stage": "BETA",
    "title": "List events under a session"
  },
  {
    "description": "Create session",
    "name": "aiplatform.sessions.create",
    "stage": "BETA",
    "title": "Create session"
  },
  {
    "description": "Delete session",
    "name": "aiplatform.sessions.delete",
    "stage": "BETA",
    "title": "Delete session"
  },
  {
    "description": "Get session",
    "name": "aiplatform.sessions.get",
    "stage": "BETA",
    "title": "Get session"
  },
  {
    "description": "List sessions under a project",
    "name": "aiplatform.sessions.list",
    "stage": "BETA",
    "title": "List sessions under a project"
  },
  {
    "description": "Run session",
    "name": "aiplatform.sessions.run",
    "stage": "BETA",
    "title": "Run session"
  },
  {
    "description": "Update session",
    "name": "aiplatform.sessions.update",
    "stage": "BETA",
    "title": "Update session"
  },
  {
    "apiDisabled": true,
    "description": "Create specialist pools",
    "name": "aiplatform.specialistPools.create",
    "stage": "GA",
    "title": "Create specialist pools"
  },
  {
    "apiDisabled": true,
    "description": "Delete specialist pools",
    "name": "aiplatform.specialistPools.delete",
    "stage": "GA",
    "title": "Delete specialist pools"
  },
  {
    "apiDisabled": true,
    "description": "Get specialist pools",
    "name": "aiplatform.specialistPools.get",
    "stage": "GA",
    "title": "Get specialist pools"
  },
  {
    "apiDisabled": true,
    "description": "List specialist pools under a project",
    "name": "aiplatform.specialistPools.list",
    "stage": "GA",
    "title": "List specialist pools under a project"
  },
  {
    "apiDisabled": true,
    "description": "Update specialist pools",
    "name": "aiplatform.specialistPools.update",
    "stage": "GA",
    "title": "Update specialist pools"
  },
  {
    "apiDisabled": true,
    "description": "Create studies",
    "name": "aiplatform.studies.create",
    "stage": "GA",
    "title": "Create studies"
  },
  {
    "apiDisabled": true,
    "description": "Delete studies",
    "name": "aiplatform.studies.delete",
    "stage": "GA",
    "title": "Delete studies"
  },
  {
    "apiDisabled": true,
    "description": "Get studies",
    "name": "aiplatform.studies.get",
    "stage": "GA",
    "title": "Get studies"
  },
  {
    "apiDisabled": true,
    "description": "List studies",
    "name": "aiplatform.studies.list",
    "stage": "GA",
    "title": "List studies"
  },
  {
    "apiDisabled": true,
    "description": "Update studies",
    "name": "aiplatform.studies.update",
    "stage": "GA",
    "title": "Update studies"
  },
  {
    "description": "Create tensorboardExperiments",
    "name": "aiplatform.tensorboardExperiments.create",
    "stage": "BETA",
    "title": "Create tensorboardExperiments"
  },
  {
    "description": "Delete tensorboardExperiments",
    "name": "aiplatform.tensorboardExperiments.delete",
    "stage": "BETA",
    "title": "Delete tensorboardExperiments"
  },
  {
    "description": "Get tensorboardExperiments",
    "name": "aiplatform.tensorboardExperiments.get",
    "stage": "BETA",
    "title": "Get tensorboardExperiments"
  },
  {
    "description": "List tensorboardExperiments under a project",
    "name": "aiplatform.tensorboardExperiments.list",
    "stage": "BETA",
    "title": "List tensorboardExperiments under a project"
  },
  {
    "description": "Update tensorboardExperiments",
    "name": "aiplatform.tensorboardExperiments.update",
    "stage": "BETA",
    "title": "Update tensorboardExperiments"
  },
  {
    "description": "Write Tensorboard experiment data",
    "name": "aiplatform.tensorboardExperiments.write",
    "stage": "BETA",
    "title": "Write Tensorboard experiment data"
  },
  {
    "description": "Batch create tensorboardRuns",
    "name": "aiplatform.tensorboardRuns.batchCreate",
    "stage": "BETA",
    "title": "Batch create tensorboardRuns"
  },
  {
    "description": "Create tensorboardRuns",
    "name": "aiplatform.tensorboardRuns.create",
    "stage": "BETA",
    "title": "Create tensorboardRuns"
  },
  {
    "description": "Delete tensorboardRuns",
    "name": "aiplatform.tensorboardRuns.delete",
    "stage": "BETA",
    "title": "Delete tensorboardRuns"
  },
  {
    "description": "Get tensorboardRuns",
    "name": "aiplatform.tensorboardRuns.get",
    "stage": "BETA",
    "title": "Get tensorboardRuns"
  },
  {
    "description": "List tensorboardRuns under a project",
    "name": "aiplatform.tensorboardRuns.list",
    "stage": "BETA",
    "title": "List tensorboardRuns under a project"
  },
  {
    "description": "Update tensorboardRuns",
    "name": "aiplatform.tensorboardRuns.update",
    "stage": "BETA",
    "title": "Update tensorboardRuns"
  },
  {
    "description": "Write Tensorboard run data",
    "name": "aiplatform.tensorboardRuns.write",
    "stage": "BETA",
    "title": "Write Tensorboard run data"
  },
  {
    "description": "Batch create tensorboardTimeSeries",
    "name": "aiplatform.tensorboardTimeSeries.batchCreate",
    "stage": "BETA",
    "title": "Batch create tensorboardTimeSeries"
  },
  {
    "description": "Batch read Tensorboard time series data",
    "name": "aiplatform.tensorboardTimeSeries.batchRead",
    "stage": "BETA",
    "title": "Batch read Tensorboard time series data"
  },
  {
    "description": "Create tensorboardTimeSeries",
    "name": "aiplatform.tensorboardTimeSeries.create",
    "stage": "BETA",
    "title": "Create tensorboardTimeSeries"
  },
  {
    "description": "Delete tensorboardTimeSeries",
    "name": "aiplatform.tensorboardTimeSeries.delete",
    "stage": "BETA",
    "title": "Delete tensorboardTimeSeries"
  },
  {
    "description": "Get tensorboardTimeSeries",
    "name": "aiplatform.tensorboardTimeSeries.get",
    "stage": "BETA",
    "title": "Get tensorboardTimeSeries"
  },
  {
    "description": "List tensorboardTimeSeries under a project",
    "name": "aiplatform.tensorboardTimeSeries.list",
    "stage": "BETA",
    "title": "List tensorboardTimeSeries under a project"
  },
  {
    "description": "Read Tensorboard time series data",
    "name": "aiplatform.tensorboardTimeSeries.read",
    "stage": "BETA",
    "title": "Read Tensorboard time series data"
  },
  {
    "description": "Update tensorboardTimeSeries",
    "name": "aiplatform.tensorboardTimeSeries.update",
    "stage": "BETA",
    "title": "Update tensorboardTimeSeries"
  },
  {
    "description": "Create tensorboards",
    "name": "aiplatform.tensorboards.create",
    "stage": "BETA",
    "title": "Create tensorboards"
  },
  {
    "description": "Delete tensorboards",
    "name": "aiplatform.tensorboards.delete",
    "stage": "BETA",
    "title": "Delete tensorboards"
  },
  {
    "description": "Get tensorboards",
    "name": "aiplatform.tensorboards.get",
    "stage": "BETA",
    "title": "Get tensorboards"
  },
  {
    "description": "List tensorboards under a project",
    "name": "aiplatform.tensorboards.list",
    "stage": "BETA",
    "title": "List tensorboards under a project"
  },
  {
    "description": "Permission to access the Tensorboard web app for billing",
    "name": "aiplatform.tensorboards.recordAccess",
    "stage": "BETA",
    "title": "Access Tensorboard web app"
  },
  {
    "description": "Update tensorboards",
    "name": "aiplatform.tensorboards.update",
    "stage": "BETA",
    "title": "Update tensorboards"
  },
  {
    "apiDisabled": true,
    "description": "Cancel training pipelines",
    "name": "aiplatform.trainingPipelines.cancel",
    "stage": "GA",
    "title": "Cancel training pipelines"
  },
  {
    "apiDisabled": true,
    "description": "Create training pipelines",
    "name": "aiplatform.trainingPipelines.create",
    "stage": "GA",
    "title": "Create training pipelines"
  },
  {
    "apiDisabled": true,
    "description": "Delete training pipelines",
    "name": "aiplatform.trainingPipelines.delete",
    "stage": "GA",
    "title": "Delete training pipelines"
  },
  {
    "apiDisabled": true,
    "description": "Get training pipelines",
    "name": "aiplatform.trainingPipelines.get",
    "stage": "GA",
    "title": "Get training pipelines"
  },
  {
    "apiDisabled": true,
    "description": "List training pipelines under a project",
    "name": "aiplatform.trainingPipelines.list",
    "stage": "GA",
    "title": "List training pipelines under a project"
  },
  {
    "apiDisabled": true,
    "description": "Create trials",
    "name": "aiplatform.trials.create",
    "stage": "GA",
    "title": "Create trials"
  },
  {
    "apiDisabled": true,
    "description": "Delete trials",
    "name": "aiplatform.trials.delete",
    "stage": "GA",
    "title": "Delete trials"
  },
  {
    "apiDisabled": true,
    "description": "Get trials",
    "name": "aiplatform.trials.get",
    "stage": "GA",
    "title": "Get trials"
  },
  {
    "apiDisabled": true,
    "description": "List trials",
    "name": "aiplatform.trials.list",
    "stage": "GA",
    "title": "List trials"
  },
  {
    "apiDisabled": true,
    "description": "Update trials",
    "name": "aiplatform.trials.update",
    "stage": "GA",
    "title": "Update trials"
  },
  {
    "apiDisabled": true,
    "description": "Cancel GenAI tuning jobs",
    "name": "aiplatform.tuningJobs.cancel",
    "stage": "GA",
    "title": "Cancel GenAI tuning jobs"
  },
  {
    "apiDisabled": true,
    "description": "Create GenAI tuning jobs",
    "name": "aiplatform.tuningJobs.create",
    "stage": "GA",
    "title": "Create GenAI tuning jobs"
  },
  {
    "apiDisabled": true,
    "description": "Delete GenAI tuning jobs",
    "name": "aiplatform.tuningJobs.delete",
    "stage": "GA",
    "title": "Delete GenAI tuning jobs"
  },
  {
    "apiDisabled": true,
    "description": "Get GenAI tuning jobs",
    "name": "aiplatform.tuningJobs.get",
    "stage": "GA",
    "title": "Get GenAI tuning jobs"
  },
  {
    "apiDisabled": true,
    "description": "List GenAI tuning jobs under a project",
    "name": "aiplatform.tuningJobs.list",
    "stage": "GA",
    "title": "List GenAI tuning jobs under a project"
  },
  {
    "apiDisabled": true,
    "description": "Vertex Tuning GenAI tuning jobs",
    "name": "aiplatform.tuningJobs.vertexTune",
    "stage": "GA",
    "title": "Vertex Tuning GenAI tuning jobs"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.backups.create",
    "stage": "BETA",
    "title": "Create Backup"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.backups.createTagBinding",
    "stage": "BETA",
    "title": "Create Tag Binding on Backups"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.backups.delete",
    "stage": "BETA",
    "title": "Delete Backup"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.backups.deleteTagBinding",
    "stage": "BETA",
    "title": "Delete Tag Binding on Backups"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.backups.get",
    "stage": "BETA",
    "title": "Get Backup"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.backups.list",
    "stage": "BETA",
    "title": "List Backup"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.backups.listEffectiveTags",
    "stage": "BETA",
    "title": "List Effective Tag Bindings on Backups"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.backups.listTagBindings",
    "stage": "BETA",
    "title": "List Tag Bindings on Backups"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.backups.update",
    "stage": "BETA",
    "title": "Update Backup"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.create",
    "stage": "BETA",
    "title": "Create Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.createTagBinding",
    "stage": "BETA",
    "title": "Create Tag Binding on Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.delete",
    "stage": "BETA",
    "title": "Delete Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.deleteTagBinding",
    "stage": "BETA",
    "title": "Delete Tag Binding on Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.export",
    "stage": "BETA",
    "title": "Export Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.generateClientCertificate",
    "stage": "BETA",
    "title": "Generate certificates from Cluster CA."
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.get",
    "stage": "BETA",
    "title": "Get Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.import",
    "stage": "BETA",
    "title": "Import Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.list",
    "stage": "BETA",
    "title": "List Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.listEffectiveTags",
    "stage": "BETA",
    "title": "List Effective Tag Bindings on Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.listTagBindings",
    "stage": "BETA",
    "title": "List Tag Bindings on Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.promote",
    "stage": "BETA",
    "title": "Promote Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.switchover",
    "stage": "BETA",
    "title": "Switchover Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.update",
    "stage": "BETA",
    "title": "Update Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.clusters.upgrade",
    "stage": "BETA",
    "title": "Upgrade Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.databases.create",
    "stage": "BETA",
    "title": "Create Database in a Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.databases.get",
    "stage": "BETA",
    "title": "Get Database in a Cluster"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.databases.list",
    "stage": "BETA",
    "title": "List Database"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.instances.connect",
    "stage": "BETA",
    "title": "Connectivity to an Instance"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.instances.create",
    "stage": "BETA",
    "title": "Create Instance"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.instances.delete",
    "stage": "BETA",
    "title": "Delete Instance"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.instances.executeSql",
    "stage": "BETA",
    "title": "Execute SQL on Instance"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.instances.failover",
    "stage": "BETA",
    "title": "Failover Instance"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.instances.get",
    "stage": "BETA",
    "title": "Get Instance"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.instances.injectFault",
    "stage": "BETA",
    "title": "Inject Fault on Instance"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.instances.list",
    "stage": "BETA",
    "title": "List Instance"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.instances.restart",
    "stage": "BETA",
    "title": "Restart Instance"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.instances.update",
    "stage": "BETA",
    "title": "Update Instance"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.supportedDatabaseFlags.get",
    "stage": "BETA",
    "title": "Get SupportedDatabaseFlag"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.supportedDatabaseFlags.list",
    "stage": "BETA",
    "title": "List SupportedDatabaseFlag"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.users.create",
    "stage": "BETA",
    "title": "Create User"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.users.delete",
    "stage": "BETA",
    "title": "Delete User"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.users.get",
    "stage": "BETA",
    "title": "Get User"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.users.list",
    "stage": "BETA",
    "title": "List User"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.users.login",
    "stage": "BETA",
    "title": "Login as User"
  },
  {
    "apiDisabled": true,
    "name": "alloydb.users.update",
    "stage": "BETA",
    "title": "Update User"
  },
  {
    "name": "analyticshub.dataExchanges.create",
    "stage": "GA",
    "title": "Create DataExchange"
  },
  {
    "name": "analyticshub.dataExchanges.delete",
    "stage": "GA",
    "title": "Delete DataExchange"
  },
  {
    "name": "analyticshub.dataExchanges.get",
    "stage": "GA",
    "title": "Get DataExchange"
  },
  {
    "name": "analyticshub.dataExchanges.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on DataExchange"
  },
  {
    "name": "analyticshub.dataExchanges.list",
    "stage": "GA",
    "title": "List DataExchanges"
  },
  {
    "name": "analyticshub.dataExchanges.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on DataExchange"
  },
  {
    "name": "analyticshub.dataExchanges.subscribe",
    "stage": "GA",
    "title": "Subscribe to a DataExchange"
  },
  {
    "name": "analyticshub.dataExchanges.update",
    "stage": "GA",
    "title": "Update DataExchange"
  },
  {
    "name": "analyticshub.dataExchanges.viewSubscriptions",
    "stage": "GA",
    "title": "View Subscriptions to a DataExchange"
  },
  {
    "name": "analyticshub.listings.create",
    "stage": "GA",
    "title": "Create Listing"
  },
  {
    "name": "analyticshub.listings.delete",
    "stage": "GA",
    "title": "Delete Listing"
  },
  {
    "name": "analyticshub.listings.get",
    "stage": "GA",
    "title": "Get Listing"
  },
  {
    "name": "analyticshub.listings.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Listing"
  },
  {
    "name": "analyticshub.listings.list",
    "stage": "GA",
    "title": "List Listings"
  },
  {
    "name": "analyticshub.listings.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Listing"
  },
  {
    "name": "analyticshub.listings.subscribe",
    "stage": "GA",
    "title": "Subscribe to Listing"
  },
  {
    "name": "analyticshub.listings.update",
    "stage": "GA",
    "title": "Update Listing"
  },
  {
    "name": "analyticshub.listings.viewSubscriptions",
    "stage": "GA",
    "title": "View Subscriptions to a Listing"
  },
  {
    "name": "analyticshub.subscriptions.create",
    "stage": "GA",
    "title": "Create Subscription"
  },
  {
    "name": "analyticshub.subscriptions.delete",
    "stage": "GA",
    "title": "Delete Subscription"
  },
  {
    "name": "analyticshub.subscriptions.get",
    "stage": "GA",
    "title": "Get Subscription"
  },
  {
    "name": "analyticshub.subscriptions.list",
    "stage": "GA",
    "title": "List Subscriptions"
  },
  {
    "name": "analyticshub.subscriptions.update",
    "stage": "GA",
    "title": "Update Subscription"
  },
  {
    "apiDisabled": true,
    "name": "androidmanagement.enterprises.manage",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apiconfigs.create",
    "stage": "GA",
    "title": "Create ApiConfig"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apiconfigs.delete",
    "stage": "GA",
    "title": "Delete ApiConfig"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apiconfigs.get",
    "stage": "GA",
    "title": "Get ApiConfig"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apiconfigs.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on ApiConfig"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apiconfigs.list",
    "stage": "GA",
    "title": "List ApiConfigs"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apiconfigs.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on ApiConfig"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apiconfigs.update",
    "stage": "GA",
    "title": "Update ApiConfig"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apis.create",
    "stage": "GA",
    "title": "Create Api"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apis.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on Api"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apis.delete",
    "stage": "GA",
    "title": "Delete Api"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apis.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on Api"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apis.get",
    "stage": "GA",
    "title": "Get Api"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apis.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Api"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apis.list",
    "stage": "GA",
    "title": "List Apis"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apis.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on Api"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apis.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on Api"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apis.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Api"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.apis.update",
    "stage": "GA",
    "title": "Update Api"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.gateways.create",
    "stage": "GA",
    "title": "Create Gateway"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.gateways.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on Gateway"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.gateways.delete",
    "stage": "GA",
    "title": "Delete Gateway"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.gateways.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on Gateway"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.gateways.get",
    "stage": "GA",
    "title": "Get Gateway"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.gateways.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Gateway"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.gateways.list",
    "stage": "GA",
    "title": "List Gateways"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.gateways.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on Gateway"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.gateways.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on Gateway"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.gateways.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Gateway"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.gateways.update",
    "stage": "GA",
    "title": "Update Gateway"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "apigateway.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "apigee.addonsconfig.get",
    "stage": "GA",
    "title": "Get Apigee addons configuration"
  },
  {
    "apiDisabled": true,
    "name": "apigee.addonsconfig.update",
    "stage": "GA",
    "title": "Update Apigee addons configuration"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproductattributes.createOrUpdateAll",
    "stage": "GA",
    "title": "Create or Update All API Product Attributes"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproductattributes.delete",
    "stage": "GA",
    "title": "Delete an API Product Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproductattributes.get",
    "stage": "GA",
    "title": "Read an API Product Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproductattributes.list",
    "stage": "GA",
    "title": "List API Product Attributes"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproductattributes.update",
    "stage": "GA",
    "title": "Update an API Product Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproducts.create",
    "stage": "GA",
    "title": "Create an API Product"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproducts.delete",
    "stage": "GA",
    "title": "Delete an API Product"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproducts.get",
    "stage": "GA",
    "title": "Read an API Product"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproducts.list",
    "stage": "GA",
    "title": "List API Products"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apiproducts.update",
    "stage": "GA",
    "title": "Update an API Product"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appgroupapps.create",
    "stage": "GA",
    "title": "Create a AppGroup App"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appgroupapps.delete",
    "stage": "GA",
    "title": "Delete a AppGroup App"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appgroupapps.get",
    "stage": "GA",
    "title": "Read AppGroup Apps"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appgroupapps.list",
    "stage": "GA",
    "title": "List AppGroup Apps"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appgroupapps.manage",
    "stage": "GA",
    "title": "Update a AppGroup App"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appgroups.create",
    "stage": "GA",
    "title": "Create a AppGroup"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appgroups.delete",
    "stage": "GA",
    "title": "Delete a AppGroup"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appgroups.get",
    "stage": "GA",
    "title": "Get AppGroup Details "
  },
  {
    "apiDisabled": true,
    "name": "apigee.appgroups.list",
    "stage": "GA",
    "title": "List AppGroups"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appgroups.update",
    "stage": "GA",
    "title": "Update a AppGroup"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appkeys.create",
    "stage": "GA",
    "title": "Create Appgroup/Company/Developer App Key"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appkeys.delete",
    "stage": "GA",
    "title": "Delete a Appgroup/Company/Developer App Key"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appkeys.get",
    "stage": "GA",
    "title": "Get Appgroup/Company/Developer App Key"
  },
  {
    "apiDisabled": true,
    "name": "apigee.appkeys.manage",
    "stage": "GA",
    "title": "Update, Approve or Revoke a Appgroup/Company/Developer App Key"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apps.get",
    "stage": "GA",
    "title": "Get an App in an Apigee Organization"
  },
  {
    "apiDisabled": true,
    "name": "apigee.apps.list",
    "stage": "GA",
    "title": "List App IDs in an Apigee Organization"
  },
  {
    "apiDisabled": true,
    "name": "apigee.archivedeployments.create",
    "stage": "GA",
    "title": "Create a ArchiveDeployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.archivedeployments.delete",
    "stage": "GA",
    "title": "Delete a ArchiveDeployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.archivedeployments.download",
    "stage": "GA",
    "title": "Generate a ArchiveDeployment download URL"
  },
  {
    "apiDisabled": true,
    "name": "apigee.archivedeployments.get",
    "stage": "GA",
    "title": "Get a ArchiveDeployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.archivedeployments.list",
    "stage": "GA",
    "title": "List ArchiveDeployments"
  },
  {
    "apiDisabled": true,
    "name": "apigee.archivedeployments.update",
    "stage": "GA",
    "title": "Update a ArchiveDeployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.archivedeployments.upload",
    "stage": "GA",
    "title": "Generate a ArchiveDeployment upload URL"
  },
  {
    "apiDisabled": true,
    "name": "apigee.caches.delete",
    "stage": "GA",
    "title": "Delete Cache"
  },
  {
    "apiDisabled": true,
    "name": "apigee.caches.list",
    "stage": "GA",
    "title": "List Caches"
  },
  {
    "apiDisabled": true,
    "name": "apigee.canaryevaluations.create",
    "stage": "GA",
    "title": "Create a Canary Evaluation"
  },
  {
    "apiDisabled": true,
    "name": "apigee.canaryevaluations.get",
    "stage": "GA",
    "title": "Get a Canary Evaluation"
  },
  {
    "apiDisabled": true,
    "name": "apigee.datacollectors.create",
    "stage": "GA",
    "title": "Create a Data Collector"
  },
  {
    "apiDisabled": true,
    "name": "apigee.datacollectors.delete",
    "stage": "GA",
    "title": "Delete a Data Collector"
  },
  {
    "apiDisabled": true,
    "name": "apigee.datacollectors.get",
    "stage": "GA",
    "title": "Read a Data Collector"
  },
  {
    "apiDisabled": true,
    "name": "apigee.datacollectors.list",
    "stage": "GA",
    "title": "List Data Collectors"
  },
  {
    "apiDisabled": true,
    "name": "apigee.datacollectors.update",
    "stage": "GA",
    "title": "Update a Data Collector"
  },
  {
    "apiDisabled": true,
    "name": "apigee.datalocation.get",
    "stage": "GA",
    "title": "Get data location"
  },
  {
    "apiDisabled": true,
    "name": "apigee.datastores.create",
    "stage": "GA",
    "title": "Create an Analytics Datastore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.datastores.delete",
    "stage": "GA",
    "title": "Delete an Analytics Datastore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.datastores.get",
    "stage": "GA",
    "title": "Get an Analytics Datastore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.datastores.list",
    "stage": "GA",
    "title": "List Analytics Datastores"
  },
  {
    "apiDisabled": true,
    "name": "apigee.datastores.update",
    "stage": "GA",
    "title": "Update an Analytics Datastore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.deployments.create",
    "stage": "GA",
    "title": "Create a Deployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.deployments.delete",
    "stage": "GA",
    "title": "Delete a Deployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.deployments.get",
    "stage": "GA",
    "title": "Read a Deployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.deployments.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on a deployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.deployments.invoke",
    "stage": "GA",
    "title": "Invoke a deployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.deployments.list",
    "stage": "GA",
    "title": "List Deployments"
  },
  {
    "apiDisabled": true,
    "name": "apigee.deployments.setIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on a deployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.deployments.update",
    "stage": "GA",
    "title": "Update a Deployment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerappattributes.createOrUpdateAll",
    "stage": "GA",
    "title": "Create or Update All Developer App Attributes"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerappattributes.delete",
    "stage": "GA",
    "title": "Delete a Developer App Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerappattributes.get",
    "stage": "GA",
    "title": "Read a Developer App Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerappattributes.list",
    "stage": "GA",
    "title": "List Developer App Attributes"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerappattributes.update",
    "stage": "GA",
    "title": "Update a Developer App Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerapps.create",
    "stage": "GA",
    "title": "Create a Developer App"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerapps.delete",
    "stage": "GA",
    "title": "Delete a Developer App"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerapps.get",
    "stage": "GA",
    "title": "Read a Developer App"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerapps.list",
    "stage": "GA",
    "title": "List Developer Apps"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerapps.manage",
    "stage": "GA",
    "title": "Update, Approve or Revoke a Developer App"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerattributes.createOrUpdateAll",
    "stage": "GA",
    "title": "Create or Update All Developer Attributes"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerattributes.delete",
    "stage": "GA",
    "title": "Delete a Developer Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerattributes.get",
    "stage": "GA",
    "title": "Read a Developer Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerattributes.list",
    "stage": "GA",
    "title": "List Developer Attributes"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerattributes.update",
    "stage": "GA",
    "title": "Update a Developer Attribute"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerbalances.adjust",
    "stage": "GA",
    "title": "Adjust a developers balance"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerbalances.get",
    "stage": "GA",
    "title": "Get a developers balance"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developerbalances.update",
    "stage": "GA",
    "title": "Update a developers balance"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developermonetizationconfigs.get",
    "stage": "GA",
    "title": "Get a developers monetization configuration"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developermonetizationconfigs.update",
    "stage": "GA",
    "title": "Update a developers monetization configuration"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developers.create",
    "stage": "GA",
    "title": "Create a Developer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developers.delete",
    "stage": "GA",
    "title": "Delete a Developer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developers.get",
    "stage": "GA",
    "title": "Read a Developer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developers.list",
    "stage": "GA",
    "title": "List Developers"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developers.update",
    "stage": "GA",
    "title": "Update a Developer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developersubscriptions.create",
    "stage": "GA",
    "title": "Create a new subscription"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developersubscriptions.get",
    "stage": "GA",
    "title": "Get details of a subscription"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developersubscriptions.list",
    "stage": "GA",
    "title": "List all subscriptions"
  },
  {
    "apiDisabled": true,
    "name": "apigee.developersubscriptions.update",
    "stage": "GA",
    "title": "Update a subscription"
  },
  {
    "apiDisabled": true,
    "name": "apigee.dnsZones.create",
    "stage": "GA",
    "title": "Create a DnsZone"
  },
  {
    "apiDisabled": true,
    "name": "apigee.dnsZones.delete",
    "stage": "GA",
    "title": "Delete a DnsZone"
  },
  {
    "apiDisabled": true,
    "name": "apigee.dnsZones.get",
    "stage": "GA",
    "title": "Get a DnsZone"
  },
  {
    "apiDisabled": true,
    "name": "apigee.dnsZones.list",
    "stage": "GA",
    "title": "List DnsZones"
  },
  {
    "apiDisabled": true,
    "name": "apigee.endpointattachments.create",
    "stage": "GA",
    "title": "Create an EndpointAttachment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.endpointattachments.delete",
    "stage": "GA",
    "title": "Delete an EndpointAttachment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.endpointattachments.get",
    "stage": "GA",
    "title": "Get an EndpointAttachment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.endpointattachments.list",
    "stage": "GA",
    "title": "List EndpointAttachments"
  },
  {
    "apiDisabled": true,
    "name": "apigee.entitlements.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apigee.envgroupattachments.create",
    "stage": "GA",
    "title": "Create Environment Group Attachment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.envgroupattachments.delete",
    "stage": "GA",
    "title": "Delete Environment Group Attachment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.envgroupattachments.get",
    "stage": "GA",
    "title": "Get Environment Group Attachment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.envgroupattachments.list",
    "stage": "GA",
    "title": "List Environment Group Attachments"
  },
  {
    "apiDisabled": true,
    "name": "apigee.envgroups.create",
    "stage": "GA",
    "title": "Create Environment Group"
  },
  {
    "apiDisabled": true,
    "name": "apigee.envgroups.delete",
    "stage": "GA",
    "title": "Delete Environment Group"
  },
  {
    "apiDisabled": true,
    "name": "apigee.envgroups.get",
    "stage": "GA",
    "title": "Get Environment Group"
  },
  {
    "apiDisabled": true,
    "name": "apigee.envgroups.list",
    "stage": "GA",
    "title": "List Environment Group"
  },
  {
    "apiDisabled": true,
    "name": "apigee.envgroups.update",
    "stage": "GA",
    "title": "Update Environment Group"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.create",
    "stage": "GA",
    "title": "Create an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.delete",
    "stage": "GA",
    "title": "Delete an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.get",
    "stage": "GA",
    "title": "Get Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.getDataLocation",
    "stage": "GA",
    "title": "Get data location"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.getStats",
    "stage": "GA",
    "title": "Get Stats for an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.list",
    "stage": "GA",
    "title": "List Environments"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.manageRuntime",
    "stage": "GA",
    "title": "Manage the runtime of an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.environments.update",
    "stage": "GA",
    "title": "Update an Environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.exports.create",
    "stage": "GA",
    "title": "Create a Data Export"
  },
  {
    "apiDisabled": true,
    "name": "apigee.exports.get",
    "stage": "GA",
    "title": "Get a Data Export"
  },
  {
    "apiDisabled": true,
    "name": "apigee.exports.list",
    "stage": "GA",
    "title": "List Data Exports"
  },
  {
    "apiDisabled": true,
    "name": "apigee.flowhooks.attachSharedFlow",
    "stage": "GA",
    "title": "Attach Shared Flow to a Flowhook"
  },
  {
    "apiDisabled": true,
    "name": "apigee.flowhooks.detachSharedFlow",
    "stage": "GA",
    "title": "Detach Shared Flow from a Flowhook"
  },
  {
    "apiDisabled": true,
    "name": "apigee.flowhooks.getSharedFlow",
    "stage": "GA",
    "title": "Get a Shared Flow for a Flowhook"
  },
  {
    "apiDisabled": true,
    "name": "apigee.flowhooks.list",
    "stage": "GA",
    "title": "List Flowhooks"
  },
  {
    "apiDisabled": true,
    "name": "apigee.hostqueries.create",
    "stage": "GA",
    "title": "Create a Host Level Query"
  },
  {
    "apiDisabled": true,
    "name": "apigee.hostqueries.get",
    "stage": "GA",
    "title": "Get a Host Level Query"
  },
  {
    "apiDisabled": true,
    "name": "apigee.hostqueries.list",
    "stage": "GA",
    "title": "List Host Level Queries"
  },
  {
    "apiDisabled": true,
    "name": "apigee.hostsecurityreports.create",
    "stage": "GA",
    "title": "Create a Host Level Security Report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.hostsecurityreports.get",
    "stage": "GA",
    "title": "Get a Host Level Security Report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.hostsecurityreports.list",
    "stage": "GA",
    "title": "List Host Level Security Reports"
  },
  {
    "apiDisabled": true,
    "name": "apigee.hoststats.get",
    "stage": "GA",
    "title": "Get Host Level Stats"
  },
  {
    "apiDisabled": true,
    "name": "apigee.ingressconfigs.get",
    "stage": "GA",
    "title": "Get Ingress Config"
  },
  {
    "apiDisabled": true,
    "name": "apigee.instanceattachments.create",
    "stage": "GA",
    "title": "Create an Instance Attachment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.instanceattachments.delete",
    "stage": "GA",
    "title": "Delete an Instance Attachment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.instanceattachments.get",
    "stage": "GA",
    "title": "Read an Instance Attachment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.instanceattachments.list",
    "stage": "GA",
    "title": "List Instance Attachments"
  },
  {
    "apiDisabled": true,
    "name": "apigee.instances.create",
    "stage": "GA",
    "title": "Create an Instance"
  },
  {
    "apiDisabled": true,
    "name": "apigee.instances.delete",
    "stage": "GA",
    "title": "Delete an Instance"
  },
  {
    "apiDisabled": true,
    "name": "apigee.instances.get",
    "stage": "GA",
    "title": "Read an Instance"
  },
  {
    "apiDisabled": true,
    "name": "apigee.instances.list",
    "stage": "GA",
    "title": "List Instances"
  },
  {
    "apiDisabled": true,
    "name": "apigee.instances.reportStatus",
    "stage": "GA",
    "title": "Report Instance Status"
  },
  {
    "apiDisabled": true,
    "name": "apigee.instances.update",
    "stage": "GA",
    "title": "Update an Instance"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.create",
    "stage": "GA",
    "title": "Create Alias in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.delete",
    "stage": "GA",
    "title": "Delete Alias in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.exportCertificate",
    "stage": "GA",
    "title": "Export Certificate for an Alias in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.generateCSR",
    "stage": "GA",
    "title": "Generate CSR for an Alias in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.get",
    "stage": "GA",
    "title": "Get Alias in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.list",
    "stage": "GA",
    "title": "List Aliases in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystorealiases.update",
    "stage": "GA",
    "title": "Update Alias in a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystores.create",
    "stage": "GA",
    "title": "Create a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystores.delete",
    "stage": "GA",
    "title": "Delete a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystores.export",
    "stage": "GA",
    "title": "Export Certificate from Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystores.get",
    "stage": "GA",
    "title": "Get a Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keystores.list",
    "stage": "GA",
    "title": "List Keystore"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keyvaluemapentries.create",
    "stage": "GA",
    "title": "Create a key value map entry with its value"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keyvaluemapentries.delete",
    "stage": "GA",
    "title": "Delete a key value map entry"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keyvaluemapentries.get",
    "stage": "GA",
    "title": "Get a Key value map entry and its value"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keyvaluemapentries.list",
    "stage": "GA",
    "title": "List Keyvaluemap entries"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keyvaluemapentries.update",
    "stage": "GA",
    "title": "Update a key value map entry"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keyvaluemaps.create",
    "stage": "GA",
    "title": "Create a Keyvaluemap"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keyvaluemaps.delete",
    "stage": "GA",
    "title": "Delete a Keyvaluemap"
  },
  {
    "apiDisabled": true,
    "name": "apigee.keyvaluemaps.list",
    "stage": "GA",
    "title": "List Keyvaluemaps"
  },
  {
    "apiDisabled": true,
    "name": "apigee.maskconfigs.get",
    "stage": "GA",
    "title": "Get a Data Mask"
  },
  {
    "apiDisabled": true,
    "name": "apigee.maskconfigs.update",
    "stage": "GA",
    "title": "Get a Data Mask"
  },
  {
    "apiDisabled": true,
    "name": "apigee.nataddresses.activate",
    "stage": "GA",
    "title": "Activate a NAT Address"
  },
  {
    "apiDisabled": true,
    "name": "apigee.nataddresses.create",
    "stage": "GA",
    "title": "Create a NAT Address"
  },
  {
    "apiDisabled": true,
    "name": "apigee.nataddresses.delete",
    "stage": "GA",
    "title": "Delete a NAT Address"
  },
  {
    "apiDisabled": true,
    "name": "apigee.nataddresses.get",
    "stage": "GA",
    "title": "Read a NAT Address"
  },
  {
    "apiDisabled": true,
    "name": "apigee.nataddresses.list",
    "stage": "GA",
    "title": "List NAT Addresses"
  },
  {
    "apiDisabled": true,
    "name": "apigee.operations.get",
    "stage": "GA",
    "title": "Get an Operation"
  },
  {
    "apiDisabled": true,
    "name": "apigee.operations.list",
    "stage": "GA",
    "title": "List Operations"
  },
  {
    "apiDisabled": true,
    "name": "apigee.organizations.create",
    "stage": "GA",
    "title": "Create Apigee Organization"
  },
  {
    "apiDisabled": true,
    "name": "apigee.organizations.delete",
    "stage": "GA",
    "title": "Delete Apigee Organization"
  },
  {
    "apiDisabled": true,
    "name": "apigee.organizations.get",
    "stage": "GA",
    "title": "Get Apigee Organization"
  },
  {
    "apiDisabled": true,
    "name": "apigee.organizations.list",
    "stage": "GA",
    "title": "List Apigee Organizations"
  },
  {
    "apiDisabled": true,
    "name": "apigee.organizations.update",
    "stage": "GA",
    "title": "Update Apigee Organization"
  },
  {
    "apiDisabled": true,
    "name": "apigee.portals.create",
    "stage": "GA",
    "title": "Create a Portal resource"
  },
  {
    "apiDisabled": true,
    "name": "apigee.portals.delete",
    "stage": "GA",
    "title": "Delete a Portal resource"
  },
  {
    "apiDisabled": true,
    "name": "apigee.portals.get",
    "stage": "GA",
    "title": "Read a Portal resource"
  },
  {
    "apiDisabled": true,
    "name": "apigee.portals.list",
    "stage": "GA",
    "title": "List Portal resources"
  },
  {
    "apiDisabled": true,
    "name": "apigee.portals.update",
    "stage": "GA",
    "title": "Update a Portal resource"
  },
  {
    "apiDisabled": true,
    "name": "apigee.projectorganizations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apigee.projects.migrate",
    "stage": "GA",
    "title": "Migrate an Apigee Organization from Apigee Edge"
  },
  {
    "apiDisabled": true,
    "name": "apigee.projects.previewMigration",
    "stage": "GA",
    "title": "Preview migration of an Apigee Organization from Apigee Edge"
  },
  {
    "apiDisabled": true,
    "name": "apigee.projects.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxies.create",
    "stage": "GA",
    "title": "Create Proxy"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxies.delete",
    "stage": "GA",
    "title": "Delete Proxy"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxies.get",
    "stage": "GA",
    "title": "Get Proxy"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxies.list",
    "stage": "GA",
    "title": "List Proxies"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxies.update",
    "stage": "GA",
    "title": "Update Proxy"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxyrevisions.delete",
    "stage": "GA",
    "title": "Delete Proxy Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxyrevisions.deploy",
    "stage": "GA",
    "title": "Deploy Proxy Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxyrevisions.get",
    "stage": "GA",
    "title": "Get Proxy Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxyrevisions.list",
    "stage": "GA",
    "title": "List Proxy Revisions"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxyrevisions.undeploy",
    "stage": "GA",
    "title": "Undeploy Proxy Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.proxyrevisions.update",
    "stage": "GA",
    "title": "Update Proxy Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.queries.create",
    "stage": "GA",
    "title": "Create an Async Query"
  },
  {
    "apiDisabled": true,
    "name": "apigee.queries.get",
    "stage": "GA",
    "title": "Get an Async Query"
  },
  {
    "apiDisabled": true,
    "name": "apigee.queries.list",
    "stage": "GA",
    "title": "List Async Queries"
  },
  {
    "apiDisabled": true,
    "name": "apigee.rateplans.create",
    "stage": "GA",
    "title": "Create a Rate Plan"
  },
  {
    "apiDisabled": true,
    "name": "apigee.rateplans.delete",
    "stage": "GA",
    "title": "Delete a Rate Plan"
  },
  {
    "apiDisabled": true,
    "name": "apigee.rateplans.get",
    "stage": "GA",
    "title": "Get a Rate Plan"
  },
  {
    "apiDisabled": true,
    "name": "apigee.rateplans.list",
    "stage": "GA",
    "title": "List Rate Plans"
  },
  {
    "apiDisabled": true,
    "name": "apigee.rateplans.update",
    "stage": "GA",
    "title": "Update a Rate Plan"
  },
  {
    "apiDisabled": true,
    "name": "apigee.references.create",
    "stage": "GA",
    "title": "Create a Reference"
  },
  {
    "apiDisabled": true,
    "name": "apigee.references.delete",
    "stage": "GA",
    "title": "Delete a Reference"
  },
  {
    "apiDisabled": true,
    "name": "apigee.references.get",
    "stage": "GA",
    "title": "Get a Reference"
  },
  {
    "apiDisabled": true,
    "name": "apigee.references.list",
    "stage": "GA",
    "title": "List References"
  },
  {
    "apiDisabled": true,
    "name": "apigee.references.update",
    "stage": "GA",
    "title": "Update a Reference"
  },
  {
    "apiDisabled": true,
    "name": "apigee.reports.create",
    "stage": "GA",
    "title": "Create a Report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.reports.delete",
    "stage": "GA",
    "title": "Delete a Report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.reports.get",
    "stage": "GA",
    "title": "Get a Report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.reports.list",
    "stage": "GA",
    "title": "List Reports"
  },
  {
    "apiDisabled": true,
    "name": "apigee.reports.update",
    "stage": "GA",
    "title": "Update a Report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.resourcefiles.create",
    "stage": "GA",
    "title": "Create a Resourcefile"
  },
  {
    "apiDisabled": true,
    "name": "apigee.resourcefiles.delete",
    "stage": "GA",
    "title": "Delete a Resourcefile"
  },
  {
    "apiDisabled": true,
    "name": "apigee.resourcefiles.get",
    "stage": "GA",
    "title": "Get a Resourcefile"
  },
  {
    "apiDisabled": true,
    "name": "apigee.resourcefiles.list",
    "stage": "GA",
    "title": "List Resourcefiles"
  },
  {
    "apiDisabled": true,
    "name": "apigee.resourcefiles.update",
    "stage": "GA",
    "title": "Update a Resourcefile"
  },
  {
    "apiDisabled": true,
    "name": "apigee.runtimeconfigs.get",
    "stage": "GA",
    "title": "Get Runtime Config"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityActions.create",
    "stage": "GA",
    "title": "Create a Security action"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityActions.get",
    "stage": "GA",
    "title": "Get a Security action"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityActions.list",
    "stage": "GA",
    "title": "List Security actions"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityActions.update",
    "stage": "GA",
    "title": "Update a Security action"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityActionsConfig.get",
    "stage": "GA",
    "title": "Get a Security action config"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityActionsConfig.update",
    "stage": "GA",
    "title": "Update a Security action config"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityAssessmentResults.compute",
    "stage": "GA",
    "title": "Compute Security Assessment Results"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityFeedback.create",
    "stage": "GA",
    "title": "Create a Security Feedback report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityFeedback.delete",
    "stage": "GA",
    "title": "Delete a Security Feedback report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityFeedback.get",
    "stage": "GA",
    "title": "Get a Security Feedback report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityFeedback.list",
    "stage": "GA",
    "title": "List Security Feedback reports"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityFeedback.update",
    "stage": "GA",
    "title": "Update a Security Feedback report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityIncidents.get",
    "stage": "GA",
    "title": "Get a Security Incident"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityIncidents.list",
    "stage": "GA",
    "title": "List Security Incidents"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityIncidents.update",
    "stage": "GA",
    "title": "Update a Security Incident"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityMonitoringConditions.create",
    "stage": "GA",
    "title": "Create a security monitoring condition"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityMonitoringConditions.delete",
    "stage": "GA",
    "title": "Delete a security monitoring condition"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityMonitoringConditions.get",
    "stage": "GA",
    "title": "Get a security monitoring condition"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityMonitoringConditions.list",
    "stage": "GA",
    "title": "List security monitoring conditions"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityMonitoringConditions.update",
    "stage": "GA",
    "title": "Update a security monitoring condition"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityProfileEnvironments.computeScore",
    "stage": "GA",
    "title": "Compute score based on the security profile and environment"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityProfileEnvironments.create",
    "stage": "GA",
    "title": "Create security profile environment association"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityProfileEnvironments.delete",
    "stage": "GA",
    "title": "Delete security profile environment association"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityProfiles.create",
    "stage": "GA",
    "title": "Create a security profile"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityProfiles.delete",
    "stage": "GA",
    "title": "Delete a security profile"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityProfiles.get",
    "stage": "GA",
    "title": "Get a security profile"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityProfiles.list",
    "stage": "GA",
    "title": "List security profiles"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityProfiles.update",
    "stage": "GA",
    "title": "Update a security profile"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityProfilesV2.create",
    "stage": "GA",
    "title": "Create a security profile V2"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityProfilesV2.delete",
    "stage": "GA",
    "title": "Delete a security profile V2"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityProfilesV2.get",
    "stage": "GA",
    "title": "Get a security profile V2"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityProfilesV2.list",
    "stage": "GA",
    "title": "List security profiles V2"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityProfilesV2.update",
    "stage": "GA",
    "title": "Update a security profile V2"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securitySettings.get",
    "stage": "GA",
    "title": "Get a Security Settings setting"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securitySettings.update",
    "stage": "GA",
    "title": "Update a Security Settings setting"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityStats.queryTabularStats",
    "stage": "GA",
    "title": "Query API Security tabular statistics"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityStats.queryTimeSeriesStats",
    "stage": "GA",
    "title": "Query API Security timeseries statistics"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityreports.create",
    "stage": "GA",
    "title": "Create a Security Report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityreports.get",
    "stage": "GA",
    "title": "Get a Security Report"
  },
  {
    "apiDisabled": true,
    "name": "apigee.securityreports.list",
    "stage": "GA",
    "title": "List Security Reports"
  },
  {
    "apiDisabled": true,
    "name": "apigee.setupcontexts.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apigee.setupcontexts.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflowrevisions.delete",
    "stage": "GA",
    "title": "Delete a Shared Flow Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflowrevisions.deploy",
    "stage": "GA",
    "title": "Deploy a Shared Flow Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflowrevisions.get",
    "stage": "GA",
    "title": "Get a Shared Flow Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflowrevisions.list",
    "stage": "GA",
    "title": "List Shared Flow Revisions"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflowrevisions.undeploy",
    "stage": "GA",
    "title": "Undeploy a Shared Flow Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflowrevisions.update",
    "stage": "GA",
    "title": "Update a Shared Flow Revision"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflows.create",
    "stage": "GA",
    "title": "Create a Shared Flow"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflows.delete",
    "stage": "GA",
    "title": "Delete a Shared Flow"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflows.get",
    "stage": "GA",
    "title": "Get a Shared Flow"
  },
  {
    "apiDisabled": true,
    "name": "apigee.sharedflows.list",
    "stage": "GA",
    "title": "List Shared Flows"
  },
  {
    "apiDisabled": true,
    "name": "apigee.spaces.create",
    "stage": "GA",
    "title": "Create a Space"
  },
  {
    "apiDisabled": true,
    "name": "apigee.spaces.delete",
    "stage": "GA",
    "title": "Delete a Space"
  },
  {
    "apiDisabled": true,
    "name": "apigee.spaces.get",
    "stage": "GA",
    "title": "Get a Space"
  },
  {
    "apiDisabled": true,
    "name": "apigee.spaces.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM policy for a Space"
  },
  {
    "apiDisabled": true,
    "name": "apigee.spaces.list",
    "stage": "GA",
    "title": "List Spaces"
  },
  {
    "apiDisabled": true,
    "name": "apigee.spaces.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM policy for a Space"
  },
  {
    "apiDisabled": true,
    "name": "apigee.spaces.update",
    "stage": "GA",
    "title": "Update a Space"
  },
  {
    "apiDisabled": true,
    "name": "apigee.targetservers.create",
    "stage": "GA",
    "title": "Create a TargetServer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.targetservers.delete",
    "stage": "GA",
    "title": "Delete a TargetServer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.targetservers.get",
    "stage": "GA",
    "title": "Get a TargetServer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.targetservers.list",
    "stage": "GA",
    "title": "List TargetServers"
  },
  {
    "apiDisabled": true,
    "name": "apigee.targetservers.update",
    "stage": "GA",
    "title": "Update a TargetServer"
  },
  {
    "apiDisabled": true,
    "name": "apigee.traceconfig.get",
    "stage": "GA",
    "title": "Get Apigee Distributed Trace Configuration"
  },
  {
    "apiDisabled": true,
    "name": "apigee.traceconfig.update",
    "stage": "GA",
    "title": "Update Apigee Distributed Trace Configuration"
  },
  {
    "apiDisabled": true,
    "name": "apigee.traceconfigoverrides.create",
    "stage": "GA",
    "title": "Create an Apigee trace configuration override"
  },
  {
    "apiDisabled": true,
    "name": "apigee.traceconfigoverrides.delete",
    "stage": "GA",
    "title": "Delete an Apigee trace configuration override"
  },
  {
    "apiDisabled": true,
    "name": "apigee.traceconfigoverrides.get",
    "stage": "GA",
    "title": "Get an Apigee trace configuration override"
  },
  {
    "apiDisabled": true,
    "name": "apigee.traceconfigoverrides.list",
    "stage": "GA",
    "title": "List Apigee Trace Configuration Overrides"
  },
  {
    "apiDisabled": true,
    "name": "apigee.traceconfigoverrides.update",
    "stage": "GA",
    "title": "Update an Apigee trace configuration override"
  },
  {
    "apiDisabled": true,
    "name": "apigee.tracesessions.create",
    "stage": "GA",
    "title": "Create a Trace Session"
  },
  {
    "apiDisabled": true,
    "name": "apigee.tracesessions.delete",
    "stage": "GA",
    "title": "Delete a Trace Session"
  },
  {
    "apiDisabled": true,
    "name": "apigee.tracesessions.get",
    "stage": "GA",
    "title": "Get a Trace Session"
  },
  {
    "apiDisabled": true,
    "name": "apigee.tracesessions.list",
    "stage": "GA",
    "title": "List Trace Sessions"
  },
  {
    "apiDisabled": true,
    "name": "apigeeconnect.connections.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apigeeconnect.endpoints.connect",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.apis.create",
    "stage": "BETA",
    "title": "Create Api"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.apis.delete",
    "stage": "BETA",
    "title": "Delete Api"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.apis.get",
    "stage": "BETA",
    "title": "Get Api"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.apis.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Api"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.apis.list",
    "stage": "BETA",
    "title": "List Apis"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.apis.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Api"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.apis.update",
    "stage": "BETA",
    "title": "Update Api"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.artifacts.create",
    "stage": "BETA",
    "title": "Create Artifact"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.artifacts.delete",
    "stage": "BETA",
    "title": "Delete Artifact"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.artifacts.get",
    "stage": "BETA",
    "title": "Get Artifact"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.artifacts.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Artifact"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.artifacts.list",
    "stage": "BETA",
    "title": "List Artifact"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.artifacts.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Artifact"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.artifacts.update",
    "stage": "BETA",
    "title": "Update Artifact"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.deployments.create",
    "stage": "BETA",
    "title": "Create ApiDeployment"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.deployments.delete",
    "stage": "BETA",
    "title": "Delete ApiDeployment"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.deployments.get",
    "stage": "BETA",
    "title": "Get ApiDeployment"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.deployments.list",
    "stage": "BETA",
    "title": "List ApiDeployments"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.deployments.update",
    "stage": "BETA",
    "title": "Update ApiDeployment"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.instances.get",
    "stage": "BETA",
    "title": "Get Instance"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.instances.update",
    "stage": "BETA",
    "title": "Update Instance"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.specs.create",
    "stage": "BETA",
    "title": "Create ApiSpec"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.specs.delete",
    "stage": "BETA",
    "title": "Delete ApiSpec"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.specs.get",
    "stage": "BETA",
    "title": "Get ApiSpec"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.specs.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on ApiSpec"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.specs.list",
    "stage": "BETA",
    "title": "List ApiSpec"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.specs.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on ApiSpec"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.specs.update",
    "stage": "BETA",
    "title": "Update ApiSpec"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.versions.create",
    "stage": "BETA",
    "title": "Create ApiVersion"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.versions.delete",
    "stage": "BETA",
    "title": "Delete ApiVersion"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.versions.get",
    "stage": "BETA",
    "title": "Get ApiVersion"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.versions.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on ApiVersion"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.versions.list",
    "stage": "BETA",
    "title": "List ApiVersions"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.versions.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on ApiVersion"
  },
  {
    "apiDisabled": true,
    "name": "apigeeregistry.versions.update",
    "stage": "BETA",
    "title": "Update ApiVersion"
  },
  {
    "apiDisabled": true,
    "description": "Create ApiHubInstance",
    "name": "apihub.apiHubInstances.create",
    "stage": "BETA",
    "title": "Create ApiHubInstance"
  },
  {
    "apiDisabled": true,
    "description": "Delete ApiHubInstance",
    "name": "apihub.apiHubInstances.delete",
    "stage": "BETA",
    "title": "Delete ApiHubInstance"
  },
  {
    "apiDisabled": true,
    "description": "Get ApiHubInstance",
    "name": "apihub.apiHubInstances.get",
    "stage": "BETA",
    "title": "Get ApiHubInstance"
  },
  {
    "apiDisabled": true,
    "description": "Look up ApiHubInstances",
    "name": "apihub.apiHubInstances.list",
    "stage": "BETA",
    "title": "Look up ApiHubInstances"
  },
  {
    "apiDisabled": true,
    "description": "Update ApiHubInstance",
    "name": "apihub.apiHubInstances.update",
    "stage": "BETA",
    "title": "Update ApiHubInstance"
  },
  {
    "apiDisabled": true,
    "description": "Create API Operation",
    "name": "apihub.apiOperations.create",
    "stage": "BETA",
    "title": "Create API Operation"
  },
  {
    "apiDisabled": true,
    "description": "Delete API Operation",
    "name": "apihub.apiOperations.delete",
    "stage": "BETA",
    "title": "Delete API Operation"
  },
  {
    "apiDisabled": true,
    "description": "Get API Operations",
    "name": "apihub.apiOperations.get",
    "stage": "BETA",
    "title": "Get API Operations"
  },
  {
    "apiDisabled": true,
    "description": "List API operations",
    "name": "apihub.apiOperations.list",
    "stage": "BETA",
    "title": "List API operations"
  },
  {
    "apiDisabled": true,
    "description": "Update API Operation",
    "name": "apihub.apiOperations.update",
    "stage": "BETA",
    "title": "Update API Operation"
  },
  {
    "apiDisabled": true,
    "description": "Create API",
    "name": "apihub.apis.create",
    "stage": "BETA",
    "title": "Create API"
  },
  {
    "apiDisabled": true,
    "name": "apihub.apis.createTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Delete API",
    "name": "apihub.apis.delete",
    "stage": "BETA",
    "title": "Delete API"
  },
  {
    "apiDisabled": true,
    "name": "apihub.apis.deleteTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "GET API",
    "name": "apihub.apis.get",
    "stage": "BETA",
    "title": "GET API"
  },
  {
    "apiDisabled": true,
    "description": "List APIs",
    "name": "apihub.apis.list",
    "stage": "BETA",
    "title": "List APIs"
  },
  {
    "apiDisabled": true,
    "name": "apihub.apis.listEffectiveTags",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apihub.apis.listTagBindings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Update API",
    "name": "apihub.apis.update",
    "stage": "BETA",
    "title": "Update API"
  },
  {
    "apiDisabled": true,
    "description": "Create Attribute",
    "name": "apihub.attributes.create",
    "stage": "BETA",
    "title": "Create Attribute"
  },
  {
    "apiDisabled": true,
    "description": "Delete Attribute",
    "name": "apihub.attributes.delete",
    "stage": "BETA",
    "title": "Delete Attribute"
  },
  {
    "apiDisabled": true,
    "description": "Get Attribute",
    "name": "apihub.attributes.get",
    "stage": "BETA",
    "title": "Get Attribute"
  },
  {
    "apiDisabled": true,
    "description": "List Attribute",
    "name": "apihub.attributes.list",
    "stage": "BETA",
    "title": "List Attribute"
  },
  {
    "apiDisabled": true,
    "description": "Update Attribute",
    "name": "apihub.attributes.update",
    "stage": "BETA",
    "title": "Update Attribute"
  },
  {
    "apiDisabled": true,
    "description": "Create curation",
    "name": "apihub.curations.create",
    "stage": "BETA",
    "title": "Create curation"
  },
  {
    "apiDisabled": true,
    "description": "Delete curations",
    "name": "apihub.curations.delete",
    "stage": "BETA",
    "title": "Delete curations"
  },
  {
    "apiDisabled": true,
    "description": "Get curation",
    "name": "apihub.curations.get",
    "stage": "BETA",
    "title": "Get curation"
  },
  {
    "apiDisabled": true,
    "description": "List curations",
    "name": "apihub.curations.list",
    "stage": "BETA",
    "title": "List curations"
  },
  {
    "apiDisabled": true,
    "description": "Update curation",
    "name": "apihub.curations.update",
    "stage": "BETA",
    "title": "Update curation"
  },
  {
    "apiDisabled": true,
    "description": "Get Definitions",
    "name": "apihub.definitions.get",
    "stage": "BETA",
    "title": "Get Definitions"
  },
  {
    "apiDisabled": true,
    "description": "List Definitions",
    "name": "apihub.definitions.list",
    "stage": "BETA",
    "title": "List Definitions"
  },
  {
    "apiDisabled": true,
    "description": "Update Definition",
    "name": "apihub.definitions.update",
    "stage": "BETA",
    "title": "Update Definition"
  },
  {
    "apiDisabled": true,
    "description": "Create Dependency",
    "name": "apihub.dependencies.create",
    "stage": "BETA",
    "title": "Create Dependency"
  },
  {
    "apiDisabled": true,
    "description": "Delete Dependency",
    "name": "apihub.dependencies.delete",
    "stage": "BETA",
    "title": "Delete Dependency"
  },
  {
    "apiDisabled": true,
    "description": "Get Dependency",
    "name": "apihub.dependencies.get",
    "stage": "BETA",
    "title": "Get Dependency"
  },
  {
    "apiDisabled": true,
    "description": "List Dependency",
    "name": "apihub.dependencies.list",
    "stage": "BETA",
    "title": "List Dependency"
  },
  {
    "apiDisabled": true,
    "description": "Update Dependency",
    "name": "apihub.dependencies.update",
    "stage": "BETA",
    "title": "Update Dependency"
  },
  {
    "apiDisabled": true,
    "description": "Create Deployment",
    "name": "apihub.deployments.create",
    "stage": "BETA",
    "title": "Create Deployment"
  },
  {
    "apiDisabled": true,
    "name": "apihub.deployments.createTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Delete Deployment",
    "name": "apihub.deployments.delete",
    "stage": "BETA",
    "title": "Delete Deployment"
  },
  {
    "apiDisabled": true,
    "name": "apihub.deployments.deleteTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Get Deployment",
    "name": "apihub.deployments.get",
    "stage": "BETA",
    "title": "Get Deployment"
  },
  {
    "apiDisabled": true,
    "description": "List Deployment",
    "name": "apihub.deployments.list",
    "stage": "BETA",
    "title": "List Deployment"
  },
  {
    "apiDisabled": true,
    "name": "apihub.deployments.listEffectiveTags",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apihub.deployments.listTagBindings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Update Deployment",
    "name": "apihub.deployments.update",
    "stage": "BETA",
    "title": "Update Deployment"
  },
  {
    "apiDisabled": true,
    "description": "Get Discovered API Observation",
    "name": "apihub.discoveredApiObservations.get",
    "stage": "BETA",
    "title": "Get Discovered API Observation"
  },
  {
    "apiDisabled": true,
    "description": "List Discovered API Observations",
    "name": "apihub.discoveredApiObservations.list",
    "stage": "BETA",
    "title": "List Discovered API Observations"
  },
  {
    "apiDisabled": true,
    "description": "Get Discovered API Operation",
    "name": "apihub.discoveredApiOperations.get",
    "stage": "BETA",
    "title": "Get Discovered API Operation"
  },
  {
    "apiDisabled": true,
    "description": "List Discovered API Operations",
    "name": "apihub.discoveredApiOperations.list",
    "stage": "BETA",
    "title": "List Discovered API Operations"
  },
  {
    "apiDisabled": true,
    "description": "Create ExternalAPI",
    "name": "apihub.externalApis.create",
    "stage": "BETA",
    "title": "Create ExternalAPI"
  },
  {
    "apiDisabled": true,
    "description": "Delete ExternalAPI",
    "name": "apihub.externalApis.delete",
    "stage": "BETA",
    "title": "Delete ExternalAPI"
  },
  {
    "apiDisabled": true,
    "description": "Get ExternalAPI",
    "name": "apihub.externalApis.get",
    "stage": "BETA",
    "title": "Get ExternalAPI"
  },
  {
    "apiDisabled": true,
    "description": "List ExternalAPI",
    "name": "apihub.externalApis.list",
    "stage": "BETA",
    "title": "List ExternalAPI"
  },
  {
    "apiDisabled": true,
    "description": "Update ExternalAPI",
    "name": "apihub.externalApis.update",
    "stage": "BETA",
    "title": "Update ExternalAPI"
  },
  {
    "apiDisabled": true,
    "description": "Create HostProject Registration",
    "name": "apihub.hostProjectRegistrations.create",
    "stage": "BETA",
    "title": "Create HostProject Registration"
  },
  {
    "apiDisabled": true,
    "description": "Delete HostProject Registration",
    "name": "apihub.hostProjectRegistrations.delete",
    "stage": "BETA",
    "title": "Delete HostProject Registration"
  },
  {
    "apiDisabled": true,
    "description": "Get HostProject Registration",
    "name": "apihub.hostProjectRegistrations.get",
    "stage": "BETA",
    "title": "Get HostProject Registration"
  },
  {
    "apiDisabled": true,
    "description": "List HostProjects",
    "name": "apihub.hostProjectRegistrations.list",
    "stage": "BETA",
    "title": "List HostProjects"
  },
  {
    "apiDisabled": true,
    "description": "Register HostProject",
    "name": "apihub.hostProjectRegistrations.register",
    "stage": "BETA",
    "title": "Register HostProject"
  },
  {
    "apiDisabled": true,
    "description": "Deregister LLM Enablement",
    "name": "apihub.llmEnablements.deregister",
    "stage": "BETA",
    "title": "Deregister LLM Enablement"
  },
  {
    "apiDisabled": true,
    "description": "Get LLM Enablement",
    "name": "apihub.llmEnablements.get",
    "stage": "BETA",
    "title": "Get LLM Enablement"
  },
  {
    "apiDisabled": true,
    "description": "List LLM Enablement",
    "name": "apihub.llmEnablements.list",
    "stage": "BETA",
    "title": "List LLM Enablement"
  },
  {
    "apiDisabled": true,
    "description": "Register LLM Enablement",
    "name": "apihub.llmEnablements.register",
    "stage": "BETA",
    "title": "Register LLM Enablement"
  },
  {
    "apiDisabled": true,
    "description": "Collect API Data",
    "name": "apihub.locations.collectApiData",
    "stage": "BETA",
    "title": "Collect API Data"
  },
  {
    "apiDisabled": true,
    "description": "Search Resources",
    "name": "apihub.locations.searchResources",
    "stage": "BETA",
    "title": "Search Resources"
  },
  {
    "apiDisabled": true,
    "description": "Search Resources",
    "name": "apihub.locations2.searchResources",
    "stage": "BETA",
    "title": "Search Resources"
  },
  {
    "apiDisabled": true,
    "name": "apihub.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "apihub.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "apihub.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "apihub.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "description": "Apply config on Plugin Instance",
    "name": "apihub.plugininstances.applyConfig",
    "stage": "BETA",
    "title": "Apply config on Plugin Instance"
  },
  {
    "apiDisabled": true,
    "description": "Create Plugin Instance",
    "name": "apihub.plugininstances.create",
    "stage": "BETA",
    "title": "Create Plugin Instance"
  },
  {
    "apiDisabled": true,
    "description": "Delete Plugin Instance",
    "name": "apihub.plugininstances.delete",
    "stage": "BETA",
    "title": "Delete Plugin Instance"
  },
  {
    "apiDisabled": true,
    "description": "Disable Plugin Instance",
    "name": "apihub.plugininstances.disable",
    "stage": "BETA",
    "title": "Disable Plugin Instance"
  },
  {
    "apiDisabled": true,
    "description": "Enable Plugin Instance",
    "name": "apihub.plugininstances.enable",
    "stage": "BETA",
    "title": "Enable Plugin Instance"
  },
  {
    "apiDisabled": true,
    "description": "Execute Plugin Instance",
    "name": "apihub.plugininstances.execute",
    "stage": "BETA",
    "title": "Execute Plugin Instance"
  },
  {
    "apiDisabled": true,
    "description": "Get Plugin Instance",
    "name": "apihub.plugininstances.get",
    "stage": "BETA",
    "title": "Get Plugin Instance"
  },
  {
    "apiDisabled": true,
    "description": "List Plugin Instances",
    "name": "apihub.plugininstances.list",
    "stage": "BETA",
    "title": "List Plugin Instances"
  },
  {
    "apiDisabled": true,
    "description": "Update Plugin Instance",
    "name": "apihub.plugininstances.update",
    "stage": "BETA",
    "title": "Update Plugin Instance"
  },
  {
    "apiDisabled": true,
    "description": "Create Plugin",
    "name": "apihub.plugins.create",
    "stage": "BETA",
    "title": "Create Plugin"
  },
  {
    "apiDisabled": true,
    "description": "Delete plugin",
    "name": "apihub.plugins.delete",
    "stage": "BETA",
    "title": "Delete plugin"
  },
  {
    "apiDisabled": true,
    "description": "Disable plugin",
    "name": "apihub.plugins.disable",
    "stage": "BETA",
    "title": "Disable plugin"
  },
  {
    "apiDisabled": true,
    "description": "Enable plugin",
    "name": "apihub.plugins.enable",
    "stage": "BETA",
    "title": "Enable plugin"
  },
  {
    "apiDisabled": true,
    "description": "Get Plugin",
    "name": "apihub.plugins.get",
    "stage": "BETA",
    "title": "Get Plugin"
  },
  {
    "apiDisabled": true,
    "description": "List Plugin",
    "name": "apihub.plugins.list",
    "stage": "BETA",
    "title": "List Plugin"
  },
  {
    "apiDisabled": true,
    "description": "Attach RuntimeProjectAttachment",
    "name": "apihub.runTimeProjectAttachments.attach",
    "stage": "BETA",
    "title": "Attach RuntimeProjectAttachment"
  },
  {
    "apiDisabled": true,
    "description": "Create RuntimeProjectAttachment",
    "name": "apihub.runTimeProjectAttachments.create",
    "stage": "BETA",
    "title": "Create RuntimeProjectAttachment"
  },
  {
    "apiDisabled": true,
    "description": "Delete RuntimeProjectAttachment",
    "name": "apihub.runTimeProjectAttachments.delete",
    "stage": "BETA",
    "title": "Delete RuntimeProjectAttachment"
  },
  {
    "apiDisabled": true,
    "description": "Get RuntimeProjectAttachment",
    "name": "apihub.runTimeProjectAttachments.get",
    "stage": "BETA",
    "title": "Get RuntimeProjectAttachment"
  },
  {
    "apiDisabled": true,
    "description": "List RuntimeProjectAttachment",
    "name": "apihub.runTimeProjectAttachments.list",
    "stage": "BETA",
    "title": "List RuntimeProjectAttachment"
  },
  {
    "apiDisabled": true,
    "description": "Lookup RuntimeProjectAttachment",
    "name": "apihub.runTimeProjectAttachments.lookup",
    "stage": "BETA",
    "title": "Lookup RuntimeProjectAttachment"
  },
  {
    "apiDisabled": true,
    "description": "Create Spec files",
    "name": "apihub.specs.create",
    "stage": "BETA",
    "title": "Create Spec files"
  },
  {
    "apiDisabled": true,
    "description": "Delete Spec files",
    "name": "apihub.specs.delete",
    "stage": "BETA",
    "title": "Delete Spec files"
  },
  {
    "apiDisabled": true,
    "description": "Get Spec files",
    "name": "apihub.specs.get",
    "stage": "BETA",
    "title": "Get Spec files"
  },
  {
    "apiDisabled": true,
    "description": "Lint Spec file",
    "name": "apihub.specs.lint",
    "stage": "BETA",
    "title": "Lint Spec file"
  },
  {
    "apiDisabled": true,
    "description": "List Spec files",
    "name": "apihub.specs.list",
    "stage": "BETA",
    "title": "List Spec files"
  },
  {
    "apiDisabled": true,
    "description": "Update Spec files",
    "name": "apihub.specs.update",
    "stage": "BETA",
    "title": "Update Spec files"
  },
  {
    "apiDisabled": true,
    "description": "Get sytle guide contents",
    "name": "apihub.styleGuides.get",
    "stage": "BETA",
    "title": "Get sytle guide contents"
  },
  {
    "apiDisabled": true,
    "description": "Update sytle guide",
    "name": "apihub.styleGuides.update",
    "stage": "BETA",
    "title": "Update sytle guide"
  },
  {
    "apiDisabled": true,
    "description": "Create API versions",
    "name": "apihub.versions.create",
    "stage": "BETA",
    "title": "Create API versions"
  },
  {
    "apiDisabled": true,
    "description": "Delete API versions",
    "name": "apihub.versions.delete",
    "stage": "BETA",
    "title": "Delete API versions"
  },
  {
    "apiDisabled": true,
    "description": "Get API versions",
    "name": "apihub.versions.get",
    "stage": "BETA",
    "title": "Get API versions"
  },
  {
    "apiDisabled": true,
    "description": "List API versions",
    "name": "apihub.versions.list",
    "stage": "BETA",
    "title": "List API versions"
  },
  {
    "apiDisabled": true,
    "description": "Update API versions",
    "name": "apihub.versions.update",
    "stage": "BETA",
    "title": "Update API versions"
  },
  {
    "name": "apikeys.keys.create",
    "stage": "BETA",
    "title": "Create a new API key"
  },
  {
    "name": "apikeys.keys.delete",
    "stage": "BETA",
    "title": "Delete an API key"
  },
  {
    "name": "apikeys.keys.get",
    "stage": "BETA",
    "title": "Get API key details"
  },
  {
    "name": "apikeys.keys.getKeyString",
    "stage": "GA",
    "title": "Get API Key string only"
  },
  {
    "name": "apikeys.keys.list",
    "stage": "BETA",
    "title": "List API keys"
  },
  {
    "name": "apikeys.keys.lookup",
    "stage": "BETA",
    "title": "Get parent and name for the corresponding key"
  },
  {
    "name": "apikeys.keys.undelete",
    "stage": "GA",
    "title": "Undelete an API key"
  },
  {
    "name": "apikeys.keys.update",
    "stage": "BETA",
    "title": "Update API key details"
  },
  {
    "apiDisabled": true,
    "name": "apim.apiObservations.batchEditTags",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.apiObservations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.apiObservations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.apiOperations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.apiOperations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.entitlements.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.locations.listApiObservationTags",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.observationJobs.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.observationJobs.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.observationJobs.disable",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.observationJobs.enable",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.observationJobs.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.observationJobs.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.observationSources.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.observationSources.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.observationSources.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.observationSources.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "apim.operations.list",
    "stage": "BETA"
  },
  {
    "name": "appengine.applications.create",
    "stage": "GA"
  },
  {
    "name": "appengine.applications.get",
    "stage": "GA"
  },
  {
    "name": "appengine.applications.listRuntimes",
    "stage": "GA"
  },
  {
    "name": "appengine.applications.update",
    "stage": "GA"
  },
  {
    "name": "appengine.instances.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "appengine.instances.enableDebug",
    "stage": "GA"
  },
  {
    "name": "appengine.instances.get",
    "stage": "GA"
  },
  {
    "name": "appengine.instances.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "appengine.memcache.addKey",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "appengine.memcache.flush",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "appengine.memcache.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "appengine.memcache.getKey",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "appengine.memcache.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "appengine.memcache.update",
    "stage": "BETA"
  },
  {
    "name": "appengine.operations.get",
    "stage": "GA"
  },
  {
    "name": "appengine.operations.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "appengine.runtimes.actAsAdmin",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "name": "appengine.services.delete",
    "stage": "GA"
  },
  {
    "name": "appengine.services.get",
    "stage": "GA"
  },
  {
    "name": "appengine.services.list",
    "stage": "GA"
  },
  {
    "name": "appengine.services.update",
    "stage": "GA"
  },
  {
    "name": "appengine.versions.create",
    "stage": "GA"
  },
  {
    "name": "appengine.versions.delete",
    "stage": "GA"
  },
  {
    "name": "appengine.versions.get",
    "stage": "GA"
  },
  {
    "name": "appengine.versions.getFileContents",
    "stage": "GA"
  },
  {
    "name": "appengine.versions.list",
    "stage": "GA"
  },
  {
    "name": "appengine.versions.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.applications.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.applications.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.applications.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.applications.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.applications.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.applications.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.applications.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.discoveredServices.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.discoveredServices.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.discoveredServices.register",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.discoveredWorkloads.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.discoveredWorkloads.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.discoveredWorkloads.register",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.operations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.serviceProjectAttachments.attach",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.serviceProjectAttachments.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.serviceProjectAttachments.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.serviceProjectAttachments.detach",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.serviceProjectAttachments.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.serviceProjectAttachments.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.serviceProjectAttachments.lookup",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.services.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.services.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.services.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.services.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.services.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.workloads.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.workloads.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.workloads.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.workloads.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "apphub.workloads.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Approve an RTT command to be run on the appliance",
    "name": "applianceactivation.rttCommands.approve",
    "stage": "BETA",
    "title": "Approve RTT commands"
  },
  {
    "apiDisabled": true,
    "description": "Create new RTT commands",
    "name": "applianceactivation.rttCommands.create",
    "stage": "BETA",
    "title": "Create new RTT commands"
  },
  {
    "apiDisabled": true,
    "description": "Get an RTT command",
    "name": "applianceactivation.rttCommands.get",
    "stage": "BETA",
    "title": "Get an RTT command"
  },
  {
    "apiDisabled": true,
    "description": "List all RTT commands for an appliance",
    "name": "applianceactivation.rttCommands.list",
    "stage": "BETA",
    "title": "List all RTT commands for an appliance"
  },
  {
    "apiDisabled": true,
    "description": "Send the result obtained from executing the RTT command",
    "name": "applianceactivation.rttCommands.sendResult",
    "stage": "BETA",
    "title": "Send RTT command result"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.aptartifacts.create",
    "stage": "GA",
    "title": "Create Apt Artifacts in a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.attachments.create",
    "stage": "GA",
    "title": "Create Attachments in a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.attachments.delete",
    "stage": "GA",
    "title": "Delete Attachment"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.attachments.get",
    "stage": "GA",
    "title": "Get Attachment"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.attachments.list",
    "stage": "GA",
    "title": "List Attachments in a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.dockerimages.get",
    "stage": "GA",
    "title": "Get Docker Image"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.dockerimages.list",
    "stage": "GA",
    "title": "List Docker Images"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.files.delete",
    "stage": "GA",
    "title": "Delete File"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.files.download",
    "stage": "GA",
    "title": "Download File"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.files.get",
    "stage": "GA",
    "title": "Get File"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.files.list",
    "stage": "GA",
    "title": "List Files"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.files.update",
    "stage": "GA",
    "title": "Update File"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.files.upload",
    "stage": "GA",
    "title": "Upload File"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.kfpartifacts.create",
    "stage": "GA",
    "title": "Create KFP Artifacts in a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.mavenartifacts.get",
    "stage": "GA",
    "title": "Get Maven Artifact"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.mavenartifacts.list",
    "stage": "GA",
    "title": "List Maven Artifacts"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.npmpackages.get",
    "stage": "GA",
    "title": "Get NPM Package"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.npmpackages.list",
    "stage": "GA",
    "title": "List NPM Packages"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.packages.delete",
    "stage": "GA",
    "title": "Delete Package"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.packages.get",
    "stage": "GA",
    "title": "Get Package"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.packages.list",
    "stage": "GA",
    "title": "List Packages"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.packages.update",
    "stage": "GA",
    "title": "Update Package"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.projectsettings.get",
    "stage": "GA",
    "title": "Get Project Settings"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.projectsettings.update",
    "stage": "GA",
    "title": "Update Project Settings"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.pythonpackages.get",
    "stage": "GA",
    "title": "Get Python Package"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.pythonpackages.list",
    "stage": "GA",
    "title": "List Python Packages"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.create",
    "stage": "GA",
    "title": "Create Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.createOnPush",
    "stage": "GA",
    "title": "Create Repository on Push"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.createTagBinding",
    "stage": "GA",
    "title": "Attach Tag to a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.delete",
    "stage": "GA",
    "title": "Delete Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.deleteArtifacts",
    "stage": "GA",
    "title": "Delete Artifacts from a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.deleteTagBinding",
    "stage": "GA",
    "title": "Detach Tag from a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.downloadArtifacts",
    "stage": "GA",
    "title": "Download Artifacts from a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.get",
    "stage": "GA",
    "title": "Get Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.getIamPolicy",
    "stage": "GA",
    "title": "Get a Repository IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.list",
    "stage": "GA",
    "title": "List Repositories"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.readViaVirtualRepository",
    "stage": "GA",
    "title": "Read data from this repository via Virtual Repositories"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.setIamPolicy",
    "stage": "GA",
    "title": "Set a Repository IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.update",
    "stage": "GA",
    "title": "Update Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.repositories.uploadArtifacts",
    "stage": "GA",
    "title": "Upload Artifacts into a Repository"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.rules.create",
    "stage": "GA",
    "title": "Create Rule"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.rules.delete",
    "stage": "GA",
    "title": "Delete Rule"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.rules.get",
    "stage": "GA",
    "title": "Get Rule"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.rules.list",
    "stage": "GA",
    "title": "List Rules"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.rules.update",
    "stage": "GA",
    "title": "Update Rule"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.tags.create",
    "stage": "GA",
    "title": "Create Tag"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.tags.delete",
    "stage": "GA",
    "title": "Delete Tag"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.tags.get",
    "stage": "GA",
    "title": "Get Tag"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.tags.list",
    "stage": "GA",
    "title": "List Tags"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.tags.update",
    "stage": "GA",
    "title": "Update Tag"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.versions.delete",
    "stage": "GA",
    "title": "Delete Version"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.versions.get",
    "stage": "GA",
    "title": "Get Version"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.versions.list",
    "stage": "GA",
    "title": "List Versions"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.versions.update",
    "stage": "GA",
    "title": "Update Version"
  },
  {
    "apiDisabled": true,
    "name": "artifactregistry.yumartifacts.create",
    "stage": "GA",
    "title": "Create Yum Artifacts in a Repository"
  },
  {
    "name": "assuredoss.config.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "assuredoss.customers.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "assuredoss.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "assuredoss.locations.list",
    "stage": "GA"
  },
  {
    "name": "assuredoss.metadata.get",
    "stage": "BETA"
  },
  {
    "name": "assuredoss.metadata.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "assuredoss.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "assuredoss.operations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "assuredoss.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "assuredoss.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Allows generation of Audit Reports.",
    "name": "auditmanager.auditReports.generate",
    "stage": "BETA",
    "title": "Generate Audit Report"
  },
  {
    "apiDisabled": true,
    "description": "Allows to fetch an Audit Report.",
    "name": "auditmanager.auditReports.get",
    "stage": "BETA",
    "title": "Get Audit Reports"
  },
  {
    "apiDisabled": true,
    "description": "Allows to list Audit Reports.",
    "name": "auditmanager.auditReports.list",
    "stage": "BETA",
    "title": "List Audit Reports"
  },
  {
    "apiDisabled": true,
    "description": "Allows generation of Audit Scope Reports.",
    "name": "auditmanager.auditScopeReports.generate",
    "stage": "BETA",
    "title": "Generate Audit Scope Report"
  },
  {
    "apiDisabled": true,
    "description": "Allows to get Billing Settings for the resource.",
    "name": "auditmanager.billingSettings.get",
    "stage": "BETA",
    "title": "Get Billing Settings"
  },
  {
    "apiDisabled": true,
    "description": "Allows to fetch a control audit report.",
    "name": "auditmanager.controlReports.get",
    "stage": "BETA",
    "title": "Get Control Audit Report"
  },
  {
    "apiDisabled": true,
    "description": "Allows to list Control Reports for an audit.",
    "name": "auditmanager.controlReports.list",
    "stage": "BETA",
    "title": "List Control Reports"
  },
  {
    "apiDisabled": true,
    "description": "Allows to list controls",
    "name": "auditmanager.controls.list",
    "stage": "BETA",
    "title": "List Controls"
  },
  {
    "apiDisabled": true,
    "description": "Allows to create a custom compliance framework.",
    "name": "auditmanager.customComplianceFrameworks.create",
    "stage": "BETA",
    "title": "Create Custom Compliance Framework"
  },
  {
    "apiDisabled": true,
    "description": "Allows to delete a custom compliance framework.",
    "name": "auditmanager.customComplianceFrameworks.delete",
    "stage": "BETA",
    "title": "Delete Custom Compliance Framework"
  },
  {
    "apiDisabled": true,
    "description": "Allows to get a custom compliance framework.",
    "name": "auditmanager.customComplianceFrameworks.get",
    "stage": "BETA",
    "title": "Get Custom Compliance Framework"
  },
  {
    "apiDisabled": true,
    "description": "Allows to list custom compliance frameworks.",
    "name": "auditmanager.customComplianceFrameworks.list",
    "stage": "BETA",
    "title": "List Custom Compliance Frameworks"
  },
  {
    "apiDisabled": true,
    "description": "Allows to update a custom compliance framework.",
    "name": "auditmanager.customComplianceFrameworks.update",
    "stage": "BETA",
    "title": "Update Custom Compliance Framework"
  },
  {
    "apiDisabled": true,
    "description": "Allows to fetch a finding.",
    "name": "auditmanager.findings.get",
    "stage": "BETA",
    "title": "Get Finding"
  },
  {
    "apiDisabled": true,
    "description": "Allows to list findings.",
    "name": "auditmanager.findings.list",
    "stage": "BETA",
    "title": "List Findings"
  },
  {
    "apiDisabled": true,
    "description": "Allows enrolling resources of a project/folder/organization for auditing in audit manager.",
    "name": "auditmanager.locations.enrollResource",
    "stage": "BETA",
    "title": "Enroll Resources in Audit Manager."
  },
  {
    "apiDisabled": true,
    "name": "auditmanager.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "auditmanager.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "auditmanager.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "auditmanager.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Allows to fetch a Resource with Enrollment.",
    "name": "auditmanager.resourceEnrollmentStatuses.get",
    "stage": "BETA",
    "title": "Get Resources with Enrollment"
  },
  {
    "apiDisabled": true,
    "description": "Allows to list Resources with Enrollment.",
    "name": "auditmanager.resourceEnrollmentStatuses.list",
    "stage": "BETA",
    "title": "List Resources with Enrollment"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotationSpecs.create",
    "stage": "BETA",
    "title": "Create annotation specs"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotationSpecs.delete",
    "stage": "BETA",
    "title": "Delete annotation specs"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotationSpecs.get",
    "stage": "BETA",
    "title": "Get annotation specs"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotationSpecs.list",
    "stage": "BETA",
    "title": "List annotation specs"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotationSpecs.update",
    "stage": "BETA",
    "title": "Update annotation spec"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotations.approve",
    "stage": "BETA",
    "title": "Approve annotations"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotations.create",
    "stage": "BETA",
    "title": "Create annotations"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotations.list",
    "stage": "BETA",
    "title": "List annotations"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotations.manipulate",
    "stage": "BETA",
    "title": "Manipulate annotations"
  },
  {
    "apiDisabled": true,
    "name": "automl.annotations.reject",
    "stage": "BETA",
    "title": "Reject annotations"
  },
  {
    "apiDisabled": true,
    "name": "automl.columnSpecs.get",
    "stage": "BETA",
    "title": "Get column specs"
  },
  {
    "apiDisabled": true,
    "name": "automl.columnSpecs.list",
    "stage": "BETA",
    "title": "List column specs"
  },
  {
    "apiDisabled": true,
    "name": "automl.columnSpecs.update",
    "stage": "BETA",
    "title": "Update column specs"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.create",
    "stage": "BETA",
    "title": "Create datasets"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.delete",
    "stage": "BETA",
    "title": "Delete datasets"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.export",
    "stage": "BETA",
    "title": "Export datasets"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.get",
    "stage": "BETA",
    "title": "Get datasets"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.import",
    "stage": "BETA",
    "title": "Import datasets"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.list",
    "stage": "BETA",
    "title": "List datasets"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automl.datasets.update",
    "stage": "BETA",
    "title": "Update datasets"
  },
  {
    "apiDisabled": true,
    "name": "automl.examples.delete",
    "stage": "BETA",
    "title": "Delete examples"
  },
  {
    "apiDisabled": true,
    "name": "automl.examples.get",
    "stage": "BETA",
    "title": "Get examples"
  },
  {
    "apiDisabled": true,
    "name": "automl.examples.list",
    "stage": "BETA",
    "title": "List examples"
  },
  {
    "apiDisabled": true,
    "name": "automl.examples.update",
    "stage": "BETA",
    "title": "Update examples"
  },
  {
    "apiDisabled": true,
    "name": "automl.files.delete",
    "stage": "BETA",
    "title": "Delete files"
  },
  {
    "apiDisabled": true,
    "name": "automl.files.list",
    "stage": "BETA",
    "title": "List files"
  },
  {
    "apiDisabled": true,
    "name": "automl.humanAnnotationTasks.create",
    "stage": "BETA",
    "title": "Create human annotation tasks"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automl.humanAnnotationTasks.delete",
    "stage": "BETA",
    "title": "Delete human annotation tasks"
  },
  {
    "apiDisabled": true,
    "name": "automl.humanAnnotationTasks.get",
    "stage": "BETA",
    "title": "Get human annotation tasks"
  },
  {
    "apiDisabled": true,
    "name": "automl.humanAnnotationTasks.list",
    "stage": "BETA",
    "title": "List human annotation tasks"
  },
  {
    "apiDisabled": true,
    "name": "automl.locations.get",
    "stage": "BETA",
    "title": "Get locations"
  },
  {
    "apiDisabled": true,
    "name": "automl.locations.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automl.locations.list",
    "stage": "BETA",
    "title": "List locations"
  },
  {
    "apiDisabled": true,
    "name": "automl.locations.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automl.modelEvaluations.create",
    "stage": "BETA",
    "title": "Create model evaluations"
  },
  {
    "apiDisabled": true,
    "name": "automl.modelEvaluations.get",
    "stage": "BETA",
    "title": "Get model evaluations"
  },
  {
    "apiDisabled": true,
    "name": "automl.modelEvaluations.list",
    "stage": "BETA",
    "title": "List model evaluations"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.create",
    "stage": "BETA",
    "title": "Create models"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.delete",
    "stage": "BETA",
    "title": "Delete models"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.deploy",
    "stage": "BETA",
    "title": "Deploy models"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.export",
    "stage": "BETA",
    "title": "Export models"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.get",
    "stage": "BETA",
    "title": "Get models"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.list",
    "stage": "BETA",
    "title": "List models"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.predict",
    "stage": "BETA",
    "title": "Predict using models"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automl.models.undeploy",
    "stage": "BETA",
    "title": "Undeploy models"
  },
  {
    "apiDisabled": true,
    "name": "automl.operations.cancel",
    "stage": "BETA",
    "title": "Cancel operations"
  },
  {
    "apiDisabled": true,
    "name": "automl.operations.delete",
    "stage": "BETA",
    "title": "Delete operations"
  },
  {
    "apiDisabled": true,
    "name": "automl.operations.get",
    "stage": "BETA",
    "title": "Get operations"
  },
  {
    "apiDisabled": true,
    "name": "automl.operations.list",
    "stage": "BETA",
    "title": "List operations"
  },
  {
    "apiDisabled": true,
    "name": "automl.tableSpecs.get",
    "stage": "BETA",
    "title": "Get table specs"
  },
  {
    "apiDisabled": true,
    "name": "automl.tableSpecs.list",
    "stage": "BETA",
    "title": "List table specs"
  },
  {
    "apiDisabled": true,
    "name": "automl.tableSpecs.update",
    "stage": "BETA",
    "title": "Update table specs"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.apiKeys.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.apiKeys.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.apiKeys.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.catalogItems.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.catalogItems.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.catalogItems.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.catalogItems.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.catalogItems.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automlrecommendations.catalogs.getStats",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.catalogs.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.catalogs.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automlrecommendations.eventStores.getStats",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.eventStores.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.events.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.events.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.events.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.events.purge",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.events.rejoin",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.placements.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.placements.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "automlrecommendations.placements.getStats",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.placements.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.recommendations.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.recommendations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.recommendations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.recommendations.pause",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.recommendations.resume",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "automlrecommendations.recommendations.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "autoscaling.sites.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "autoscaling.sites.readRecommendations",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "autoscaling.sites.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "autoscaling.sites.writeMetrics",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "autoscaling.sites.writeState",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "axt.labels.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "axt.labels.set",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.create",
    "primaryPermission": "backupdr.backupPlanAssociations.createForComputeInstance",
    "stage": "BETA",
    "title": "Create Backup Plan Associations"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.createForCloudSqlInstance",
    "stage": "BETA",
    "title": "Create Backup Plan Association for CLoud SQL Instance"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.createForComputeDisk",
    "stage": "BETA",
    "title": "Create Backup Plan Associations for Compute Disk"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.createForComputeInstance",
    "stage": "BETA",
    "title": "Create Backup Plan Associations"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.delete",
    "primaryPermission": "backupdr.backupPlanAssociations.deleteForComputeInstance",
    "stage": "BETA",
    "title": "Delete  Backup Plan Associations"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.deleteForCloudSqlInstance",
    "stage": "BETA",
    "title": "Delete Backup Plan Association for Cloud SQL Instance"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.deleteForComputeDisk",
    "stage": "BETA",
    "title": "Delete Backup Plan Association for Compute Disk"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.deleteForComputeInstance",
    "stage": "BETA",
    "title": "Delete  Backup Plan Associations"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.fetchForCloudSqlInstance",
    "stage": "BETA",
    "title": "Fetch Backup Plan Associations for all Cloud SQL Instances"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.fetchForComputeDisk",
    "stage": "BETA",
    "title": "Fetch Backup Plan Associations for all Compute Disks"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.fetchForComputeInstance",
    "stage": "BETA",
    "title": "Fetch Backup Plan Associations for all Compute Instances"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.get",
    "primaryPermission": "backupdr.backupPlanAssociations.getForComputeInstance",
    "stage": "BETA",
    "title": "Get Backup Plan Association"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.getForCloudSqlInstance",
    "stage": "BETA",
    "title": "Get Backup Plan Association for Cloud SQL Instance"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.getForComputeDisk",
    "stage": "BETA",
    "title": "Get Backup Plan Association for Compute Disk"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.getForComputeInstance",
    "stage": "BETA",
    "title": "Get Backup Plan Association"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.list",
    "stage": "BETA",
    "title": "List  Backup Plan Associations"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.triggerBackup",
    "primaryPermission": "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
    "stage": "BETA",
    "title": "Trigger Backup on Backup Plan Associations"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.triggerBackupForCloudSqlInstance",
    "stage": "BETA",
    "title": "Trigger Backup on Backup Plan Association for Cloud SQL Instance"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.triggerBackupForComputeDisk",
    "stage": "BETA",
    "title": "Trigger Backup on Backup Plan Association for Compute Disk"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.triggerBackupForComputeInstance",
    "stage": "BETA",
    "title": "Trigger Backup on Backup Plan Associations"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.updateForComputeDisk",
    "stage": "BETA",
    "title": "Update Backup Plan Associations for Compute Disk"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanAssociations.updateForComputeInstance",
    "stage": "BETA",
    "title": "Update Backup Plan Associations for Compute Instance"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanRevisions.get",
    "stage": "BETA",
    "title": "Get BackupPlanRevision"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlanRevisions.list",
    "stage": "BETA",
    "title": "List BackupPlanRevisions"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlans.create",
    "stage": "BETA",
    "title": "Create Backup Plan"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlans.delete",
    "stage": "BETA",
    "title": "Delete Backup Plan"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlans.get",
    "stage": "BETA",
    "title": "Get Backup Plan"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlans.list",
    "stage": "BETA",
    "title": "List Backup Plans"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlans.update",
    "stage": "BETA",
    "title": "Update BackupPlan"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlans.useComputeInstanceOnly",
    "primaryPermission": "backupdr.backupPlans.useForComputeInstance",
    "stage": "BETA",
    "title": "Use Compute Instance Backup Plan"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlans.useForCloudSqlInstance",
    "stage": "BETA",
    "title": "Use Cloud SQL Instance Backup Plan"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlans.useForComputeDisk",
    "stage": "BETA",
    "title": "Use Compute Disk Instance Backup Plan"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupPlans.useForComputeInstance",
    "stage": "BETA",
    "title": "Use Compute Instance Backup Plan"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupVaults.associate",
    "stage": "BETA",
    "title": "Associate BackupVault"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupVaults.create",
    "stage": "GA",
    "title": "Create BackupVault"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupVaults.delete",
    "stage": "GA",
    "title": "Delete BackupVault"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupVaults.get",
    "stage": "GA",
    "title": "Get BackupVault"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupVaults.list",
    "stage": "GA",
    "title": "List BackupVault"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.backupVaults.update",
    "stage": "GA",
    "title": "Update BackupVault"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.bvbackups.delete",
    "stage": "GA",
    "title": "Delete Backup"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.bvbackups.get",
    "stage": "GA",
    "title": "Get Backup"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.bvbackups.list",
    "stage": "GA",
    "title": "List Backup"
  },
  {
    "apiDisabled": true,
    "description": "Restore from a backup in the backup vault",
    "name": "backupdr.bvbackups.restore",
    "stage": "GA",
    "title": "Restore Backup"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.bvbackups.update",
    "stage": "GA",
    "title": "Update Backup"
  },
  {
    "apiDisabled": true,
    "description": "Use backup for restore of CloudSQL instances",
    "name": "backupdr.bvbackups.useReadOnlyForCloudSqlInstance",
    "stage": "BETA",
    "title": "Use Read Only for CloudSQL"
  },
  {
    "apiDisabled": true,
    "description": "Abandon the in-progress backup in the backup vault",
    "name": "backupdr.bvdataSources.abandonBackup",
    "stage": "GA",
    "title": "Abandon Backup"
  },
  {
    "apiDisabled": true,
    "description": "Fetch an access token to use when writing data to the backup object",
    "name": "backupdr.bvdataSources.fetchAccessToken",
    "stage": "GA",
    "title": "Fetch AccessToken"
  },
  {
    "apiDisabled": true,
    "description": "Finalize the in-progress backup in the backup vault",
    "name": "backupdr.bvdataSources.finalizeBackup",
    "stage": "GA",
    "title": "Finalize Backup"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.bvdataSources.get",
    "stage": "GA",
    "title": "Get DataSource"
  },
  {
    "apiDisabled": true,
    "description": "Initiate the process of creating a new backup in the backup vault",
    "name": "backupdr.bvdataSources.initiateBackup",
    "stage": "GA",
    "title": "Initiate Backup"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.bvdataSources.list",
    "stage": "GA",
    "title": "List DataSource"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.bvdataSources.remove",
    "stage": "GA",
    "title": "Remove DataSource"
  },
  {
    "apiDisabled": true,
    "description": "Set internal status of the data source",
    "name": "backupdr.bvdataSources.setInternalStatus",
    "stage": "GA",
    "title": "Set Internal Status"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.bvdataSources.update",
    "stage": "GA",
    "title": "Update DataSource"
  },
  {
    "apiDisabled": true,
    "description": "Use dataSource for point in time restore of CloudSQL instances",
    "name": "backupdr.bvdataSources.useReadOnlyForCloudSqlInstance",
    "stage": "BETA",
    "title": "Use Read Only for CloudSQL"
  },
  {
    "apiDisabled": true,
    "description": "Allows restore operations of Compute Engine VMs from a backup vault to the target project",
    "name": "backupdr.compute.restoreFromBackupVault",
    "stage": "BETA",
    "title": "Restore Compute Engine VMs from a backup vault"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.dataSourceReferences.fetchForCloudSqlInstance",
    "stage": "BETA",
    "title": "Fetch Data Source References for all Cloud SQL Instances"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.dataSourceReferences.getForCloudSqlInstance",
    "stage": "BETA",
    "title": "Get Data Source Reference for Cloud SQL Instance"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "description": "Access the Management Server UI and associated API",
    "name": "backupdr.managementServers.access",
    "stage": "GA",
    "title": "Access ManagementServer"
  },
  {
    "apiDisabled": true,
    "description": "Access applications and backups marked as sensitive",
    "name": "backupdr.managementServers.accessSensitiveData",
    "stage": "GA",
    "title": "SensitiveData Access"
  },
  {
    "apiDisabled": true,
    "description": "Assign pre-configured Backup plans (Backup Templates and Resource Profiles) to applications",
    "name": "backupdr.managementServers.assignBackupPlans",
    "stage": "GA",
    "title": "BackupPlans Assign"
  },
  {
    "apiDisabled": true,
    "description": "Access the AGM interface in ManagementServer instances of type BACKUP_RESTORE",
    "name": "backupdr.managementServers.backupAccess",
    "stage": "GA",
    "title": "Backup Access"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.managementServers.create",
    "stage": "GA",
    "title": "Create ManagementServer"
  },
  {
    "apiDisabled": true,
    "description": "Create connection to backup management service",
    "name": "backupdr.managementServers.createConnection",
    "stage": "BETA",
    "title": "Backup Servers Manage"
  },
  {
    "apiDisabled": true,
    "description": "Create dynamic protection entry",
    "name": "backupdr.managementServers.createDynamicProtection",
    "stage": "GA",
    "title": "create dynamic protection"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.managementServers.delete",
    "stage": "GA",
    "title": "Delete ManagementServer"
  },
  {
    "apiDisabled": true,
    "description": "Delete dynamic protection entry",
    "name": "backupdr.managementServers.deleteDynamicProtection",
    "stage": "GA",
    "title": "delete dynamic protection"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.managementServers.get",
    "stage": "GA",
    "title": "Get ManagementServer"
  },
  {
    "apiDisabled": true,
    "description": "Get dynamic protection entry",
    "name": "backupdr.managementServers.getDynamicProtection",
    "stage": "GA",
    "title": "Get dynamic protection"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.managementServers.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on ManagementServer"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.managementServers.list",
    "stage": "GA",
    "title": "List ManagementServer"
  },
  {
    "apiDisabled": true,
    "description": "List dynamic protection entries",
    "name": "backupdr.managementServers.listDynamicProtection",
    "stage": "GA",
    "title": "List dynamic protection"
  },
  {
    "apiDisabled": true,
    "description": "Manage all aspects of applications, including logical groups and consistency groups and run backups on-demand.",
    "name": "backupdr.managementServers.manageApplications",
    "stage": "GA",
    "title": "Applications Manage"
  },
  {
    "apiDisabled": true,
    "description": "Create, modify, delete and view Backup plans (Backup Templates and Resource Profiles)",
    "name": "backupdr.managementServers.manageBackupPlans",
    "stage": "GA",
    "title": "BackupPlans Manage"
  },
  {
    "apiDisabled": true,
    "description": "Execute Backup Server APIs via the Management Server",
    "name": "backupdr.managementServers.manageBackupServers",
    "stage": "GA",
    "title": "Backup Servers Manage"
  },
  {
    "apiDisabled": true,
    "description": "Perform backup operations: Backup Now",
    "name": "backupdr.managementServers.manageBackups",
    "stage": "GA",
    "title": "Backup Manage"
  },
  {
    "apiDisabled": true,
    "description": "Create and manage clones from backups",
    "name": "backupdr.managementServers.manageClones",
    "stage": "GA",
    "title": "Clone Manage"
  },
  {
    "apiDisabled": true,
    "description": "Expire Backups",
    "name": "backupdr.managementServers.manageExpiration",
    "stage": "GA",
    "title": "Manage Expiration"
  },
  {
    "apiDisabled": true,
    "description": "Add, modify, remove, and view hosts - physical and virtual machines",
    "name": "backupdr.managementServers.manageHosts",
    "stage": "GA",
    "title": "Host Manage"
  },
  {
    "apiDisabled": true,
    "description": "Access to the ACL-management interface in the AGM",
    "name": "backupdr.managementServers.manageInternalACL",
    "stage": "GA",
    "title": "Manage Internal ACL"
  },
  {
    "apiDisabled": true,
    "description": "Cancel jobs and modify job priority",
    "name": "backupdr.managementServers.manageJobs",
    "stage": "GA",
    "title": "Manage Jobs"
  },
  {
    "apiDisabled": true,
    "description": "Create and manage LiveClones from backups",
    "name": "backupdr.managementServers.manageLiveClones",
    "stage": "GA",
    "title": "Live Clone Manage"
  },
  {
    "apiDisabled": true,
    "description": "Manage the migration of mounted data as a final step of a restore or clone operation",
    "name": "backupdr.managementServers.manageMigrations",
    "stage": "GA",
    "title": "Manage Migrations"
  },
  {
    "apiDisabled": true,
    "description": "Perform Failover, Syncback, Cleanup and Failback operations on a remote StreamSnap backup",
    "name": "backupdr.managementServers.manageMirroring",
    "stage": "GA",
    "title": "Mirroring Manage"
  },
  {
    "apiDisabled": true,
    "description": "Create and manage active mounts from backups",
    "name": "backupdr.managementServers.manageMounts",
    "stage": "GA",
    "title": "Mount Manage"
  },
  {
    "apiDisabled": true,
    "description": "Restore from backups",
    "name": "backupdr.managementServers.manageRestores",
    "stage": "GA",
    "title": "Restore Manage"
  },
  {
    "apiDisabled": true,
    "description": "Mark applications and backups as sensitive or non-sensitive data",
    "name": "backupdr.managementServers.manageSensitiveData",
    "stage": "GA",
    "title": "SensitiveData Manage"
  },
  {
    "apiDisabled": true,
    "description": "Add, modify, remove, and view storage and disk pools",
    "name": "backupdr.managementServers.manageStorage",
    "stage": "GA",
    "title": "Storage Manage"
  },
  {
    "apiDisabled": true,
    "description": "Configure backup/recovery appliances, management console and Report Manager",
    "name": "backupdr.managementServers.manageSystem",
    "stage": "GA",
    "title": "System Manage"
  },
  {
    "apiDisabled": true,
    "description": "Add, modify and remove backup workflows (which automate access to copy data within Backup and DR Service)",
    "name": "backupdr.managementServers.manageWorkflows",
    "stage": "GA",
    "title": "Workflow Manage"
  },
  {
    "apiDisabled": true,
    "description": "Refresh a clone that was created by a backup workflow (which automates access to copy data within Backup and DR Service)",
    "name": "backupdr.managementServers.refreshWorkflows",
    "stage": "GA",
    "title": "Workflow Refresh"
  },
  {
    "apiDisabled": true,
    "description": "Run a pre-configured backup workflow (which automates access to copy data within Backup and DR Service)",
    "name": "backupdr.managementServers.runWorkflows",
    "stage": "GA",
    "title": "Workflow Run"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.managementServers.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on ManagementServer"
  },
  {
    "apiDisabled": true,
    "description": "Perform Test Failover operation on a remote StreamSnap backup",
    "name": "backupdr.managementServers.testFailOvers",
    "stage": "GA",
    "title": "FailOver Test"
  },
  {
    "apiDisabled": true,
    "description": "View Backup plans (Backup Templates and Resource Profiles)",
    "name": "backupdr.managementServers.viewBackupPlans",
    "stage": "GA",
    "title": "BackupPlans View"
  },
  {
    "apiDisabled": true,
    "description": "View backup appliance operations and configurations",
    "name": "backupdr.managementServers.viewBackupServers",
    "stage": "GA",
    "title": "Backup Servers Manage"
  },
  {
    "apiDisabled": true,
    "description": "Access the Report Manager UI to run reports and view or download their output",
    "name": "backupdr.managementServers.viewReports",
    "stage": "GA",
    "title": "View Reports"
  },
  {
    "apiDisabled": true,
    "description": "View storage and disk pool configuration",
    "name": "backupdr.managementServers.viewStorage",
    "stage": "GA",
    "title": "Storage View"
  },
  {
    "apiDisabled": true,
    "description": "View backup/recovery appliance and management console configuration",
    "name": "backupdr.managementServers.viewSystem",
    "stage": "GA",
    "title": "System View"
  },
  {
    "apiDisabled": true,
    "description": "View backup workflows (which automate access to copy data within Backup and DR Service)",
    "name": "backupdr.managementServers.viewWorkflows",
    "stage": "GA",
    "title": "Workflow View"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.resourceBackupConfigs.get",
    "stage": "BETA",
    "title": "Get Resource Backup Config"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.resourceBackupConfigs.list",
    "stage": "BETA",
    "title": "List Resource Backup Configs"
  },
  {
    "apiDisabled": true,
    "name": "backupdr.serviceConfig.initialize",
    "stage": "BETA",
    "title": "Initialize BackupDR resources"
  },
  {
    "apiDisabled": true,
    "description": "Provides permissions to get trial",
    "name": "backupdr.trial.get",
    "stage": "BETA",
    "title": "Get Trial"
  },
  {
    "apiDisabled": true,
    "description": "Provides permissions to subscribe to a trial",
    "name": "backupdr.trial.subscribe",
    "stage": "BETA",
    "title": "Subscribe to Trial"
  },
  {
    "apiDisabled": true,
    "description": "List Bare Metal Solution Instance Quotas",
    "name": "baremetalsolution.instancequotas.list",
    "stage": "GA",
    "title": "List Bare Metal Solution Instance Quotas"
  },
  {
    "apiDisabled": true,
    "description": "Attach Network to Bare Metal Solution Instance",
    "name": "baremetalsolution.instances.attachNetwork",
    "stage": "GA",
    "title": "Attach Network to Bare Metal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "Attach Volume to Bare Metal Solution Instance",
    "name": "baremetalsolution.instances.attachVolume",
    "stage": "GA",
    "title": "Attach Volume to Bare Metal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "Create Bare Metal Solution Instance",
    "name": "baremetalsolution.instances.create",
    "stage": "GA",
    "title": "Create Bare Metal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "Detach Lun from Bare Metaal Solution Instance",
    "name": "baremetalsolution.instances.detachLun",
    "stage": "GA",
    "title": "Detach Lun from Bare Metaal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "Detach Network from Bare Metal Solution Instance",
    "name": "baremetalsolution.instances.detachNetwork",
    "stage": "GA",
    "title": "Detach Network from Bare Metal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "Detach Volume from Bare Metal Solution Instance",
    "name": "baremetalsolution.instances.detachVolume",
    "stage": "GA",
    "title": "Detach Volume from Bare Metal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "Disable Interactive Serial Console Bare Metal Solution Instance",
    "name": "baremetalsolution.instances.disableInteractiveSerialConsole",
    "stage": "GA",
    "title": "Disable Interactive Serial Console Bare Metal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "Enable Interactive Serial Console Bare Metal Solution Instance",
    "name": "baremetalsolution.instances.enableInteractiveSerialConsole",
    "stage": "GA",
    "title": "Enable Interactive Serial Console Bare Metal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "Get Bare Metal Solution Instance",
    "name": "baremetalsolution.instances.get",
    "stage": "GA",
    "title": "Get Bare Metal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "List Bare Metal Solution Instances",
    "name": "baremetalsolution.instances.list",
    "stage": "GA",
    "title": "List Bare Metal Solution Instances"
  },
  {
    "apiDisabled": true,
    "description": "Rename Bare Metal Solution Instance",
    "name": "baremetalsolution.instances.rename",
    "stage": "GA",
    "title": "Rename Bare Metal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "Reset Bare Metal Solution Instance",
    "name": "baremetalsolution.instances.reset",
    "stage": "GA",
    "title": "Reset Bare Metal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "Start Bare Metal Solution Instance",
    "name": "baremetalsolution.instances.start",
    "stage": "GA",
    "title": "Start Bare Metal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "Stop Bare Metal Solution Instance",
    "name": "baremetalsolution.instances.stop",
    "stage": "GA",
    "title": "Stop Bare Metal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "Update Bare Metal Solution Instance",
    "name": "baremetalsolution.instances.update",
    "stage": "GA",
    "title": "Update Bare Metal Solution Instance"
  },
  {
    "apiDisabled": true,
    "description": "Create Bare Metal Solution Luns",
    "name": "baremetalsolution.luns.create",
    "stage": "GA",
    "title": "Create Bare Metal Solution Luns"
  },
  {
    "apiDisabled": true,
    "description": "Delete Bare Metal Solution Luns",
    "name": "baremetalsolution.luns.delete",
    "stage": "GA",
    "title": "Delete Bare Metal Solution Luns"
  },
  {
    "apiDisabled": true,
    "description": "Evict (delete immediately) Bare Metal Solution Luns",
    "name": "baremetalsolution.luns.evict",
    "stage": "GA",
    "title": "Evict Bare Metal Solution Luns"
  },
  {
    "apiDisabled": true,
    "description": "Get Bare Metal Solution Lun",
    "name": "baremetalsolution.luns.get",
    "stage": "GA",
    "title": "Get Bare Metal Solution Lun"
  },
  {
    "apiDisabled": true,
    "description": "List Bare Metal Solution Luns",
    "name": "baremetalsolution.luns.list",
    "stage": "GA",
    "title": "List Bare Metal Solution Luns"
  },
  {
    "apiDisabled": true,
    "description": "Update Bare Metal Solution Luns",
    "name": "baremetalsolution.luns.update",
    "stage": "GA",
    "title": "Update Bare Metal Solution Luns"
  },
  {
    "apiDisabled": true,
    "name": "baremetalsolution.maintenanceevents.addProposal",
    "stage": "GA",
    "title": "Add a new proposal to a Maintenance Event"
  },
  {
    "apiDisabled": true,
    "name": "baremetalsolution.maintenanceevents.approve",
    "stage": "GA",
    "title": "Approve Maintenance Event"
  },
  {
    "apiDisabled": true,
    "name": "baremetalsolution.maintenanceevents.get",
    "stage": "GA",
    "title": "Get Maintenance Event"
  },
  {
    "apiDisabled": true,
    "name": "baremetalsolution.maintenanceevents.list",
    "stage": "GA",
    "title": "List Maintenance Events"
  },
  {
    "apiDisabled": true,
    "description": "List Bare Metal Solution Network Quotas",
    "name": "baremetalsolution.networkquotas.list",
    "stage": "GA",
    "title": "List Bare Metal Solution Network Quotas"
  },
  {
    "apiDisabled": true,
    "description": "Create Bare Metal Solution networks",
    "name": "baremetalsolution.networks.create",
    "stage": "GA",
    "title": "Create Bare Metal Solution networks"
  },
  {
    "apiDisabled": true,
    "description": "Delete Bare Metal Solution networks",
    "name": "baremetalsolution.networks.delete",
    "stage": "GA",
    "title": "Delete Bare Metal Solution networks"
  },
  {
    "apiDisabled": true,
    "description": "Get Bare Metal Solution network",
    "name": "baremetalsolution.networks.get",
    "stage": "GA",
    "title": "Get Bare Metal Solution network"
  },
  {
    "apiDisabled": true,
    "description": "List Bare Metal Solution networks",
    "name": "baremetalsolution.networks.list",
    "stage": "GA",
    "title": "List Bare Metal Solution networks"
  },
  {
    "apiDisabled": true,
    "description": "Rename Bare Metal Solution networks",
    "name": "baremetalsolution.networks.rename",
    "stage": "GA",
    "title": "Rename Bare Metal Solution networks"
  },
  {
    "apiDisabled": true,
    "description": "Update Bare Metal Solution networks",
    "name": "baremetalsolution.networks.update",
    "stage": "GA",
    "title": "Update Bare Metal Solution networks"
  },
  {
    "apiDisabled": true,
    "description": "Create Bare Metal Solution NFS Share",
    "name": "baremetalsolution.nfsshares.create",
    "stage": "GA",
    "title": "Create Bare Metal Solution NFS Share"
  },
  {
    "apiDisabled": true,
    "description": "Delete Bare Metal Solution NFS Share",
    "name": "baremetalsolution.nfsshares.delete",
    "stage": "GA",
    "title": "Delete Bare Metal Solution NFS Share"
  },
  {
    "apiDisabled": true,
    "description": "Get Bare Metal Solution NFS Share",
    "name": "baremetalsolution.nfsshares.get",
    "stage": "GA",
    "title": "Get Bare Metal Solution NFS Share"
  },
  {
    "apiDisabled": true,
    "description": "List Bare Metal Solution NFS Shares",
    "name": "baremetalsolution.nfsshares.list",
    "stage": "GA",
    "title": "List Bare Metal Solution NFS Shares"
  },
  {
    "apiDisabled": true,
    "description": "Rename Bare Metal Solution NFS Share",
    "name": "baremetalsolution.nfsshares.rename",
    "stage": "GA",
    "title": "Rename Bare Metal Solution NFS Share"
  },
  {
    "apiDisabled": true,
    "description": "Update Bare Metal Solution NFS Share",
    "name": "baremetalsolution.nfsshares.update",
    "stage": "GA",
    "title": "Update Bare Metal Solution NFS Share"
  },
  {
    "apiDisabled": true,
    "name": "baremetalsolution.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "baremetalsolution.osimages.list",
    "stage": "GA",
    "title": "List OS Images"
  },
  {
    "apiDisabled": true,
    "name": "baremetalsolution.pods.list",
    "stage": "GA",
    "title": "List Pods"
  },
  {
    "apiDisabled": true,
    "description": "Create Bare Metal Solution Procurement",
    "name": "baremetalsolution.procurements.create",
    "stage": "GA",
    "title": "Create Bare Metal Solution Procurement"
  },
  {
    "apiDisabled": true,
    "description": "Get Bare Metal Solution Procurement",
    "name": "baremetalsolution.procurements.get",
    "stage": "GA",
    "title": "Get Bare Metal Solution Procurement"
  },
  {
    "apiDisabled": true,
    "name": "baremetalsolution.procurements.list",
    "stage": "GA",
    "title": "List Procurements"
  },
  {
    "apiDisabled": true,
    "name": "baremetalsolution.skus.list",
    "stage": "GA",
    "title": "List SKUs"
  },
  {
    "apiDisabled": true,
    "description": "Create Bare Metal Solution snapshot schedule policy",
    "name": "baremetalsolution.snapshotschedulepolicies.create",
    "stage": "GA",
    "title": "Create Bare Metal Solution snapshot schedule policy"
  },
  {
    "apiDisabled": true,
    "description": "Delete Bare Metal Solution snapshot schedule policy",
    "name": "baremetalsolution.snapshotschedulepolicies.delete",
    "stage": "GA",
    "title": "Delete Bare Metal Solution snapshot schedule policy"
  },
  {
    "apiDisabled": true,
    "description": "Get Bare Metal Solution snapshot schedule policy",
    "name": "baremetalsolution.snapshotschedulepolicies.get",
    "stage": "GA",
    "title": "Get Bare Metal Solution snapshot schedule policy"
  },
  {
    "apiDisabled": true,
    "description": "List Bare Metal Solution snapshot schedule policies",
    "name": "baremetalsolution.snapshotschedulepolicies.list",
    "stage": "GA",
    "title": "List Bare Metal Solution snapshot schedule policies"
  },
  {
    "apiDisabled": true,
    "description": "Update Bare Metal Solution snapshot schedule policy",
    "name": "baremetalsolution.snapshotschedulepolicies.update",
    "stage": "GA",
    "title": "Update Bare Metal Solution snapshot schedule policy"
  },
  {
    "apiDisabled": true,
    "description": "Create SSH Keys",
    "name": "baremetalsolution.sshKeys.create",
    "stage": "GA",
    "title": "Create SSH Keys"
  },
  {
    "apiDisabled": true,
    "description": "Delete SSH Keys",
    "name": "baremetalsolution.sshKeys.delete",
    "stage": "GA",
    "title": "Delete SSH Keys"
  },
  {
    "apiDisabled": true,
    "description": "List SSH Keys",
    "name": "baremetalsolution.sshKeys.list",
    "stage": "GA",
    "title": "List SSH Keys"
  },
  {
    "apiDisabled": true,
    "name": "baremetalsolution.storageaggregatepools.list",
    "stage": "GA",
    "title": "List Storage Aggregate Pools"
  },
  {
    "apiDisabled": true,
    "description": "List Bare Metal Solution Volume Quotas",
    "name": "baremetalsolution.volumequotas.list",
    "stage": "GA",
    "title": "List Bare Metal Solution Volume Quotas"
  },
  {
    "apiDisabled": true,
    "description": "Create Bare Metal Solution volume",
    "name": "baremetalsolution.volumes.create",
    "stage": "GA",
    "title": "Create Bare Metal Solution volume"
  },
  {
    "apiDisabled": true,
    "description": "Delete Bare Metal Solution volume",
    "name": "baremetalsolution.volumes.delete",
    "stage": "GA",
    "title": "Delete Bare Metal Solution volume"
  },
  {
    "apiDisabled": true,
    "description": "Evict (delete immediately) Bare Metal Solution volume",
    "name": "baremetalsolution.volumes.evict",
    "stage": "GA",
    "title": "Evict Bare Metal Solution volume"
  },
  {
    "apiDisabled": true,
    "description": "Get Bare Metal Solution storage volume",
    "name": "baremetalsolution.volumes.get",
    "stage": "GA",
    "title": "Get Bare Metal Solution storage volume"
  },
  {
    "apiDisabled": true,
    "description": "List Bare Metal Solution storage volumes",
    "name": "baremetalsolution.volumes.list",
    "stage": "GA",
    "title": "List Bare Metal Solution storage volumes"
  },
  {
    "apiDisabled": true,
    "description": "Rename Bare Metal Solution volume",
    "name": "baremetalsolution.volumes.rename",
    "stage": "GA",
    "title": "Rename Bare Metal Solution volume"
  },
  {
    "apiDisabled": true,
    "description": "Resize Bare Metal Solution storage volume",
    "name": "baremetalsolution.volumes.resize",
    "stage": "GA",
    "title": "Resize Bare Metal Solution storage volume"
  },
  {
    "apiDisabled": true,
    "description": "Update Bare Metal Solution storage volume",
    "name": "baremetalsolution.volumes.update",
    "stage": "GA",
    "title": "Update Bare Metal Solution storage volume"
  },
  {
    "apiDisabled": true,
    "description": "Create Bare Metal Solution volume snapshot",
    "name": "baremetalsolution.volumesnapshots.create",
    "stage": "GA",
    "title": "Create Bare Metal Solution volume snapshot"
  },
  {
    "apiDisabled": true,
    "description": "Delete Bare Metal Solution volume snapshot",
    "name": "baremetalsolution.volumesnapshots.delete",
    "stage": "GA",
    "title": "Delete Bare Metal Solution volume snapshot"
  },
  {
    "apiDisabled": true,
    "description": "Get Bare Metal Solution volume snapshots",
    "name": "baremetalsolution.volumesnapshots.get",
    "stage": "GA",
    "title": "Get Bare Metal Solution volume snapshots"
  },
  {
    "apiDisabled": true,
    "description": "List Bare Metal Solution volume snapshots",
    "name": "baremetalsolution.volumesnapshots.list",
    "stage": "GA",
    "title": "List Bare Metal Solution volume snapshots"
  },
  {
    "apiDisabled": true,
    "description": "Restore Bare Metal Solution volume snapshot",
    "name": "baremetalsolution.volumesnapshots.restore",
    "stage": "GA",
    "title": "Restore Bare Metal Solution volume snapshot"
  },
  {
    "apiDisabled": true,
    "description": "Allows creation of a Batch Job.",
    "name": "batch.jobs.create",
    "stage": "GA",
    "title": "Create a Batch Job."
  },
  {
    "apiDisabled": true,
    "description": "Allows deletion of Batch Jobs.",
    "name": "batch.jobs.delete",
    "stage": "GA",
    "title": "Delete a Batch Job."
  },
  {
    "apiDisabled": true,
    "description": "Allows reading of Batch Jobs.",
    "name": "batch.jobs.get",
    "stage": "GA",
    "title": "Get a Batch Job."
  },
  {
    "apiDisabled": true,
    "description": "Allows listing of Batch Jobs.",
    "name": "batch.jobs.list",
    "stage": "GA",
    "title": "List Batch Jobs."
  },
  {
    "apiDisabled": true,
    "description": "Allows reading of Batch Locations.",
    "name": "batch.locations.get",
    "stage": "GA",
    "title": "Get a batch Location."
  },
  {
    "apiDisabled": true,
    "description": "Allows listing of Batch Locations.",
    "name": "batch.locations.list",
    "stage": "GA",
    "title": "List Batch Locations."
  },
  {
    "apiDisabled": true,
    "description": "Allows reading of a Batch Operation.",
    "name": "batch.operations.get",
    "stage": "GA",
    "title": "Get a Batch Operation."
  },
  {
    "apiDisabled": true,
    "description": "Allows listing of Batch Operations.",
    "name": "batch.operations.list",
    "stage": "GA",
    "title": "List Batch Operations."
  },
  {
    "apiDisabled": true,
    "description": "Allows creation of a Batch ResourceAllowance.",
    "name": "batch.resourceAllowances.create",
    "stage": "GA",
    "title": "Create a Batch ResourceAllowance."
  },
  {
    "apiDisabled": true,
    "description": "Allows deletion of Batch ResourceAllowances.",
    "name": "batch.resourceAllowances.delete",
    "stage": "GA",
    "title": "Delete a Batch ResourceAllowance."
  },
  {
    "apiDisabled": true,
    "description": "Allows reading of Batch ResourceAllowances.",
    "name": "batch.resourceAllowances.get",
    "stage": "GA",
    "title": "Get a Batch ResourceAllowance."
  },
  {
    "apiDisabled": true,
    "description": "Allows listing of Batch ResourceAllowances.",
    "name": "batch.resourceAllowances.list",
    "stage": "GA",
    "title": "List Batch ResourceAllowances."
  },
  {
    "apiDisabled": true,
    "description": "Allows update of a Batch ResourceAllowance.",
    "name": "batch.resourceAllowances.update",
    "stage": "GA",
    "title": "Update a Batch ResourceAllowance."
  },
  {
    "apiDisabled": true,
    "description": "Allows reporting of Batch agent state.",
    "name": "batch.states.report",
    "stage": "GA",
    "title": "Report Batch agent state."
  },
  {
    "apiDisabled": true,
    "description": "Allows reading of Tasks.",
    "name": "batch.tasks.get",
    "stage": "GA",
    "title": "Get a Batch Task."
  },
  {
    "apiDisabled": true,
    "description": "Allows listing of Tasks.",
    "name": "batch.tasks.list",
    "stage": "GA",
    "title": "List Batch Tasks."
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnections.create",
    "stage": "BETA",
    "title": "Create AppConnection"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnections.delete",
    "stage": "BETA",
    "title": "Delete AppConnection"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnections.get",
    "stage": "BETA",
    "title": "Get AppConnection"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnections.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on AppConnection"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnections.list",
    "stage": "BETA",
    "title": "List AppConnection"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnections.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on AppConnection"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnections.update",
    "stage": "BETA",
    "title": "Update AppConnection"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnectors.create",
    "stage": "BETA",
    "title": "Create AppConnector"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnectors.delete",
    "stage": "BETA",
    "title": "Delete AppConnector"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnectors.get",
    "stage": "BETA",
    "title": "Get AppConnector"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnectors.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on AppConnector"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnectors.list",
    "stage": "BETA",
    "title": "List AppConnector"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnectors.reportStatus",
    "stage": "BETA",
    "title": "Report AppConnector Status"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnectors.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on AppConnector"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appConnectors.update",
    "stage": "BETA",
    "title": "Update AppConnector"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appGateways.create",
    "stage": "BETA",
    "title": "Create AppGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appGateways.delete",
    "stage": "BETA",
    "title": "Delete AppGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appGateways.get",
    "stage": "BETA",
    "title": "Get AppGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appGateways.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on AppGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appGateways.list",
    "stage": "BETA",
    "title": "List AppGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appGateways.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on AppGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.appGateways.update",
    "stage": "BETA",
    "title": "Update AppGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientConnectorServices.access",
    "stage": "BETA",
    "title": "Access ClientConnectorService"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientConnectorServices.create",
    "stage": "BETA",
    "title": "Create ClientConnectorService"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientConnectorServices.delete",
    "stage": "BETA",
    "title": "Delete ClientConnectorService"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientConnectorServices.get",
    "stage": "BETA",
    "title": "Get ClientConnectorService"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientConnectorServices.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on ClientConnectorService"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientConnectorServices.list",
    "stage": "BETA",
    "title": "List ClientConnectorService"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientConnectorServices.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on ClientConnectorService"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientConnectorServices.update",
    "stage": "BETA",
    "title": "Update ClientConnectorService"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientGateways.create",
    "stage": "BETA",
    "title": "Create ClientGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientGateways.delete",
    "stage": "BETA",
    "title": "Delete ClientGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientGateways.get",
    "stage": "BETA",
    "title": "Get ClientGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientGateways.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on ClientGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientGateways.list",
    "stage": "BETA",
    "title": "List ClientGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.clientGateways.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on ClientGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.securityGateways.create",
    "stage": "BETA",
    "title": "Create SecurityGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.securityGateways.delete",
    "stage": "BETA",
    "title": "Delete SecurityGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.securityGateways.get",
    "stage": "BETA",
    "title": "Get SecurityGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.securityGateways.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on SecurityGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.securityGateways.list",
    "stage": "BETA",
    "title": "List SecurityGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.securityGateways.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on SecurityGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.securityGateways.update",
    "stage": "BETA",
    "title": "Update SecurityGateway"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.sgApplications.create",
    "stage": "BETA",
    "title": "Create SecurityGateway Application"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.sgApplications.delete",
    "stage": "BETA",
    "title": "Delete SecurityGateway Application"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.sgApplications.get",
    "stage": "BETA",
    "title": "Get SecurityGateway Application"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.sgApplications.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on SecurityGateway Application"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.sgApplications.list",
    "stage": "BETA",
    "title": "List SecurityGateway Applications"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.sgApplications.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on SecurityGateway Application"
  },
  {
    "apiDisabled": true,
    "name": "beyondcorp.sgApplications.update",
    "stage": "BETA",
    "title": "Update SecurityGateway Application"
  },
  {
    "apiDisabled": true,
    "description": "Allows creating of catalog.",
    "name": "biglake.catalogs.create",
    "stage": "GA",
    "title": "Create Catalog"
  },
  {
    "apiDisabled": true,
    "description": "Allows deleting of catalog.",
    "name": "biglake.catalogs.delete",
    "stage": "GA",
    "title": "Delete Catalog"
  },
  {
    "apiDisabled": true,
    "description": "Allows getting of catalog.",
    "name": "biglake.catalogs.get",
    "stage": "GA",
    "title": "Get Catalog"
  },
  {
    "description": "Allows reading a catalog's IAM policy.",
    "name": "biglake.catalogs.getIamPolicy",
    "stage": "BETA",
    "title": "Read a catalog's IAM policy"
  },
  {
    "apiDisabled": true,
    "description": "Allows listing of catalogs.",
    "name": "biglake.catalogs.list",
    "stage": "GA",
    "title": "List Catalogs"
  },
  {
    "description": "Allows changing a catalog's IAM policy.",
    "name": "biglake.catalogs.setIamPolicy",
    "stage": "BETA",
    "title": "Change a catalog's IAM policy"
  },
  {
    "apiDisabled": true,
    "description": "Allows creating of database.",
    "name": "biglake.databases.create",
    "stage": "GA",
    "title": "Create Database"
  },
  {
    "apiDisabled": true,
    "description": "Allows deleting of database.",
    "name": "biglake.databases.delete",
    "stage": "GA",
    "title": "Delete Database"
  },
  {
    "apiDisabled": true,
    "description": "Allows getting of database.",
    "name": "biglake.databases.get",
    "stage": "GA",
    "title": "Get Database"
  },
  {
    "apiDisabled": true,
    "description": "Allows listing of databases.",
    "name": "biglake.databases.list",
    "stage": "GA",
    "title": "List Databases"
  },
  {
    "apiDisabled": true,
    "description": "Allows updating of database.",
    "name": "biglake.databases.update",
    "stage": "GA",
    "title": "Update Catalog"
  },
  {
    "apiDisabled": true,
    "description": "Allows checking of lock.",
    "name": "biglake.locks.check",
    "stage": "GA",
    "title": "Check Lock"
  },
  {
    "apiDisabled": true,
    "description": "Allows creating of lock.",
    "name": "biglake.locks.create",
    "stage": "GA",
    "title": "Create Lock"
  },
  {
    "apiDisabled": true,
    "description": "Allows deleting of lock.",
    "name": "biglake.locks.delete",
    "stage": "GA",
    "title": "Delete Lock"
  },
  {
    "apiDisabled": true,
    "description": "Allows listing of locks.",
    "name": "biglake.locks.list",
    "stage": "GA",
    "title": "List Locks"
  },
  {
    "description": "Allows creating of namespace.",
    "name": "biglake.namespaces.create",
    "stage": "BETA",
    "title": "Create Namespace"
  },
  {
    "description": "Allows deleting of namespace.",
    "name": "biglake.namespaces.delete",
    "stage": "BETA",
    "title": "Delete Namespace"
  },
  {
    "description": "Allows getting of namespace.",
    "name": "biglake.namespaces.get",
    "stage": "BETA",
    "title": "Get Namespace"
  },
  {
    "description": "Allows reading a namespace's IAM policy.",
    "name": "biglake.namespaces.getIamPolicy",
    "stage": "BETA",
    "title": "Read a namespace's IAM policy"
  },
  {
    "description": "Allows listing of namespaces.",
    "name": "biglake.namespaces.list",
    "stage": "BETA",
    "title": "List Namespaces"
  },
  {
    "description": "Allows changing a namespace's IAM policy.",
    "name": "biglake.namespaces.setIamPolicy",
    "stage": "BETA",
    "title": "Change a namespace's IAM policy"
  },
  {
    "description": "Allows updating of namespace.",
    "name": "biglake.namespaces.update",
    "stage": "BETA",
    "title": "Update Namespace"
  },
  {
    "apiDisabled": true,
    "description": "Allows creating of table.",
    "name": "biglake.tables.create",
    "stage": "GA",
    "title": "Create Table"
  },
  {
    "apiDisabled": true,
    "description": "Allows deleting of table.",
    "name": "biglake.tables.delete",
    "stage": "GA",
    "title": "Delete Table"
  },
  {
    "apiDisabled": true,
    "description": "Allows getting of table.",
    "name": "biglake.tables.get",
    "stage": "GA",
    "title": "Get Table"
  },
  {
    "description": "Allows reading table data by receiving short-lived read-only storage credentials from the catalog.",
    "name": "biglake.tables.getData",
    "stage": "BETA",
    "title": "Read table data"
  },
  {
    "description": "Allows reading a table's IAM policy.",
    "name": "biglake.tables.getIamPolicy",
    "stage": "BETA",
    "title": "Read a table's IAM policy"
  },
  {
    "apiDisabled": true,
    "description": "Allows listing of tables.",
    "name": "biglake.tables.list",
    "stage": "GA",
    "title": "List Tables"
  },
  {
    "apiDisabled": true,
    "description": "Allows all lock operations of table.",
    "name": "biglake.tables.lock",
    "stage": "GA",
    "title": "Lock Table"
  },
  {
    "description": "Allows changing a table's IAM policy.",
    "name": "biglake.tables.setIamPolicy",
    "stage": "BETA",
    "title": "Change a table's IAM policy"
  },
  {
    "apiDisabled": true,
    "description": "Allows updating of table.",
    "name": "biglake.tables.update",
    "stage": "GA",
    "title": "Update Table"
  },
  {
    "description": "Allows updating table data by receiving short-lived read+write storage credentials from the catalog.",
    "name": "biglake.tables.updateData",
    "stage": "BETA",
    "title": "Update table data"
  },
  {
    "name": "bigquery.bireservations.get",
    "stage": "GA",
    "title": "Read BI reservations"
  },
  {
    "name": "bigquery.bireservations.update",
    "stage": "GA",
    "title": "Update BI reservations"
  },
  {
    "name": "bigquery.capacityCommitments.create",
    "stage": "GA",
    "title": "Create new capacity commitments"
  },
  {
    "name": "bigquery.capacityCommitments.delete",
    "stage": "GA",
    "title": "Delete capacity commitment"
  },
  {
    "name": "bigquery.capacityCommitments.get",
    "stage": "GA",
    "title": "Get capacity commitment data"
  },
  {
    "name": "bigquery.capacityCommitments.list",
    "stage": "GA",
    "title": "List capacity commitments"
  },
  {
    "name": "bigquery.capacityCommitments.update",
    "stage": "GA",
    "title": "Update capacity commitments"
  },
  {
    "name": "bigquery.config.get",
    "stage": "GA",
    "title": "Get bigquery configurations"
  },
  {
    "name": "bigquery.config.update",
    "stage": "GA",
    "title": "Update bigquery configurations"
  },
  {
    "name": "bigquery.connections.create",
    "stage": "GA",
    "title": "Create connection"
  },
  {
    "name": "bigquery.connections.delegate",
    "stage": "BETA",
    "title": "Delegate connection to create authorized external tables and remote functions"
  },
  {
    "name": "bigquery.connections.delete",
    "stage": "GA",
    "title": "Delete connection"
  },
  {
    "name": "bigquery.connections.get",
    "stage": "GA",
    "title": "Get connection"
  },
  {
    "name": "bigquery.connections.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy"
  },
  {
    "name": "bigquery.connections.list",
    "stage": "GA",
    "title": "List connections"
  },
  {
    "name": "bigquery.connections.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy"
  },
  {
    "name": "bigquery.connections.update",
    "stage": "GA",
    "title": "Update connection"
  },
  {
    "name": "bigquery.connections.updateTag",
    "stage": "GA",
    "title": "Update Tags"
  },
  {
    "name": "bigquery.connections.use",
    "stage": "GA",
    "title": "Use connection to access the external database"
  },
  {
    "name": "bigquery.dataPolicies.create",
    "stage": "GA",
    "title": "Create DataPolicy"
  },
  {
    "name": "bigquery.dataPolicies.delete",
    "stage": "GA",
    "title": "Delete DataPolicy"
  },
  {
    "name": "bigquery.dataPolicies.get",
    "stage": "GA",
    "title": "Get DataPolicy"
  },
  {
    "name": "bigquery.dataPolicies.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on DataPolicy"
  },
  {
    "name": "bigquery.dataPolicies.getRawData",
    "stage": "BETA",
    "title": "Read raw data for the sub-resources associated with a data policy"
  },
  {
    "name": "bigquery.dataPolicies.list",
    "stage": "GA",
    "title": "List DataPolicy"
  },
  {
    "name": "bigquery.dataPolicies.maskedGet",
    "stage": "GA",
    "title": "Read masked data for the sub-resources tagged by the policy tag associated with this data policy"
  },
  {
    "name": "bigquery.dataPolicies.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on DataPolicy"
  },
  {
    "name": "bigquery.dataPolicies.update",
    "stage": "GA",
    "title": "Update DataPolicy"
  },
  {
    "name": "bigquery.datasets.create",
    "stage": "GA",
    "title": "Create new empty datasets"
  },
  {
    "name": "bigquery.datasets.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings"
  },
  {
    "name": "bigquery.datasets.delete",
    "stage": "GA",
    "title": "Delete dataset"
  },
  {
    "name": "bigquery.datasets.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings"
  },
  {
    "name": "bigquery.datasets.get",
    "stage": "GA",
    "title": "Get dataset data and metadata"
  },
  {
    "name": "bigquery.datasets.getIamPolicy",
    "stage": "GA",
    "title": "Read IAM Policy"
  },
  {
    "name": "bigquery.datasets.link",
    "stage": "BETA",
    "title": "Link dataset"
  },
  {
    "name": "bigquery.datasets.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tags"
  },
  {
    "name": "bigquery.datasets.listSharedDatasetUsage",
    "stage": "BETA",
    "title": "View shared dataset usage"
  },
  {
    "name": "bigquery.datasets.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings"
  },
  {
    "name": "bigquery.datasets.setIamPolicy",
    "stage": "GA",
    "title": "Change IAM Policy"
  },
  {
    "name": "bigquery.datasets.update",
    "stage": "GA",
    "title": "Update dataset data and metadata"
  },
  {
    "name": "bigquery.datasets.updateTag",
    "stage": "GA",
    "title": "Update Tags"
  },
  {
    "name": "bigquery.jobs.create",
    "stage": "GA",
    "title": "Create new jobs"
  },
  {
    "name": "bigquery.jobs.delete",
    "stage": "GA",
    "title": "Delete any job"
  },
  {
    "name": "bigquery.jobs.get",
    "stage": "GA",
    "title": "Get any job data and metadata"
  },
  {
    "name": "bigquery.jobs.list",
    "stage": "GA",
    "title": "List all jobs and retrieve metadata on any job"
  },
  {
    "name": "bigquery.jobs.listAll",
    "stage": "GA",
    "title": "List all jobs and retrieve metadata on any job for any user"
  },
  {
    "name": "bigquery.jobs.listExecutionMetadata",
    "stage": "BETA",
    "title": "List all jobs execution metadata on any job for any user"
  },
  {
    "name": "bigquery.jobs.update",
    "stage": "GA",
    "title": "Update any job data and metadata"
  },
  {
    "name": "bigquery.models.create",
    "stage": "GA",
    "title": "Create new models"
  },
  {
    "name": "bigquery.models.delete",
    "stage": "GA",
    "title": "Delete model"
  },
  {
    "name": "bigquery.models.export",
    "stage": "GA",
    "title": "Export model data outside of bigquery"
  },
  {
    "name": "bigquery.models.getData",
    "stage": "GA",
    "title": "Get model data"
  },
  {
    "name": "bigquery.models.getMetadata",
    "stage": "GA",
    "title": "Get model metadata"
  },
  {
    "name": "bigquery.models.list",
    "stage": "GA",
    "title": "List models and metadata on models"
  },
  {
    "name": "bigquery.models.updateData",
    "stage": "GA",
    "title": "Update model data"
  },
  {
    "name": "bigquery.models.updateMetadata",
    "stage": "GA",
    "title": "Update model metadata"
  },
  {
    "name": "bigquery.models.updateTag",
    "stage": "GA",
    "title": "Update Tags"
  },
  {
    "name": "bigquery.objectRefs.read",
    "stage": "GA",
    "title": "Read referenced objects via ObjectRefs in BigQuery"
  },
  {
    "name": "bigquery.objectRefs.write",
    "stage": "GA",
    "title": "Write referenced objects via ObjectRefs in BigQuery"
  },
  {
    "name": "bigquery.readsessions.create",
    "stage": "GA",
    "title": "Create new read sessions"
  },
  {
    "name": "bigquery.readsessions.getData",
    "stage": "GA",
    "title": "Read data from read sessions"
  },
  {
    "name": "bigquery.readsessions.update",
    "stage": "GA",
    "title": "Update read sessions"
  },
  {
    "name": "bigquery.reservationAssignments.create",
    "stage": "GA"
  },
  {
    "name": "bigquery.reservationAssignments.delete",
    "stage": "GA",
    "title": "Delete reservation assignments"
  },
  {
    "name": "bigquery.reservationAssignments.list",
    "stage": "GA",
    "title": "List reservation assignments"
  },
  {
    "name": "bigquery.reservationAssignments.search",
    "stage": "GA",
    "title": "Look up assignments for a specified resource"
  },
  {
    "name": "bigquery.reservationGroups.create",
    "stage": "BETA",
    "title": "Create new reservation group"
  },
  {
    "name": "bigquery.reservationGroups.delete",
    "stage": "BETA",
    "title": "Delete reservation group"
  },
  {
    "name": "bigquery.reservationGroups.get",
    "stage": "BETA",
    "title": "Get/Read reservation group"
  },
  {
    "name": "bigquery.reservationGroups.list",
    "stage": "BETA",
    "title": "List reservation groups"
  },
  {
    "name": "bigquery.reservations.create",
    "stage": "GA",
    "title": "Create new reservations"
  },
  {
    "name": "bigquery.reservations.delete",
    "stage": "GA",
    "title": "Delete reservation"
  },
  {
    "name": "bigquery.reservations.get",
    "stage": "GA",
    "title": "Get reservation data"
  },
  {
    "name": "bigquery.reservations.list",
    "stage": "GA",
    "title": "List reservations"
  },
  {
    "name": "bigquery.reservations.listFailoverDatasets",
    "stage": "BETA",
    "title": "List failover dataset in SCHEMATA_REPLICAS_BY_FAILOVER_RESERVATIONS information schema view"
  },
  {
    "name": "bigquery.reservations.update",
    "stage": "GA",
    "title": "Update reservation data"
  },
  {
    "name": "bigquery.reservations.use",
    "stage": "BETA",
    "title": "Submit a job to a reservation"
  },
  {
    "name": "bigquery.routines.create",
    "stage": "BETA",
    "title": "Create new routines"
  },
  {
    "name": "bigquery.routines.delete",
    "stage": "BETA",
    "title": "Delete routine"
  },
  {
    "name": "bigquery.routines.get",
    "stage": "BETA",
    "title": "Get routine metadata and definition"
  },
  {
    "name": "bigquery.routines.list",
    "stage": "BETA",
    "title": "List routines and metadata on routines"
  },
  {
    "name": "bigquery.routines.update",
    "stage": "BETA",
    "title": "Update routine metadata and definition"
  },
  {
    "name": "bigquery.routines.updateTag",
    "stage": "GA",
    "title": "Update Tags"
  },
  {
    "name": "bigquery.rowAccessPolicies.create",
    "stage": "GA",
    "title": "Create row access policy"
  },
  {
    "name": "bigquery.rowAccessPolicies.delete",
    "stage": "GA",
    "title": "Delete row access policy"
  },
  {
    "name": "bigquery.rowAccessPolicies.get",
    "stage": "GA",
    "title": "Get row access policy"
  },
  {
    "name": "bigquery.rowAccessPolicies.getFilteredData",
    "stage": "GA",
    "title": "Get filtered table data defined by the row access policy"
  },
  {
    "name": "bigquery.rowAccessPolicies.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy"
  },
  {
    "name": "bigquery.rowAccessPolicies.list",
    "stage": "GA",
    "title": "List row access policies"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "bigquery.rowAccessPolicies.overrideTimeTravelRestrictions",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Override time travel restrictions on a table with row access policies"
  },
  {
    "name": "bigquery.rowAccessPolicies.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy"
  },
  {
    "name": "bigquery.rowAccessPolicies.update",
    "stage": "GA",
    "title": "Update row access policy"
  },
  {
    "name": "bigquery.savedqueries.create",
    "stage": "GA",
    "title": "Create new saved queries in a project"
  },
  {
    "name": "bigquery.savedqueries.delete",
    "stage": "GA",
    "title": "Delete saved query"
  },
  {
    "name": "bigquery.savedqueries.get",
    "stage": "GA",
    "title": "Get saved query metadata and content"
  },
  {
    "name": "bigquery.savedqueries.list",
    "stage": "GA",
    "title": "List saved queries in a project"
  },
  {
    "name": "bigquery.savedqueries.update",
    "stage": "GA",
    "title": "Update saved query"
  },
  {
    "name": "bigquery.tables.create",
    "stage": "GA",
    "title": "Create new tables"
  },
  {
    "name": "bigquery.tables.createIndex",
    "stage": "BETA",
    "title": "Create indexes on table"
  },
  {
    "name": "bigquery.tables.createSnapshot",
    "stage": "BETA",
    "title": "Create table snapshot"
  },
  {
    "name": "bigquery.tables.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings"
  },
  {
    "name": "bigquery.tables.delete",
    "stage": "GA",
    "title": "Delete table"
  },
  {
    "name": "bigquery.tables.deleteIndex",
    "stage": "BETA",
    "title": "Delete indexes on table"
  },
  {
    "name": "bigquery.tables.deleteSnapshot",
    "stage": "BETA",
    "title": "Delete table snapshot"
  },
  {
    "name": "bigquery.tables.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings"
  },
  {
    "name": "bigquery.tables.export",
    "stage": "GA",
    "title": "Export table data outside of bigquery"
  },
  {
    "name": "bigquery.tables.get",
    "stage": "GA",
    "title": "Get table metadata"
  },
  {
    "name": "bigquery.tables.getData",
    "stage": "GA",
    "title": "Get table data"
  },
  {
    "name": "bigquery.tables.getIamPolicy",
    "stage": "BETA",
    "title": "Read table IAM Policy"
  },
  {
    "name": "bigquery.tables.list",
    "stage": "GA",
    "title": "List tables and metadata on tables"
  },
  {
    "name": "bigquery.tables.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tags"
  },
  {
    "name": "bigquery.tables.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings"
  },
  {
    "name": "bigquery.tables.replicateData",
    "stage": "BETA",
    "title": "Replicate data"
  },
  {
    "name": "bigquery.tables.restoreSnapshot",
    "stage": "BETA",
    "title": "Restore table snapshot"
  },
  {
    "name": "bigquery.tables.setCategory",
    "stage": "BETA",
    "title": "Set categories in table schema"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "bigquery.tables.setColumnDataPolicy",
    "stage": "BETA",
    "title": "Set column data policies in table schema"
  },
  {
    "name": "bigquery.tables.setIamPolicy",
    "stage": "BETA",
    "title": "Change table IAM Policy"
  },
  {
    "name": "bigquery.tables.update",
    "stage": "GA",
    "title": "Update table metadata"
  },
  {
    "name": "bigquery.tables.updateData",
    "stage": "GA",
    "title": "Update table data"
  },
  {
    "name": "bigquery.tables.updateIndex",
    "stage": "BETA",
    "title": "Update indexes on table"
  },
  {
    "name": "bigquery.tables.updateTag",
    "stage": "GA",
    "title": "Update Tags"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.transfers.get",
    "stage": "GA",
    "title": "Get data transfer configurations"
  },
  {
    "apiDisabled": true,
    "name": "bigquery.transfers.update",
    "stage": "GA",
    "title": "Create data transfer configurations"
  },
  {
    "description": "Get subtasks",
    "name": "bigquerymigration.subtasks.get",
    "stage": "GA",
    "title": "Get subtasks"
  },
  {
    "description": "List subtasks",
    "name": "bigquerymigration.subtasks.list",
    "stage": "GA",
    "title": "List subtasks"
  },
  {
    "description": "Translate Queries",
    "name": "bigquerymigration.translation.translate",
    "stage": "GA",
    "title": "Translate Queries"
  },
  {
    "description": "Create workflows",
    "name": "bigquerymigration.workflows.create",
    "stage": "GA",
    "title": "Create workflows"
  },
  {
    "description": "Delete workflows",
    "name": "bigquerymigration.workflows.delete",
    "stage": "GA",
    "title": "Delete workflows"
  },
  {
    "description": "Enable AI output types",
    "name": "bigquerymigration.workflows.enableAiOutputTypes",
    "stage": "BETA",
    "title": "Enable AI output types"
  },
  {
    "description": "Enable Lineage output types",
    "name": "bigquerymigration.workflows.enableLineageOutputTypes",
    "stage": "BETA",
    "title": "Enable Lineage output types"
  },
  {
    "description": "Enable output type permissions",
    "name": "bigquerymigration.workflows.enableOutputTypePermissions",
    "stage": "BETA",
    "title": "Enable output type permissions"
  },
  {
    "description": "Get workflows",
    "name": "bigquerymigration.workflows.get",
    "stage": "GA",
    "title": "Get workflows"
  },
  {
    "description": "List workflows",
    "name": "bigquerymigration.workflows.list",
    "stage": "GA",
    "title": "List workflows"
  },
  {
    "description": "Orchestrate tasks",
    "name": "bigquerymigration.workflows.orchestrateTask",
    "stage": "GA",
    "title": "Orchestrate tasks"
  },
  {
    "description": "Update workflows",
    "name": "bigquerymigration.workflows.update",
    "stage": "GA",
    "title": "Update workflows"
  },
  {
    "name": "bigqueryreservation.googleapis.com/bireservations.get",
    "primaryPermission": "bigquery.bireservations.get",
    "stage": "GA",
    "title": "Read BI reservations"
  },
  {
    "name": "bigqueryreservation.googleapis.com/bireservations.update",
    "primaryPermission": "bigquery.bireservations.update",
    "stage": "GA",
    "title": "Update BI reservations"
  },
  {
    "name": "bigqueryreservation.googleapis.com/capacityCommitments.create",
    "primaryPermission": "bigquery.capacityCommitments.create",
    "stage": "GA",
    "title": "Create new capacity commitments"
  },
  {
    "name": "bigqueryreservation.googleapis.com/capacityCommitments.delete",
    "primaryPermission": "bigquery.capacityCommitments.delete",
    "stage": "GA",
    "title": "Delete capacity commitment"
  },
  {
    "name": "bigqueryreservation.googleapis.com/capacityCommitments.get",
    "primaryPermission": "bigquery.capacityCommitments.get",
    "stage": "GA",
    "title": "Get capacity commitment data"
  },
  {
    "name": "bigqueryreservation.googleapis.com/capacityCommitments.list",
    "primaryPermission": "bigquery.capacityCommitments.list",
    "stage": "GA",
    "title": "List capacity commitments"
  },
  {
    "name": "bigqueryreservation.googleapis.com/capacityCommitments.update",
    "primaryPermission": "bigquery.capacityCommitments.update",
    "stage": "GA",
    "title": "Update capacity commitments"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservationAssignments.create",
    "primaryPermission": "bigquery.reservationAssignments.create",
    "stage": "GA"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservationAssignments.delete",
    "primaryPermission": "bigquery.reservationAssignments.delete",
    "stage": "GA",
    "title": "Delete reservation assignments"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservationAssignments.list",
    "primaryPermission": "bigquery.reservationAssignments.list",
    "stage": "GA",
    "title": "List reservation assignments"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservationAssignments.search",
    "primaryPermission": "bigquery.reservationAssignments.search",
    "stage": "GA",
    "title": "Look up assignments for a specified resource"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservationGroups.create",
    "primaryPermission": "bigquery.reservationGroups.create",
    "stage": "BETA",
    "title": "Create new reservation group"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservationGroups.delete",
    "primaryPermission": "bigquery.reservationGroups.delete",
    "stage": "BETA",
    "title": "Delete reservation group"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservationGroups.get",
    "primaryPermission": "bigquery.reservationGroups.get",
    "stage": "BETA",
    "title": "Get/Read reservation group"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservationGroups.list",
    "primaryPermission": "bigquery.reservationGroups.list",
    "stage": "BETA",
    "title": "List reservation groups"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservations.create",
    "primaryPermission": "bigquery.reservations.create",
    "stage": "GA",
    "title": "Create new reservations"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservations.delete",
    "primaryPermission": "bigquery.reservations.delete",
    "stage": "GA",
    "title": "Delete reservation"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservations.get",
    "primaryPermission": "bigquery.reservations.get",
    "stage": "GA",
    "title": "Get reservation data"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservations.list",
    "primaryPermission": "bigquery.reservations.list",
    "stage": "GA",
    "title": "List reservations"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservations.listFailoverDatasets",
    "primaryPermission": "bigquery.reservations.listFailoverDatasets",
    "stage": "BETA",
    "title": "List failover dataset in SCHEMATA_REPLICAS_BY_FAILOVER_RESERVATIONS information schema view"
  },
  {
    "name": "bigqueryreservation.googleapis.com/reservations.update",
    "primaryPermission": "bigquery.reservations.update",
    "stage": "GA",
    "title": "Update reservation data"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.appProfiles.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.appProfiles.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.appProfiles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.appProfiles.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.appProfiles.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.mutateRows",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.readRows",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.sampleRowKeys",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.authorizedViews.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.backups.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.backups.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.backups.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.backups.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.backups.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.backups.read",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.backups.restore",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.backups.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.backups.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.clusters.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.clusters.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.clusters.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.clusters.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.clusters.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.hotTablets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.executeQuery",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.ping",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.instances.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.keyvisualizer.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.keyvisualizer.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.logicalViews.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.logicalViews.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.logicalViews.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.logicalViews.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.logicalViews.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.logicalViews.readRows",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.logicalViews.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.logicalViews.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.materializedViews.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.materializedViews.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.materializedViews.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.materializedViews.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.materializedViews.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.materializedViews.readRows",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.materializedViews.sampleRowKeys",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.materializedViews.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.materializedViews.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.schemaBundles.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.schemaBundles.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.schemaBundles.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.schemaBundles.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.schemaBundles.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.schemaBundles.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "bigtable.schemaBundles.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.checkConsistency",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.generateConsistencyToken",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.mutateRows",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.readRows",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.sampleRowKeys",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.undelete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "bigtable.tables.update",
    "stage": "GA"
  },
  {
    "name": "billing.anomalies.get",
    "stage": "GA",
    "title": "Get a specific anomaly"
  },
  {
    "name": "billing.anomalies.list",
    "stage": "GA",
    "title": "List the anomalies"
  },
  {
    "name": "billing.anomalies.submitFeedback",
    "stage": "GA",
    "title": "Update a anomaly feedback of all anomalies under a project or billing account"
  },
  {
    "name": "billing.resourceCosts.get",
    "stage": "GA",
    "title": "Get costs scoped to a specific resource (e.g. project)"
  },
  {
    "name": "billing.resourcebudgets.read",
    "stage": "GA",
    "title": "Get budgets scoped to a specific resource (e.g. project)"
  },
  {
    "name": "billing.resourcebudgets.write",
    "stage": "GA",
    "title": "Write access to budgets scoped to a specific resource (e.g. project)"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.attestors.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.attestors.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.attestors.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.attestors.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.attestors.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.attestors.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.attestors.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.attestors.verifyImageAttested",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.continuousValidationConfig.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.continuousValidationConfig.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.continuousValidationConfig.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.continuousValidationConfig.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.platformPolicies.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.platformPolicies.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.platformPolicies.evaluatePolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.platformPolicies.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.platformPolicies.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.platformPolicies.replace",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.policy.evaluatePolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.policy.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.policy.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.policy.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "binaryauthorization.policy.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Create new blockchain nodes",
    "name": "blockchainnodeengine.blockchainNodes.create",
    "stage": "GA",
    "title": "Create blockchain nodes"
  },
  {
    "apiDisabled": true,
    "description": "Delete a blockchain node",
    "name": "blockchainnodeengine.blockchainNodes.delete",
    "stage": "GA",
    "title": "Delete a blockchain node"
  },
  {
    "apiDisabled": true,
    "description": "Get details of a blockchain node",
    "name": "blockchainnodeengine.blockchainNodes.get",
    "stage": "GA",
    "title": "Get a blockchain node"
  },
  {
    "apiDisabled": true,
    "description": "List blockchain nodes",
    "name": "blockchainnodeengine.blockchainNodes.list",
    "stage": "GA",
    "title": "List blockchain nodes"
  },
  {
    "apiDisabled": true,
    "description": "Update settings of a blockchain node",
    "name": "blockchainnodeengine.blockchainNodes.update",
    "stage": "GA",
    "title": "Update blockchain node"
  },
  {
    "apiDisabled": true,
    "description": "Get details of a location",
    "name": "blockchainnodeengine.locations.get",
    "stage": "GA",
    "title": "Get location"
  },
  {
    "apiDisabled": true,
    "description": "List locations blockchain nodes can be created in",
    "name": "blockchainnodeengine.locations.list",
    "stage": "GA",
    "title": "List locations"
  },
  {
    "apiDisabled": true,
    "description": "Cancel a long running operation",
    "name": "blockchainnodeengine.operations.cancel",
    "stage": "GA",
    "title": "Cancel operation"
  },
  {
    "apiDisabled": true,
    "description": "Delete a long running operation - note this does not cancel the operation",
    "name": "blockchainnodeengine.operations.delete",
    "stage": "GA",
    "title": "Delete operation"
  },
  {
    "apiDisabled": true,
    "description": "Get details of a long running operation",
    "name": "blockchainnodeengine.operations.get",
    "stage": "GA",
    "title": "Get operation"
  },
  {
    "apiDisabled": true,
    "description": "List long running operations",
    "name": "blockchainnodeengine.operations.list",
    "stage": "GA",
    "title": "List operations"
  },
  {
    "apiDisabled": true,
    "description": "Create new blockchain validator configurations",
    "name": "blockchainvalidatormanager.blockchainValidatorConfigs.create",
    "stage": "BETA",
    "title": "Create blockchain validator configurations"
  },
  {
    "apiDisabled": true,
    "description": "Delete a blockchain validator configuration",
    "name": "blockchainvalidatormanager.blockchainValidatorConfigs.delete",
    "stage": "BETA",
    "title": "Delete blockchain validator configurations"
  },
  {
    "apiDisabled": true,
    "description": "Get details of a blockchain validator configuration",
    "name": "blockchainvalidatormanager.blockchainValidatorConfigs.get",
    "stage": "BETA",
    "title": "Get a blockchain validator configuration"
  },
  {
    "apiDisabled": true,
    "description": "List blockchain validator configurations",
    "name": "blockchainvalidatormanager.blockchainValidatorConfigs.list",
    "stage": "BETA",
    "title": "List blockchain validator configurations"
  },
  {
    "apiDisabled": true,
    "description": "Update settings of a blockchain validator configuration",
    "name": "blockchainvalidatormanager.blockchainValidatorConfigs.update",
    "stage": "BETA",
    "title": "Update blockchain validator configurations"
  },
  {
    "apiDisabled": true,
    "description": "Get details of a location",
    "name": "blockchainvalidatormanager.locations.get",
    "stage": "BETA",
    "title": "Get location"
  },
  {
    "apiDisabled": true,
    "description": "List locations blockchain validator configurations can be created in",
    "name": "blockchainvalidatormanager.locations.list",
    "stage": "BETA",
    "title": "List locations"
  },
  {
    "apiDisabled": true,
    "description": "Cancel a long running operation",
    "name": "blockchainvalidatormanager.operations.cancel",
    "stage": "BETA",
    "title": "Cancel operation"
  },
  {
    "apiDisabled": true,
    "description": "Delete a long running operation - note this does not cancel the operation",
    "name": "blockchainvalidatormanager.operations.delete",
    "stage": "BETA",
    "title": "Delete operation"
  },
  {
    "apiDisabled": true,
    "description": "Get details of a long running operation",
    "name": "blockchainvalidatormanager.operations.get",
    "stage": "BETA",
    "title": "Get operation"
  },
  {
    "apiDisabled": true,
    "description": "List long running operations",
    "name": "blockchainvalidatormanager.operations.list",
    "stage": "BETA",
    "title": "List operations"
  },
  {
    "apiDisabled": true,
    "description": "Allows fetching capacity plans",
    "name": "capacityplanner.capacityPlans.get",
    "stage": "BETA",
    "title": "Get Capacity Plans"
  },
  {
    "apiDisabled": true,
    "description": "Allows listing capacity plans",
    "name": "capacityplanner.capacityPlans.list",
    "stage": "BETA",
    "title": "List Capacity Plans"
  },
  {
    "apiDisabled": true,
    "description": "View Usage Forecasts",
    "name": "capacityplanner.forecasts.list",
    "stage": "BETA",
    "title": "View Usage Forecasts"
  },
  {
    "apiDisabled": true,
    "description": "View Usage Histories",
    "name": "capacityplanner.usageHistories.list",
    "stage": "BETA",
    "title": "View Usage Histories"
  },
  {
    "apiDisabled": true,
    "description": "Summarize Usage Histories",
    "name": "capacityplanner.usageHistories.summarize",
    "stage": "BETA",
    "title": "Summarize Usage Histories"
  },
  {
    "apiDisabled": true,
    "description": "Get a patient",
    "name": "carestudio.patients.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "description": "List all Patients",
    "name": "carestudio.patients.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certissuanceconfigs.create",
    "stage": "GA",
    "title": "Create CertificateIssuanceConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certissuanceconfigs.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on CertificateIssuanceConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certissuanceconfigs.delete",
    "stage": "GA",
    "title": "Delete CertificateIssuanceConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certissuanceconfigs.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on CertificateIssuanceConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certissuanceconfigs.get",
    "stage": "GA",
    "title": "Get CertificateIssuanceConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certissuanceconfigs.list",
    "stage": "GA",
    "title": "List CertificateIssuanceConfigs"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certissuanceconfigs.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on CertificateIssuanceConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certissuanceconfigs.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on CertificateIssuanceConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certissuanceconfigs.update",
    "stage": "GA",
    "title": "Update CertificateIssuanceConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certissuanceconfigs.use",
    "stage": "GA",
    "title": "Use CertificateIssuanceConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmapentries.create",
    "stage": "GA",
    "title": "Create CertificateMapEntry"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmapentries.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on CertificateMapEntry"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmapentries.delete",
    "stage": "GA",
    "title": "Delete CertificateMapEntry"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmapentries.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on CertificateMapEntry"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmapentries.get",
    "stage": "GA",
    "title": "Get CertificateMapEntry"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmapentries.list",
    "stage": "GA",
    "title": "List CertificateMapEntries"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmapentries.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on CertificateMapEntry"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmapentries.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on CertificateMapEntry"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmapentries.update",
    "stage": "GA",
    "title": "Update CertificateMapEntry"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmaps.create",
    "stage": "GA",
    "title": "Create CertificateMap"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmaps.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on CertificateMap"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmaps.delete",
    "stage": "GA",
    "title": "Delete CertificateMap"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmaps.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on CertificateMap"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmaps.get",
    "stage": "GA",
    "title": "Get CertificateMap"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmaps.list",
    "stage": "GA",
    "title": "List CertificateMaps"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmaps.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on CertificateMap"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmaps.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on CertificateMap"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmaps.update",
    "stage": "GA",
    "title": "Update CertificateMap"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certmaps.use",
    "stage": "GA",
    "title": "Use CertificateMap"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certs.create",
    "stage": "GA",
    "title": "Create Certificate"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certs.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on Certificates"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certs.delete",
    "stage": "GA",
    "title": "Delete Certificate"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certs.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on Certificates"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certs.get",
    "stage": "GA",
    "title": "Get Certificate"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certs.list",
    "stage": "GA",
    "title": "List Certificates"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certs.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on Certificates"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certs.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on Certificates"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certs.update",
    "stage": "GA",
    "title": "Update Certificate"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.certs.use",
    "stage": "GA",
    "title": "Use Certificate"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.dnsauthorizations.create",
    "stage": "GA",
    "title": "Create DnsAuthorization"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.dnsauthorizations.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on DnsAuthorization"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.dnsauthorizations.delete",
    "stage": "GA",
    "title": "Delete DnsAuthorization"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.dnsauthorizations.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on DnsAuthorization"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.dnsauthorizations.get",
    "stage": "GA",
    "title": "Get DnsAuthorization"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.dnsauthorizations.list",
    "stage": "GA",
    "title": "List DnsAuthorizations"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.dnsauthorizations.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on DnsAuthorization"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.dnsauthorizations.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on DnsAuthorization"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.dnsauthorizations.update",
    "stage": "GA",
    "title": "Update DnsAuthorization"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.dnsauthorizations.use",
    "stage": "GA",
    "title": "Use DnsAuthorization"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.trustconfigs.create",
    "stage": "GA",
    "title": "Create TrustConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.trustconfigs.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on TrustConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.trustconfigs.delete",
    "stage": "GA",
    "title": "Delete TrustConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.trustconfigs.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on TrustConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.trustconfigs.get",
    "stage": "GA",
    "title": "Get TrustConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.trustconfigs.list",
    "stage": "GA",
    "title": "List TrustConfigs"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.trustconfigs.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on TrustConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.trustconfigs.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on TrustConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.trustconfigs.update",
    "stage": "GA",
    "title": "Update TrustConfig"
  },
  {
    "apiDisabled": true,
    "name": "certificatemanager.trustconfigs.use",
    "stage": "GA",
    "title": "Use TrustConfig"
  },
  {
    "apiDisabled": true,
    "name": "chat.bots.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "chat.bots.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.ais.createFeedback",
    "stage": "GA",
    "title": "Submit feedback on content generated by Malachite AI services."
  },
  {
    "apiDisabled": true,
    "name": "chronicle.ais.translateUdmQuery",
    "stage": "GA",
    "title": "Perform AI translation of natural language to UDM Search query."
  },
  {
    "apiDisabled": true,
    "name": "chronicle.ais.translateYlRule",
    "stage": "GA",
    "title": "Perform AI translation of natural language search to rule."
  },
  {
    "apiDisabled": true,
    "name": "chronicle.analyticValues.list",
    "stage": "GA",
    "title": "List Analytic Values"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.analytics.list",
    "stage": "GA",
    "title": "List Analytics"
  },
  {
    "name": "chronicle.bigQueryAccess.provide",
    "stage": "BETA",
    "title": "Provide BigQuery access"
  },
  {
    "name": "chronicle.bigQueryExport.get",
    "stage": "BETA",
    "title": "Get BigQueryExport"
  },
  {
    "name": "chronicle.bigQueryExport.provision",
    "stage": "BETA",
    "title": "Provision BigQueryExport"
  },
  {
    "name": "chronicle.bigQueryExport.update",
    "stage": "BETA",
    "title": "Update BigQueryExport"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.cases.countPriorities",
    "stage": "GA",
    "title": "Get Case counts"
  },
  {
    "name": "chronicle.collectors.create",
    "stage": "BETA",
    "title": "Create Collector"
  },
  {
    "name": "chronicle.collectors.delete",
    "stage": "BETA",
    "title": "Delete Collector"
  },
  {
    "name": "chronicle.collectors.get",
    "stage": "BETA",
    "title": "Get Collector"
  },
  {
    "name": "chronicle.collectors.list",
    "stage": "BETA",
    "title": "List Collectors"
  },
  {
    "name": "chronicle.collectors.update",
    "stage": "BETA",
    "title": "Update Collector"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.conversations.create",
    "stage": "GA",
    "title": "Create New Conversation."
  },
  {
    "apiDisabled": true,
    "name": "chronicle.conversations.delete",
    "stage": "GA",
    "title": "Delete an existing Conversation."
  },
  {
    "apiDisabled": true,
    "name": "chronicle.conversations.get",
    "stage": "GA",
    "title": "Get an existing conversation."
  },
  {
    "apiDisabled": true,
    "name": "chronicle.conversations.list",
    "stage": "GA",
    "title": "List Conversation."
  },
  {
    "apiDisabled": true,
    "name": "chronicle.conversations.update",
    "stage": "GA",
    "title": "Update an existing Conversation."
  },
  {
    "name": "chronicle.curatedRuleSetCategories.countAllCuratedRuleSetDetections",
    "stage": "BETA",
    "title": "Count All Detections From Curated Rule Sets"
  },
  {
    "name": "chronicle.curatedRuleSetCategories.get",
    "stage": "BETA",
    "title": "Get Curated Rule Set Category"
  },
  {
    "name": "chronicle.curatedRuleSetCategories.list",
    "stage": "BETA",
    "title": "List Curated Rule Set Categories"
  },
  {
    "name": "chronicle.curatedRuleSetDeployments.batchUpdate",
    "stage": "BETA",
    "title": "Batch Update Curated Rule Set Deployments"
  },
  {
    "name": "chronicle.curatedRuleSetDeployments.get",
    "stage": "BETA",
    "title": "Get Curated Rule Set Deployment"
  },
  {
    "name": "chronicle.curatedRuleSetDeployments.list",
    "stage": "BETA",
    "title": "List Curated Rule Set Deployments"
  },
  {
    "name": "chronicle.curatedRuleSetDeployments.update",
    "stage": "BETA",
    "title": "Update Curated Rule Set Deployment"
  },
  {
    "name": "chronicle.curatedRuleSets.countCuratedRuleSetDetections",
    "stage": "BETA",
    "title": "Count Detections From Curated Rule Set"
  },
  {
    "name": "chronicle.curatedRuleSets.get",
    "stage": "BETA",
    "title": "Get Curated Rule Set"
  },
  {
    "name": "chronicle.curatedRuleSets.list",
    "stage": "BETA",
    "title": "List Curated Rule Sets"
  },
  {
    "name": "chronicle.curatedRules.get",
    "stage": "BETA",
    "title": "Get Curated Rule"
  },
  {
    "name": "chronicle.curatedRules.list",
    "stage": "BETA",
    "title": "List Curated Rules"
  },
  {
    "name": "chronicle.dashboardCharts.get",
    "stage": "BETA",
    "title": "Get DashboardChart"
  },
  {
    "name": "chronicle.dashboardCharts.list",
    "stage": "BETA",
    "title": "List DashboardCharts"
  },
  {
    "name": "chronicle.dashboardQueries.execute",
    "stage": "BETA",
    "title": "Execute DashboardQuery"
  },
  {
    "name": "chronicle.dashboardQueries.get",
    "stage": "BETA",
    "title": "Get DashboardQuery"
  },
  {
    "name": "chronicle.dashboardQueries.list",
    "stage": "BETA",
    "title": "List DashboardQueries"
  },
  {
    "name": "chronicle.dashboards.copy",
    "stage": "BETA",
    "title": "Copy Dashboard"
  },
  {
    "name": "chronicle.dashboards.create",
    "stage": "BETA",
    "title": "Create Dashboard"
  },
  {
    "name": "chronicle.dashboards.delete",
    "stage": "BETA",
    "title": "Delete Dashboard"
  },
  {
    "name": "chronicle.dashboards.edit",
    "stage": "BETA",
    "title": "Edit Dashboards"
  },
  {
    "name": "chronicle.dashboards.get",
    "stage": "BETA",
    "title": "Get Dashboard"
  },
  {
    "name": "chronicle.dashboards.list",
    "stage": "BETA",
    "title": "List Dashboards"
  },
  {
    "name": "chronicle.dashboards.schedule",
    "stage": "BETA",
    "title": "Schedule Dashboards reports"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.dataAccessLabels.create",
    "stage": "GA",
    "title": "Create data access label"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.dataAccessLabels.delete",
    "stage": "GA",
    "title": "Delete data access label"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.dataAccessLabels.get",
    "stage": "GA",
    "title": "Get data access label"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.dataAccessLabels.list",
    "stage": "GA",
    "title": "List data access labels"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.dataAccessLabels.update",
    "stage": "GA",
    "title": "Update data access label"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.dataAccessScopes.create",
    "stage": "GA",
    "title": "Create data access scope"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.dataAccessScopes.delete",
    "stage": "GA",
    "title": "Delete data access scope"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.dataAccessScopes.get",
    "stage": "GA",
    "title": "Get data access scope"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.dataAccessScopes.list",
    "stage": "GA",
    "title": "List data access scope"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.dataAccessScopes.permit",
    "stage": "GA",
    "title": "Permit data access scope to be accessed"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.dataAccessScopes.update",
    "stage": "GA",
    "title": "Update data access scope"
  },
  {
    "name": "chronicle.dataExports.cancel",
    "stage": "BETA",
    "title": "Cancel DataExport"
  },
  {
    "name": "chronicle.dataExports.create",
    "stage": "BETA",
    "title": "Create DataExport"
  },
  {
    "name": "chronicle.dataExports.fetchLogTypesAvailableForExport",
    "stage": "BETA",
    "title": "Fetch log types available for export"
  },
  {
    "name": "chronicle.dataExports.get",
    "stage": "BETA",
    "title": "Get DataExport"
  },
  {
    "name": "chronicle.dataTableOperationErrors.get",
    "stage": "BETA",
    "title": "Get data table operation errors"
  },
  {
    "name": "chronicle.dataTableRows.asyncBulkCreate",
    "stage": "BETA",
    "title": "Create data table rows asynchronously in bulk"
  },
  {
    "name": "chronicle.dataTableRows.asyncBulkReplace",
    "stage": "BETA",
    "title": "Replace data table rows asynchronously in bulk"
  },
  {
    "name": "chronicle.dataTableRows.asyncBulkUpdate",
    "stage": "BETA",
    "title": "Update data table rows asynchronously in bulk"
  },
  {
    "name": "chronicle.dataTableRows.bulkCreate",
    "stage": "BETA",
    "title": "Create data table rows in bulk"
  },
  {
    "name": "chronicle.dataTableRows.bulkGet",
    "stage": "BETA",
    "title": "Get data table rows in bulk"
  },
  {
    "name": "chronicle.dataTableRows.bulkReplace",
    "stage": "BETA",
    "title": "Replace data table rows in bulk"
  },
  {
    "name": "chronicle.dataTableRows.bulkUpdate",
    "stage": "BETA",
    "title": "Update data table rows in bulk"
  },
  {
    "name": "chronicle.dataTableRows.create",
    "stage": "BETA",
    "title": "Create data table row"
  },
  {
    "name": "chronicle.dataTableRows.delete",
    "stage": "BETA",
    "title": "Delete data table row"
  },
  {
    "name": "chronicle.dataTableRows.get",
    "stage": "BETA",
    "title": "Get data table row"
  },
  {
    "name": "chronicle.dataTableRows.list",
    "stage": "BETA",
    "title": "List data table rows"
  },
  {
    "name": "chronicle.dataTableRows.update",
    "stage": "BETA",
    "title": "Update data table row"
  },
  {
    "name": "chronicle.dataTables.bulkCreateDataTableAsync",
    "stage": "BETA",
    "title": "Create data table from file"
  },
  {
    "name": "chronicle.dataTables.create",
    "stage": "BETA",
    "title": "Create data table"
  },
  {
    "name": "chronicle.dataTables.delete",
    "stage": "BETA",
    "title": "Delete data table"
  },
  {
    "name": "chronicle.dataTables.get",
    "stage": "BETA",
    "title": "Get data table"
  },
  {
    "name": "chronicle.dataTables.list",
    "stage": "BETA",
    "title": "List data tables"
  },
  {
    "name": "chronicle.dataTables.update",
    "stage": "BETA",
    "title": "Update data table"
  },
  {
    "name": "chronicle.dataTaps.create",
    "stage": "BETA",
    "title": "Create DataTap"
  },
  {
    "name": "chronicle.dataTaps.delete",
    "stage": "BETA",
    "title": "Delete DataTap"
  },
  {
    "name": "chronicle.dataTaps.get",
    "stage": "BETA",
    "title": "Get DataTap"
  },
  {
    "name": "chronicle.dataTaps.list",
    "stage": "BETA",
    "title": "List DataTap"
  },
  {
    "name": "chronicle.dataTaps.update",
    "stage": "BETA",
    "title": "Update DataTap"
  },
  {
    "name": "chronicle.enrichmentControls.create",
    "stage": "BETA",
    "title": "Create EnrichmentControl."
  },
  {
    "name": "chronicle.enrichmentControls.delete",
    "stage": "BETA",
    "title": "Delete EnrichmentControl."
  },
  {
    "name": "chronicle.enrichmentControls.get",
    "stage": "BETA",
    "title": "Get EnrichmentControl."
  },
  {
    "name": "chronicle.enrichmentControls.list",
    "stage": "BETA",
    "title": "List EnrichmentControls."
  },
  {
    "name": "chronicle.entities.batchCreate",
    "stage": "BETA",
    "title": "Batch Create Entities"
  },
  {
    "name": "chronicle.entities.batchDelete",
    "stage": "BETA",
    "title": "Batch Delete Entities"
  },
  {
    "name": "chronicle.entities.batchValidate",
    "stage": "BETA",
    "title": "Validate Entity"
  },
  {
    "name": "chronicle.entities.create",
    "stage": "BETA",
    "title": "Create Entity"
  },
  {
    "name": "chronicle.entities.delete",
    "stage": "BETA",
    "title": "Delete Entity"
  },
  {
    "name": "chronicle.entities.find",
    "stage": "BETA",
    "title": "Search Entities"
  },
  {
    "name": "chronicle.entities.findRelatedEntities",
    "stage": "BETA",
    "title": "Find Related Entities"
  },
  {
    "name": "chronicle.entities.get",
    "stage": "BETA",
    "title": "Get Entity"
  },
  {
    "name": "chronicle.entities.import",
    "stage": "BETA",
    "title": "Import Entities"
  },
  {
    "name": "chronicle.entities.list",
    "stage": "BETA",
    "title": "List Entities"
  },
  {
    "name": "chronicle.entities.modifyEntityRiskScore",
    "stage": "BETA",
    "title": "Modify Entity Risk Score"
  },
  {
    "name": "chronicle.entities.queryEntityRiskScoreModifications",
    "stage": "BETA",
    "title": "Query Entity Risk Score Modifications"
  },
  {
    "name": "chronicle.entities.searchEntities",
    "stage": "BETA",
    "title": "Search Entities"
  },
  {
    "name": "chronicle.entities.summarize",
    "stage": "BETA",
    "title": "Summarize Entity"
  },
  {
    "name": "chronicle.entities.summarizeFromQuery",
    "stage": "BETA",
    "title": "Search Entities"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.entityRiskScores.queryEntityRiskScores",
    "stage": "GA",
    "title": "Query Entity Risk Scores"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.errorNotificationConfigs.create",
    "stage": "GA",
    "title": "Create Error Notification Config"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.errorNotificationConfigs.delete",
    "stage": "GA",
    "title": "Delete Error Notification Config"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.errorNotificationConfigs.get",
    "stage": "GA",
    "title": "Get Error Notification Config"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.errorNotificationConfigs.list",
    "stage": "GA",
    "title": "List Error Notification Configs"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.errorNotificationConfigs.update",
    "stage": "GA",
    "title": "Update Error Notification Config"
  },
  {
    "name": "chronicle.events.batchGet",
    "stage": "BETA",
    "title": "Batch Get Events"
  },
  {
    "name": "chronicle.events.findUdmFieldValues",
    "stage": "BETA",
    "title": "Find UDM Field Values"
  },
  {
    "name": "chronicle.events.get",
    "stage": "BETA",
    "title": "Get Event"
  },
  {
    "name": "chronicle.events.import",
    "stage": "BETA",
    "title": "Import Events"
  },
  {
    "name": "chronicle.events.queryProductSourceStats",
    "stage": "BETA",
    "title": "Query Product Source Stats"
  },
  {
    "name": "chronicle.events.searchRawLogs",
    "stage": "BETA",
    "title": "Search Raw Logs"
  },
  {
    "name": "chronicle.events.udmSearch",
    "stage": "BETA",
    "title": "Udm Search"
  },
  {
    "name": "chronicle.events.validateQuery",
    "stage": "BETA",
    "title": "Validate Query"
  },
  {
    "name": "chronicle.extensionValidationReports.get",
    "stage": "BETA",
    "title": "Get Extension Validation Reports"
  },
  {
    "name": "chronicle.extensionValidationReports.list",
    "stage": "BETA",
    "title": "List Extension Validation Reports"
  },
  {
    "name": "chronicle.featuredContentNativeDashboards.get",
    "stage": "BETA",
    "title": "Get Dashboard Content"
  },
  {
    "name": "chronicle.featuredContentNativeDashboards.install",
    "stage": "BETA",
    "title": "Install Dashboard Content"
  },
  {
    "name": "chronicle.featuredContentNativeDashboards.list",
    "stage": "BETA",
    "title": "List Dashboard Contents"
  },
  {
    "name": "chronicle.featuredContentRules.list",
    "stage": "BETA",
    "title": "List Featured Content Rules"
  },
  {
    "name": "chronicle.featuredContentSearchQueries.get",
    "stage": "BETA",
    "title": "Get Search Query Content"
  },
  {
    "name": "chronicle.featuredContentSearchQueries.install",
    "stage": "BETA",
    "title": "Install Search Query Content"
  },
  {
    "name": "chronicle.featuredContentSearchQueries.list",
    "stage": "BETA",
    "title": "List Search Query Contents"
  },
  {
    "name": "chronicle.federationGroups.create",
    "stage": "BETA",
    "title": "Create a Federation Group"
  },
  {
    "name": "chronicle.federationGroups.delete",
    "stage": "BETA",
    "title": "Delete a Federation Group"
  },
  {
    "name": "chronicle.federationGroups.get",
    "stage": "BETA",
    "title": "Get a Federation Group"
  },
  {
    "name": "chronicle.federationGroups.list",
    "stage": "BETA",
    "title": "List of all Federation Groups"
  },
  {
    "name": "chronicle.federationGroups.update",
    "stage": "BETA",
    "title": "Update a Federation Group"
  },
  {
    "name": "chronicle.feedPacks.get",
    "stage": "BETA",
    "title": "Get Feed Pack based on the feed pack ID."
  },
  {
    "name": "chronicle.feedPacks.list",
    "stage": "BETA",
    "title": "Lists Packs for which feeds can be configured."
  },
  {
    "apiDisabled": true,
    "name": "chronicle.feedServiceAccounts.fetch",
    "stage": "GA",
    "title": "Fetch service account used to pull data via GCS feeds"
  },
  {
    "name": "chronicle.feedSourceTypeSchemas.list",
    "stage": "BETA",
    "title": "List feed source type schemas"
  },
  {
    "name": "chronicle.feeds.create",
    "stage": "BETA",
    "title": "Create feed"
  },
  {
    "name": "chronicle.feeds.delete",
    "stage": "BETA",
    "title": "Delete feed"
  },
  {
    "name": "chronicle.feeds.disable",
    "stage": "BETA",
    "title": "Disable feed"
  },
  {
    "name": "chronicle.feeds.enable",
    "stage": "BETA",
    "title": "Enable feed"
  },
  {
    "name": "chronicle.feeds.generateSecret",
    "stage": "BETA",
    "title": "Generate feed secret"
  },
  {
    "name": "chronicle.feeds.get",
    "stage": "BETA",
    "title": "Get feed"
  },
  {
    "name": "chronicle.feeds.list",
    "stage": "BETA",
    "title": "List feeds"
  },
  {
    "name": "chronicle.feeds.update",
    "stage": "BETA",
    "title": "Update feed"
  },
  {
    "name": "chronicle.findingsGraphs.exploreNode",
    "stage": "BETA",
    "title": "Explore a node."
  },
  {
    "name": "chronicle.findingsGraphs.initializeGraph",
    "stage": "BETA",
    "title": "Initialize a graph."
  },
  {
    "apiDisabled": true,
    "name": "chronicle.findingsRefinementDeployments.get",
    "stage": "GA",
    "title": "Get Findings Refinement Deployment"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.findingsRefinementDeployments.list",
    "stage": "GA",
    "title": "List Findings Refinement Deployments"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.findingsRefinementDeployments.update",
    "stage": "GA",
    "title": "Update Findings Refinement Deployment"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.findingsRefinements.computeActivity",
    "stage": "GA",
    "title": "Compute Findings Refinement Activity"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.findingsRefinements.computeAllActivities",
    "stage": "GA",
    "title": "Compute All Findings Refinement Activities"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.findingsRefinements.create",
    "stage": "GA",
    "title": "Create Findings Refinement"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.findingsRefinements.get",
    "stage": "GA",
    "title": "Get Findings Refinement"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.findingsRefinements.list",
    "stage": "GA",
    "title": "List Findings Refinements"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.findingsRefinements.test",
    "stage": "GA",
    "title": "Test Findings Refinement"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.findingsRefinements.update",
    "stage": "GA",
    "title": "Update Findings Refinement"
  },
  {
    "name": "chronicle.forwarders.create",
    "stage": "BETA",
    "title": "Create Forwarder"
  },
  {
    "name": "chronicle.forwarders.delete",
    "stage": "BETA",
    "title": "Delete Forwarder"
  },
  {
    "name": "chronicle.forwarders.generate",
    "stage": "BETA",
    "title": "Generate Forwarder Files"
  },
  {
    "name": "chronicle.forwarders.get",
    "stage": "BETA",
    "title": "Get Forwarder"
  },
  {
    "name": "chronicle.forwarders.list",
    "stage": "BETA",
    "title": "List Forwarders"
  },
  {
    "name": "chronicle.forwarders.update",
    "stage": "BETA",
    "title": "Update Forwarder"
  },
  {
    "name": "chronicle.globalDataAccessScopes.permit",
    "stage": "BETA",
    "title": "Permit global scope (all data) to be accessed"
  },
  {
    "name": "chronicle.ingestionLogLabels.get",
    "stage": "BETA",
    "title": "Get an ingestion log label"
  },
  {
    "name": "chronicle.ingestionLogLabels.list",
    "stage": "BETA",
    "title": "List ingestion log labels"
  },
  {
    "name": "chronicle.ingestionLogNamespaces.get",
    "stage": "BETA",
    "title": "Get an ingestion log namespaces"
  },
  {
    "name": "chronicle.ingestionLogNamespaces.list",
    "stage": "BETA",
    "title": "List ingestion log namespaces"
  },
  {
    "name": "chronicle.instances.delete",
    "stage": "BETA",
    "title": "Delete Instance"
  },
  {
    "name": "chronicle.instances.generateCollectionAgentAuth",
    "stage": "BETA",
    "title": "Generates auth json for collection agnet."
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "chronicle.instances.generateSoarAuthJwt",
    "stage": "BETA",
    "title": "Generates auth token for exchange based uno auth."
  },
  {
    "name": "chronicle.instances.generateWorkspaceConnectionToken",
    "stage": "BETA",
    "title": "Generates a token to connect a workspace customer to a chronicle instance"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.instances.get",
    "stage": "GA",
    "title": "Get Instance"
  },
  {
    "name": "chronicle.instances.graduatePocInstance",
    "stage": "BETA",
    "title": "Graduate POC Instance Permission"
  },
  {
    "name": "chronicle.instances.logTypeClassifier",
    "stage": "BETA",
    "title": "LogType Classifier Permission"
  },
  {
    "name": "chronicle.instances.permitFederationAccess",
    "stage": "BETA",
    "title": "Permit Federation Access Permission"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.instances.report",
    "stage": "GA",
    "title": "Report Instance"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "chronicle.instances.soarAdmin",
    "stage": "BETA",
    "title": "SOAR Admin Permission"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "chronicle.instances.soarThreatManager",
    "stage": "BETA",
    "title": "SOAR Threat Manager Permission"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "chronicle.instances.soarVulnerabilityManager",
    "stage": "BETA",
    "title": "SOAR Vulnerability Manager Permission"
  },
  {
    "name": "chronicle.instances.undelete",
    "stage": "BETA",
    "title": "Undelete Instance"
  },
  {
    "name": "chronicle.instances.update",
    "stage": "BETA",
    "title": "Update Instance"
  },
  {
    "name": "chronicle.instances.verifyNonce",
    "stage": "BETA",
    "title": "Verify Nonce Permission"
  },
  {
    "name": "chronicle.iocAssociations.batchGet",
    "stage": "BETA",
    "title": "Batch get a list of ioc associations"
  },
  {
    "name": "chronicle.iocAssociations.fetchRelatedIocAssociations",
    "stage": "BETA",
    "title": "List ioc associations for an ioc association"
  },
  {
    "name": "chronicle.iocAssociations.fetchRelatedThreatCollections",
    "stage": "BETA",
    "title": "List threat collections for an ioc association"
  },
  {
    "name": "chronicle.iocAssociations.get",
    "stage": "BETA",
    "title": "Get an Ioc Association"
  },
  {
    "name": "chronicle.iocMatches.get",
    "stage": "BETA",
    "title": "Get Ioc match"
  },
  {
    "name": "chronicle.iocMatches.list",
    "stage": "BETA",
    "title": "List all Ioc Matches"
  },
  {
    "name": "chronicle.iocState.get",
    "stage": "BETA",
    "title": "Get the status of an Ioc"
  },
  {
    "name": "chronicle.iocState.update",
    "stage": "BETA",
    "title": "Update the status of an Ioc"
  },
  {
    "name": "chronicle.iocs.batchGet",
    "stage": "BETA",
    "title": "Batch Get Iocs"
  },
  {
    "name": "chronicle.iocs.findFirstAndLastSeen",
    "stage": "BETA",
    "title": "Find first and last seen of Ioc"
  },
  {
    "name": "chronicle.iocs.get",
    "stage": "BETA",
    "title": "Get Ioc"
  },
  {
    "name": "chronicle.iocs.searchCuratedDetectionsForIoc",
    "stage": "BETA",
    "title": "Search curated detections of Ioc"
  },
  {
    "name": "chronicle.legacies.legacyBatchGetCases",
    "stage": "BETA",
    "title": "Get Batch of Cases"
  },
  {
    "name": "chronicle.legacies.legacyBatchGetCollections",
    "stage": "BETA",
    "title": "Batch Get Legacy Collections"
  },
  {
    "name": "chronicle.legacies.legacyFetchAlertsView",
    "stage": "BETA",
    "title": "Fetch legacy Alerts View"
  },
  {
    "name": "chronicle.legacies.legacyFetchUdmSearchCsv",
    "stage": "BETA",
    "title": "Legacy Fetch Udm Search Csv"
  },
  {
    "name": "chronicle.legacies.legacyFetchUdmSearchView",
    "stage": "BETA",
    "title": "Legacy Fetch Udm Search View"
  },
  {
    "name": "chronicle.legacies.legacyFindAssetEvents",
    "stage": "BETA",
    "title": "Find Legacy Asset Events"
  },
  {
    "name": "chronicle.legacies.legacyFindRawLogs",
    "stage": "BETA",
    "title": "Find Legacy Raw Logs"
  },
  {
    "name": "chronicle.legacies.legacyFindUdmEvents",
    "stage": "BETA",
    "title": "Search Find Udm Events"
  },
  {
    "name": "chronicle.legacies.legacyGetAlert",
    "stage": "BETA",
    "title": "Get Legacy Alert"
  },
  {
    "name": "chronicle.legacies.legacyGetCuratedRulesTrends",
    "stage": "BETA",
    "title": "List Legacy Rule Trends for Curated Rules"
  },
  {
    "name": "chronicle.legacies.legacyGetDetection",
    "stage": "BETA",
    "title": "Legacy Get Detection"
  },
  {
    "name": "chronicle.legacies.legacyGetEventForDetection",
    "stage": "BETA",
    "title": "Get event for a curated detection"
  },
  {
    "name": "chronicle.legacies.legacyGetRuleCounts",
    "stage": "BETA",
    "title": "Get Legacy Rule Count"
  },
  {
    "name": "chronicle.legacies.legacyGetRulesTrends",
    "stage": "BETA",
    "title": "List Legacy Rule Trends for User-defined Rules"
  },
  {
    "name": "chronicle.legacies.legacyRunTestRule",
    "stage": "BETA",
    "title": "Legacy Run Test Rule"
  },
  {
    "name": "chronicle.legacies.legacySearchArtifactEvents",
    "stage": "BETA",
    "title": "Search Legacy Artifact Events"
  },
  {
    "name": "chronicle.legacies.legacySearchArtifactIoCDetails",
    "stage": "BETA",
    "title": "Legacy Fetch Udm Search View"
  },
  {
    "name": "chronicle.legacies.legacySearchAssetEvents",
    "stage": "BETA",
    "title": "Search Legacy Asset Events"
  },
  {
    "name": "chronicle.legacies.legacySearchCuratedDetections",
    "stage": "BETA",
    "title": "Legacy Search Curated Detections"
  },
  {
    "name": "chronicle.legacies.legacySearchCustomerStats",
    "stage": "BETA",
    "title": "Legacy Search Customer Stats"
  },
  {
    "name": "chronicle.legacies.legacySearchDetections",
    "stage": "BETA",
    "title": "Legacy Search Detections"
  },
  {
    "name": "chronicle.legacies.legacySearchDomainsRecentlyRegistered",
    "stage": "BETA",
    "title": "Search Legacy Domains Recently Registered"
  },
  {
    "name": "chronicle.legacies.legacySearchDomainsTimingStats",
    "stage": "BETA",
    "title": "Search Legacy Domains Timing Stats"
  },
  {
    "name": "chronicle.legacies.legacySearchEnterpriseWideAlerts",
    "stage": "BETA",
    "title": "Get Legacy Enterprise Wide Alerts"
  },
  {
    "name": "chronicle.legacies.legacySearchEnterpriseWideIoCs",
    "stage": "BETA",
    "title": "Search Legacy Enterprise Wide IoCs"
  },
  {
    "name": "chronicle.legacies.legacySearchFindings",
    "stage": "BETA",
    "title": "Search Legacy Findings"
  },
  {
    "name": "chronicle.legacies.legacySearchIngestionStats",
    "stage": "BETA",
    "title": "Legacy Search Ingestion Stats"
  },
  {
    "name": "chronicle.legacies.legacySearchIoCInsights",
    "stage": "BETA",
    "title": "Legacy Run Test Rule"
  },
  {
    "name": "chronicle.legacies.legacySearchRawLogs",
    "stage": "BETA",
    "title": "Search Legacy Raw Logs"
  },
  {
    "name": "chronicle.legacies.legacySearchRuleDetectionCountBuckets",
    "stage": "BETA",
    "title": "listing detection count buckets for a Rules Engine rule"
  },
  {
    "name": "chronicle.legacies.legacySearchRuleDetectionEvents",
    "stage": "BETA",
    "title": "Search Legacy Rule Detection Events"
  },
  {
    "name": "chronicle.legacies.legacySearchRuleResults",
    "stage": "BETA",
    "title": "listing aggregated results for a Rules Engine rule"
  },
  {
    "name": "chronicle.legacies.legacySearchRulesAlerts",
    "stage": "BETA",
    "title": "list of Rules Engine generated alerts for a customer"
  },
  {
    "name": "chronicle.legacies.legacySearchUserEvents",
    "stage": "BETA",
    "title": "Search Legacy User Events"
  },
  {
    "name": "chronicle.legacies.legacyStreamDetectionAlerts",
    "stage": "BETA",
    "title": "Legacy Stream Detection Alerts"
  },
  {
    "name": "chronicle.legacies.legacyTestRuleStreaming",
    "stage": "BETA",
    "title": "Legacy Test Rule Streaming"
  },
  {
    "name": "chronicle.legacies.legacyUpdateAlert",
    "stage": "BETA",
    "title": "Update Legacy Alert with New Feedback"
  },
  {
    "name": "chronicle.logTypeSchemas.list",
    "stage": "BETA",
    "title": "List log type schemas"
  },
  {
    "name": "chronicle.logTypeSettings.get",
    "stage": "BETA",
    "title": "Get LogTypeSetting"
  },
  {
    "name": "chronicle.logTypeSettings.list",
    "stage": "BETA",
    "title": "List LogTypeSettings"
  },
  {
    "name": "chronicle.logTypeSettings.update",
    "stage": "BETA",
    "title": "Update LogTypeSetting"
  },
  {
    "name": "chronicle.logTypes.create",
    "stage": "BETA",
    "title": "Create LogType"
  },
  {
    "name": "chronicle.logTypes.get",
    "stage": "BETA",
    "title": "Get LogType"
  },
  {
    "name": "chronicle.logTypes.list",
    "stage": "BETA",
    "title": "List LogTypes"
  },
  {
    "name": "chronicle.logTypes.update",
    "stage": "BETA",
    "title": "Update LogType"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.logs.export",
    "stage": "GA",
    "title": "List Logs"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.logs.get",
    "stage": "GA",
    "title": "Get Log"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.logs.import",
    "stage": "GA",
    "title": "Import Log telemetry"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.logs.list",
    "stage": "GA",
    "title": "List Logs"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.messages.create",
    "stage": "GA",
    "title": "Create New Message."
  },
  {
    "apiDisabled": true,
    "name": "chronicle.messages.delete",
    "stage": "GA",
    "title": "Delete an existing Message."
  },
  {
    "apiDisabled": true,
    "name": "chronicle.messages.get",
    "stage": "GA",
    "title": "Get Message."
  },
  {
    "apiDisabled": true,
    "name": "chronicle.messages.list",
    "stage": "GA",
    "title": "List Messages."
  },
  {
    "apiDisabled": true,
    "name": "chronicle.messages.update",
    "stage": "GA",
    "title": "Update an existing Message."
  },
  {
    "name": "chronicle.multitenantDirectories.get",
    "stage": "BETA",
    "title": "Get Multitenant Directory"
  },
  {
    "name": "chronicle.nativeDashboards.create",
    "stage": "BETA",
    "title": "Create Dashboard"
  },
  {
    "name": "chronicle.nativeDashboards.delete",
    "stage": "BETA",
    "title": "Delete Dashboard"
  },
  {
    "name": "chronicle.nativeDashboards.duplicate",
    "stage": "BETA",
    "title": "Duplicate Dashboard"
  },
  {
    "name": "chronicle.nativeDashboards.get",
    "stage": "BETA",
    "title": "Get Dashboard"
  },
  {
    "name": "chronicle.nativeDashboards.list",
    "stage": "BETA",
    "title": "List Dashboards"
  },
  {
    "name": "chronicle.nativeDashboards.update",
    "stage": "BETA",
    "title": "Update Dashboards"
  },
  {
    "name": "chronicle.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Long Running Operation"
  },
  {
    "name": "chronicle.operations.delete",
    "stage": "BETA",
    "title": "Delete Long Running Operation"
  },
  {
    "name": "chronicle.operations.get",
    "stage": "BETA",
    "title": "Get Long Running Operation"
  },
  {
    "name": "chronicle.operations.list",
    "stage": "BETA",
    "title": "List Long Running Operations"
  },
  {
    "name": "chronicle.operations.streamSearch",
    "stage": "BETA",
    "title": "Stream Long Running Search Operation"
  },
  {
    "name": "chronicle.operations.wait",
    "stage": "BETA",
    "title": "Wait On Long Running Operation"
  },
  {
    "name": "chronicle.parserExtensions.activate",
    "stage": "BETA",
    "title": "Activates an extension"
  },
  {
    "name": "chronicle.parserExtensions.create",
    "stage": "BETA",
    "title": "Create ParserExtension"
  },
  {
    "name": "chronicle.parserExtensions.delete",
    "stage": "BETA",
    "title": "Delete ParserExtension"
  },
  {
    "name": "chronicle.parserExtensions.generateKeyValueMappings",
    "stage": "BETA",
    "title": "Generate key value mappings"
  },
  {
    "name": "chronicle.parserExtensions.get",
    "stage": "BETA",
    "title": "Get ParserExtensions"
  },
  {
    "name": "chronicle.parserExtensions.legacySubmitParserExtension",
    "stage": "BETA",
    "title": "Submit an extension"
  },
  {
    "name": "chronicle.parserExtensions.list",
    "stage": "BETA",
    "title": "List ParserExtensions"
  },
  {
    "name": "chronicle.parserExtensions.removeSyslog",
    "stage": "BETA",
    "title": "Remove Syslog"
  },
  {
    "name": "chronicle.parsers.activate",
    "stage": "BETA",
    "title": "Activate a parser"
  },
  {
    "name": "chronicle.parsers.activateReleaseCandidate",
    "stage": "BETA",
    "title": "Activate release candidate parser"
  },
  {
    "name": "chronicle.parsers.copyPrebuiltParser",
    "stage": "BETA",
    "title": "Copy a prebuilt parser"
  },
  {
    "name": "chronicle.parsers.create",
    "stage": "BETA",
    "title": "Creates Parser"
  },
  {
    "name": "chronicle.parsers.deactivate",
    "stage": "BETA",
    "title": "Deactivate a parser"
  },
  {
    "name": "chronicle.parsers.delete",
    "stage": "BETA",
    "title": "Delete a parser"
  },
  {
    "name": "chronicle.parsers.generateEventTypesSuggestions",
    "stage": "BETA",
    "title": "GenerateEventTypesSuggestions fetches suggestions for event types"
  },
  {
    "name": "chronicle.parsers.get",
    "stage": "BETA",
    "title": "Get a Parser"
  },
  {
    "name": "chronicle.parsers.list",
    "stage": "BETA",
    "title": "List Parsers"
  },
  {
    "name": "chronicle.parsers.runParser",
    "stage": "BETA",
    "title": "Run parser against logs"
  },
  {
    "name": "chronicle.parsingErrors.list",
    "stage": "BETA",
    "title": "List parsing errors of a valiation report"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.preferenceSets.get",
    "stage": "GA",
    "title": "Get a Preference Set"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.preferenceSets.update",
    "stage": "GA",
    "title": "Update a Preference Set"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.referenceLists.create",
    "stage": "GA",
    "title": "Create Reference List"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.referenceLists.get",
    "stage": "GA",
    "title": "Get Reference List"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.referenceLists.list",
    "stage": "GA",
    "title": "List Reference Lists"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.referenceLists.update",
    "stage": "GA",
    "title": "Update Reference List"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.referenceLists.verifyReferenceList",
    "stage": "GA",
    "title": "Verify Reference List"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.retrohunts.create",
    "stage": "GA",
    "title": "Create Retrohunt"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.retrohunts.get",
    "stage": "GA",
    "title": "Get Retrohunt"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.retrohunts.list",
    "stage": "GA",
    "title": "List Retrohunts"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.riskConfigs.get",
    "stage": "GA",
    "title": "Get the Risk Configurations influencing Entity Risk Scoring"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.riskConfigs.update",
    "stage": "GA",
    "title": "Update the Risk Configurations influencing Entity Risk Scoring"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.ruleDeployments.get",
    "stage": "GA",
    "title": "Get Rule Deployment"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.ruleDeployments.list",
    "stage": "GA",
    "title": "List Rule Deployments"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.ruleDeployments.update",
    "stage": "GA",
    "title": "Update Rule Deployment"
  },
  {
    "name": "chronicle.ruleExecutionErrors.list",
    "stage": "BETA",
    "title": "List Rule Execution Errors"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.rules.create",
    "stage": "GA",
    "title": "Create Rule"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.rules.delete",
    "stage": "GA",
    "title": "Delete Rule"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.rules.get",
    "stage": "GA",
    "title": "Get Rule"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.rules.list",
    "stage": "GA",
    "title": "List Rules"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.rules.listRevisions",
    "stage": "GA",
    "title": "List Rule Revisions"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.rules.update",
    "stage": "GA",
    "title": "Update Rule"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.rules.verifyRuleText",
    "stage": "GA",
    "title": "Verify Rule Text"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.searchQueries.create",
    "stage": "GA",
    "title": "Create a Saved Search Query"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.searchQueries.delete",
    "stage": "GA",
    "title": "Delete a Saved Search Query"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.searchQueries.get",
    "stage": "GA",
    "title": "Get a Saved Search Query"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.searchQueries.list",
    "stage": "GA",
    "title": "List Saved Search Queries"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.searchQueries.update",
    "stage": "GA",
    "title": "Update a Saved Search Query"
  },
  {
    "name": "chronicle.threatCollectionFilterSet.get",
    "stage": "BETA",
    "title": "Get the set of threat collection filter options"
  },
  {
    "name": "chronicle.threatCollections.fetchIocMatchMetadata",
    "stage": "BETA",
    "title": "Fetch a list of ioc match metadata for a list of threat collections"
  },
  {
    "name": "chronicle.threatCollections.fetchRuleMetadata",
    "stage": "BETA",
    "title": "Fetch a list of rule metadata for a list of threat collections"
  },
  {
    "name": "chronicle.threatCollections.get",
    "stage": "BETA",
    "title": "Get Threat Collection"
  },
  {
    "name": "chronicle.threatCollections.list",
    "stage": "BETA",
    "title": "List Threat Collections"
  },
  {
    "name": "chronicle.validationErrors.list",
    "stage": "BETA",
    "title": "List Validation Errors of Extension Validation Report"
  },
  {
    "name": "chronicle.validationReports.get",
    "stage": "BETA",
    "title": "Get validation report"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.watchlists.create",
    "stage": "GA",
    "title": "Create Watchlist"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.watchlists.delete",
    "stage": "GA",
    "title": "Delete Watchlist"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.watchlists.get",
    "stage": "GA",
    "title": "Get Watchlist"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.watchlists.list",
    "stage": "GA",
    "title": "List Watchlists"
  },
  {
    "apiDisabled": true,
    "name": "chronicle.watchlists.update",
    "stage": "GA",
    "title": "Update Watchlist"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.brands.create",
    "stage": "BETA",
    "title": "Create brand"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.brands.delete",
    "stage": "BETA",
    "title": "Delete brand"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.brands.get",
    "stage": "BETA",
    "title": "Get brand"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.brands.list",
    "stage": "BETA",
    "title": "List brands associated with a project"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.brands.update",
    "stage": "BETA",
    "title": "Update brand"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.create",
    "stage": "BETA",
    "title": "Create OAuth client"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.createSecret",
    "stage": "BETA",
    "title": "Create new client secret"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.delete",
    "stage": "BETA",
    "title": "Delete OAuth client"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.get",
    "stage": "BETA",
    "title": "Get OAuth client"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.getWithSecret",
    "stage": "BETA",
    "title": "Get OAuth client with client secret"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.list",
    "stage": "BETA",
    "title": "List OAuth clients in a brand"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.listWithSecrets",
    "stage": "BETA",
    "title": "List OAuth clients in a brand with client secrets"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.undelete",
    "stage": "BETA",
    "title": "Undelete OAuth client"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "clientauthconfig.clients.update",
    "stage": "BETA",
    "title": "Update OAuth client"
  },
  {
    "apiDisabled": true,
    "name": "cloud.locations.get",
    "stage": "BETA",
    "title": "Get location properties"
  },
  {
    "apiDisabled": true,
    "name": "cloud.locations.list",
    "stage": "BETA",
    "title": "List locations"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.codeRepositoryIndexes.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.codeRepositoryIndexes.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.codeRepositoryIndexes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.codeRepositoryIndexes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.codeRepositoryIndexes.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.codeToolsSettings.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.codeToolsSettings.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.codeToolsSettings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.codeToolsSettings.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.codeToolsSettings.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Chat",
    "name": "cloudaicompanion.companions.generateChat",
    "stage": "GA",
    "title": "Chat"
  },
  {
    "apiDisabled": true,
    "description": "Generate Code",
    "name": "cloudaicompanion.companions.generateCode",
    "stage": "GA",
    "title": "Generate Code"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.dataSharingWithGoogleSettings.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.dataSharingWithGoogleSettings.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.dataSharingWithGoogleSettings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.dataSharingWithGoogleSettings.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.dataSharingWithGoogleSettings.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Entitlement",
    "name": "cloudaicompanion.entitlements.get",
    "stage": "GA",
    "title": "Entitlement"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.geminiGcpEnablementSettings.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.geminiGcpEnablementSettings.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.geminiGcpEnablementSettings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.geminiGcpEnablementSettings.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.geminiGcpEnablementSettings.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Code Completion",
    "name": "cloudaicompanion.instances.completeCode",
    "stage": "GA",
    "title": "Code Completion"
  },
  {
    "apiDisabled": true,
    "description": "Task Completion",
    "name": "cloudaicompanion.instances.completeTask",
    "stage": "GA",
    "title": "Task Completion"
  },
  {
    "apiDisabled": true,
    "description": "Access to the Export (Metrics) API in order to record metric telemetry related to the use of the Gemini for Google Cloud Instance.",
    "name": "cloudaicompanion.instances.exportMetrics",
    "stage": "GA",
    "title": "Record Metric Telemetry"
  },
  {
    "apiDisabled": true,
    "description": "Code Generation",
    "name": "cloudaicompanion.instances.generateCode",
    "stage": "GA",
    "title": "Code Generation"
  },
  {
    "apiDisabled": true,
    "description": "Text Generation",
    "name": "cloudaicompanion.instances.generateText",
    "stage": "GA",
    "title": "Text Generation"
  },
  {
    "apiDisabled": true,
    "description": "Query Effective Setting",
    "name": "cloudaicompanion.instances.queryEffectiveSetting",
    "stage": "GA",
    "title": "Query Effective Setting"
  },
  {
    "apiDisabled": true,
    "description": "Query Effective Setting Bindings",
    "name": "cloudaicompanion.instances.queryEffectiveSettingBindings",
    "stage": "GA",
    "title": "Query Effective Setting Bindings"
  },
  {
    "apiDisabled": true,
    "description": "License",
    "name": "cloudaicompanion.licenses.selfAssign",
    "stage": "GA",
    "title": "License"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.loggingSettings.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.loggingSettings.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.loggingSettings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.loggingSettings.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.loggingSettings.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.operations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.releaseChannelSettings.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.releaseChannelSettings.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.releaseChannelSettings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.releaseChannelSettings.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.releaseChannelSettings.update",
    "stage": "GA"
  },
  {
    "name": "cloudaicompanion.repositoryGroups.create",
    "stage": "BETA"
  },
  {
    "name": "cloudaicompanion.repositoryGroups.delete",
    "stage": "BETA"
  },
  {
    "name": "cloudaicompanion.repositoryGroups.get",
    "stage": "BETA"
  },
  {
    "name": "cloudaicompanion.repositoryGroups.getIamPolicy",
    "stage": "BETA"
  },
  {
    "name": "cloudaicompanion.repositoryGroups.list",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudaicompanion.repositoryGroups.setIamPolicy",
    "stage": "BETA"
  },
  {
    "name": "cloudaicompanion.repositoryGroups.update",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudaicompanion.repositoryGroups.use",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.codeToolsSettingsCreate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.codeToolsSettingsDelete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.codeToolsSettingsGet",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.codeToolsSettingsList",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.codeToolsSettingsUpdate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.codeToolsSettingsUse",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.dataSharingWithGoogleSettingsCreate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.dataSharingWithGoogleSettingsDelete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.dataSharingWithGoogleSettingsGet",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.dataSharingWithGoogleSettingsList",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.dataSharingWithGoogleSettingsUpdate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.dataSharingWithGoogleSettingsUse",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.geminiGcpEnablementSettingsCreate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.geminiGcpEnablementSettingsDelete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.geminiGcpEnablementSettingsGet",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.geminiGcpEnablementSettingsList",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.geminiGcpEnablementSettingsUpdate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.geminiGcpEnablementSettingsUse",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.loggingSettingsCreate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.loggingSettingsDelete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.loggingSettingsGet",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.loggingSettingsList",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.loggingSettingsUpdate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.loggingSettingsUse",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.releaseChannelSettingsCreate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.releaseChannelSettingsDelete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.releaseChannelSettingsGet",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.releaseChannelSettingsList",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.releaseChannelSettingsUpdate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudaicompanion.settingBindings.releaseChannelSettingsUse",
    "stage": "GA"
  },
  {
    "name": "cloudaicompanion.topics.create",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "cloudaicompanion.topics.delete",
    "onlyInPredefinedRoles": true,
    "stage": "BETA"
  },
  {
    "name": "cloudaicompanion.topics.get",
    "stage": "BETA"
  },
  {
    "name": "cloudaicompanion.topics.getIamPolicy",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudaicompanion.topics.setIamPolicy",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "cloudaicompanion.topics.update",
    "onlyInPredefinedRoles": true,
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.analyzeIamPolicy",
    "stage": "GA",
    "title": "Analyze IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.analyzeMove",
    "stage": "GA",
    "title": "Analyze Asset Move"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.analyzeOrgPolicy",
    "stage": "BETA",
    "title": "Analyze Org Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAccessLevel",
    "stage": "BETA",
    "title": "List Access Level data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAccessPolicy",
    "stage": "BETA",
    "title": "List Access policy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAiplatformBatchPredictionJobs",
    "stage": "BETA",
    "title": "List AI Platform BatchPredictionJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAiplatformCustomJobs",
    "stage": "BETA",
    "title": "Export AI Platform CustomJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAiplatformDataLabelingJobs",
    "stage": "BETA",
    "title": "List AI Platform DataLabelingJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAiplatformDatasets",
    "stage": "BETA",
    "title": "List AI Platform Datasets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAiplatformEndpoints",
    "stage": "BETA",
    "title": "List AI Platform Endpoints data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAiplatformHyperparameterTuningJobs",
    "stage": "BETA",
    "title": "List AI Platform HyperparameterTuningJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAiplatformMetadataStores",
    "stage": "BETA",
    "title": "List AI Platform MetadataStores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAiplatformModelDeploymentMonitoringJobs",
    "stage": "BETA",
    "title": "List AI Platform ModelDeploymentMonitoringJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAiplatformModels",
    "stage": "BETA",
    "title": "List AI Platform Models data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAiplatformPipelineJobs",
    "stage": "BETA",
    "title": "List AI Platform PipelineJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAiplatformSpecialistPools",
    "stage": "BETA",
    "title": "List AI Platform SpecialistPools data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAiplatformTrainingPipelines",
    "stage": "BETA",
    "title": "List AI Platform TrainingPipelines data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAllAccessPolicy",
    "stage": "BETA",
    "title": "List All Access policy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAnthosConnectedCluster",
    "stage": "BETA",
    "title": "Export Anthos on prem Cluster data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAnthosedgeCluster",
    "stage": "BETA",
    "title": "Export Anthos Edge Cluster data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportApigatewayApi",
    "stage": "BETA",
    "title": "List Apigateway Service Api data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportApigatewayApiConfig",
    "stage": "BETA",
    "title": "List Apigateway Service ApiConfig data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportApigatewayGateway",
    "stage": "BETA",
    "title": "List Apigateway Service Gateway data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportApikeysKeys",
    "stage": "BETA",
    "title": "List ApiKeys Key data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAppengineApplications",
    "stage": "BETA",
    "title": "List Appengine Applications data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAppengineServices",
    "stage": "BETA",
    "title": "List Appengine Services data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAppengineVersions",
    "stage": "BETA",
    "title": "List Appengine Versions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportArtifactregistryDockerImages",
    "stage": "BETA",
    "title": "List Artifactregistry DockerImages data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportArtifactregistryRepositories",
    "stage": "BETA",
    "title": "List Artifactregistry Repositories data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportAssuredWorkloadsWorkloads",
    "stage": "BETA",
    "title": "List Assured Workloads data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBeyondCorpApiGateways",
    "stage": "BETA",
    "title": "Export BeyondCorp ApiGateway data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBeyondCorpAppConnections",
    "stage": "BETA",
    "title": "Export BeyondCorp AppConnection data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBeyondCorpAppConnectors",
    "stage": "BETA",
    "title": "Export BeyondCorp AppConnector data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBeyondCorpAppGateways",
    "stage": "BETA",
    "title": "Export BeyondCorp AppGateway data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBeyondCorpClientConnectorServices",
    "stage": "BETA",
    "title": "Export BeyondCorp ClientConnectorService data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBeyondCorpClientGateways",
    "stage": "BETA",
    "title": "Export BeyondCorp ClientGateway data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBigqueryDatasets",
    "stage": "BETA",
    "title": "List Bigquery Datasets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBigqueryModels",
    "stage": "BETA",
    "title": "Export Bigquery Models data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBigqueryTables",
    "stage": "BETA",
    "title": "List Bigquery Tables data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBigtableAppProfile",
    "stage": "BETA",
    "title": "List Bigtable data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBigtableBackup",
    "stage": "BETA",
    "title": "List Bigtable data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBigtableCluster",
    "stage": "BETA",
    "title": "List Bigtable data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBigtableInstance",
    "stage": "BETA",
    "title": "List Bigtable data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportBigtableTable",
    "stage": "BETA",
    "title": "List Bigtable data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudAssetFeeds",
    "stage": "BETA",
    "title": "List CloudAsset Feeds data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudDeployDeliveryPipelines",
    "stage": "BETA",
    "title": "Export CloudDeploy DeliveryPipeline data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudDeployReleases",
    "stage": "BETA",
    "title": "Export CloudDeploy Release data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudDeployRollouts",
    "stage": "BETA",
    "title": "Export CloudDeploy Rollout data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudDeployTargets",
    "stage": "BETA",
    "title": "Export CloudDeploy Target data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudDocumentAIEvaluation",
    "stage": "BETA",
    "title": "List Cloud Document AI Evaluation data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudDocumentAIHumanReviewConfig",
    "stage": "BETA",
    "title": "List Cloud Document AI HumanReviewConfig data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudDocumentAILabelerPool",
    "stage": "BETA",
    "title": "List Cloud Document AI LabelerPool data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudDocumentAIProcessor",
    "stage": "BETA",
    "title": "List Cloud Document AI Processor data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudDocumentAIProcessorVersion",
    "stage": "BETA",
    "title": "List Cloud Document AI ProcessorVersion data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudbillingBillingAccounts",
    "stage": "BETA",
    "title": "List Cloudbilling BillingAccounts data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudbillingProjectBillingInfos",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudfunctionsFunctions",
    "stage": "BETA",
    "title": "Export Cloudfunctions Functions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudfunctionsGen2Functions",
    "stage": "BETA",
    "title": "Export CloudfunctionsGen2 Functions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudkmsCryptoKeyVersions",
    "stage": "BETA",
    "title": "List Cloudkms CryptoKeyVersions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudkmsCryptoKeys",
    "stage": "BETA",
    "title": "List Cloudkms CryptoKeys data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudkmsEkmConnections",
    "stage": "BETA",
    "title": "Export CloudKMS Ekm Connections"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudkmsImportJobs",
    "stage": "BETA",
    "title": "List Cloudkms ImportJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudkmsKeyRings",
    "stage": "BETA",
    "title": "List Cloudkms KeyRings data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudmemcacheInstances",
    "stage": "BETA",
    "title": "List Cloud Memcache Instances data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudresourcemanagerFolders",
    "stage": "BETA",
    "title": "List Cloudresourcemanager Folders data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudresourcemanagerOrganizations",
    "stage": "BETA",
    "title": "List Cloudresourcemanager Organizations data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudresourcemanagerProjects",
    "stage": "BETA",
    "title": "List Cloudresourcemanager Projects data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudresourcemanagerTagBindings",
    "stage": "BETA",
    "title": "List Cloudresourcemanager TagBindings data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudresourcemanagerTagKeys",
    "stage": "BETA",
    "title": "List Cloudresourcemanager TagKeys data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportCloudresourcemanagerTagValues",
    "stage": "BETA",
    "title": "List Cloudresourcemanager TagValues data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComposerEnvironments",
    "stage": "BETA",
    "title": "List Composer Environments data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeAddress",
    "stage": "BETA",
    "title": "List Compute Address data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeAutoscalers",
    "stage": "BETA",
    "title": "List Compute Autoscalers data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeBackendBuckets",
    "stage": "BETA",
    "title": "List Compute BackendBuckets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeBackendServices",
    "stage": "BETA",
    "title": "List Compute BackendServices data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeCommitments",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeDisks",
    "stage": "BETA",
    "title": "List Compute Disks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeExternalVpnGateways",
    "stage": "BETA",
    "title": "List Compute ExternalVpnGateways data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeFirewallPolicies",
    "stage": "BETA",
    "title": "List Compute FirewallPolicies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeFirewalls",
    "stage": "BETA",
    "title": "List Compute Firewalls data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeForwardingRules",
    "stage": "BETA",
    "title": "List Compute ForwardingRules data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeGlobalAddress",
    "stage": "BETA",
    "title": "List Compute GlobalAddress data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeGlobalForwardingRules",
    "stage": "BETA",
    "title": "List Compute GlobalForwardingRules data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeHealthChecks",
    "stage": "BETA",
    "title": "List Compute HealthChecks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeHttpHealthChecks",
    "stage": "BETA",
    "title": "List Compute HttpHealthChecks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeHttpsHealthChecks",
    "stage": "BETA",
    "title": "List Compute HttpsHealthChecks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeImages",
    "stage": "BETA",
    "title": "List Compute Images data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeInstanceGroupManagers",
    "stage": "BETA",
    "title": "List Compute InstanceGroupManagers data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeInstanceGroups",
    "stage": "BETA",
    "title": "List Compute InstanceGroups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeInstanceTemplates",
    "stage": "BETA",
    "title": "List Compute InstanceTemplates data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeInstances",
    "stage": "BETA",
    "title": "List Compute Instances data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeInterconnect",
    "stage": "BETA",
    "title": "List Compute Interconnect data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeInterconnectAttachment",
    "stage": "BETA",
    "title": "List Compute InterconnectAttachment data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeLicenses",
    "stage": "BETA",
    "title": "List Compute Licenses data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeNetworkEndpointGroups",
    "stage": "BETA",
    "title": "List Compute NetworkEndpointGroups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeNetworks",
    "stage": "BETA",
    "title": "List Compute Networks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeNodeGroups",
    "stage": "BETA",
    "title": "List Compute NodeGroups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeNodeTemplates",
    "stage": "BETA",
    "title": "List Compute NodeTemplates data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputePacketMirrorings",
    "stage": "BETA",
    "title": "List Compute PacketMirrorings data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeProjects",
    "stage": "BETA",
    "title": "List Compute Projects data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeRegionAutoscaler",
    "stage": "BETA",
    "title": "List Compute RegionAutoscaler data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeRegionBackendServices",
    "stage": "BETA",
    "title": "List Compute RegionBackendServices data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeRegionDisk",
    "stage": "BETA",
    "title": "List Compute RegionDisk data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeRegionInstanceGroup",
    "stage": "BETA",
    "title": "List Compute RegionInstanceGroup data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeRegionInstanceGroupManager",
    "stage": "BETA",
    "title": "List Compute RegionInstanceGroupManager data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeReservations",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeResourcePolicies",
    "stage": "BETA",
    "title": "List Compute ResourcePolicies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeRouters",
    "stage": "BETA",
    "title": "List Compute Routers data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeRoutes",
    "stage": "BETA",
    "title": "List Compute Routes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeSecurityPolicy",
    "stage": "BETA",
    "title": "List Compute SecurityPolicy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeServiceAttachments",
    "stage": "BETA",
    "title": "Export compute service attachment assets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeSnapshots",
    "stage": "BETA",
    "title": "List Compute Snapshots data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeSslCertificates",
    "stage": "BETA",
    "title": "List Compute SslCertificates data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeSslPolicies",
    "stage": "BETA",
    "title": "List Compute SslPolicies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeSubnetworks",
    "stage": "BETA",
    "title": "List Compute Subnetworks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeTargetHttpProxies",
    "stage": "BETA",
    "title": "List Compute TargetHttpProxies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeTargetHttpsProxies",
    "stage": "BETA",
    "title": "List Compute TargetHttpsProxies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeTargetInstances",
    "stage": "BETA",
    "title": "List Compute TargetInstances data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeTargetPools",
    "stage": "BETA",
    "title": "List Compute TargetPools data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeTargetSslProxies",
    "stage": "BETA",
    "title": "List Compute TargetSslProxies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeTargetTcpProxies",
    "stage": "BETA",
    "title": "List Compute TargetTcpProxies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeTargetVpnGateways",
    "stage": "BETA",
    "title": "List Compute TargetVpnGateways data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeUrlMaps",
    "stage": "BETA",
    "title": "List Compute UrlMaps data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeVpnGateways",
    "stage": "BETA",
    "title": "List Compute VpnGateways data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportComputeVpnTunnels",
    "stage": "BETA",
    "title": "List Compute VpnTunnels data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportConnectorsConnections",
    "stage": "BETA",
    "title": "Export Connectors Connection data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportConnectorsConnectorVersions",
    "stage": "BETA",
    "title": "Export Connectors ConnectorVersion data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportConnectorsConnectors",
    "stage": "BETA",
    "title": "Export Connectors Connector data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportConnectorsProviders",
    "stage": "BETA",
    "title": "Export Connectors Provider data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportConnectorsRuntimeConfigs",
    "stage": "BETA",
    "title": "Export Connectors RuntimeConfig data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerAppsDeployment",
    "stage": "BETA",
    "title": "List Kubernetes Apps Deployment data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerAppsReplicaSets",
    "stage": "BETA",
    "title": "Export container replica sets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerBatchJobs",
    "stage": "BETA",
    "title": "Export container jobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerClusterrole",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerClusterrolebinding",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerClusters",
    "stage": "BETA",
    "title": "List Container Clusters data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerExtensionsIngresses",
    "stage": "BETA",
    "title": "List Kubernetes Extensions Ingress data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerJobs",
    "stage": "BETA",
    "title": "Export container jobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerNamespace",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerNetworkingIngresses",
    "stage": "BETA",
    "title": "List Kubernetes Networking Ingress data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerNetworkingNetworkPolicies",
    "stage": "BETA",
    "title": "List Kubernetes Networking NetworkPolicy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerNode",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerNodepool",
    "stage": "BETA",
    "title": "List Container Nodepool data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerPod",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerReplicaSets",
    "stage": "BETA",
    "title": "Export container replica sets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerRole",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerRolebinding",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerServices",
    "stage": "BETA",
    "title": "List Kubernetes Service data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportContainerregistryImage",
    "stage": "BETA",
    "title": "List Containerregistry Image data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDataMigrationConnectionProfiles",
    "stage": "BETA",
    "title": "Export DataMigration ConnectionProfile data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDataMigrationMigrationJobs",
    "stage": "BETA",
    "title": "Export DataMigration MigrationJob data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDataflowJobs",
    "stage": "BETA",
    "title": "List Dataflow Jobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDatafusionInstance",
    "stage": "BETA",
    "title": "List Datafusion instance data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDataplexAssets",
    "stage": "BETA",
    "title": "Export Dataplex Asset Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDataplexLakes",
    "stage": "BETA",
    "title": "Export Dataplex Lake Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDataplexTasks",
    "stage": "BETA",
    "title": "Export Dataplex Task Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDataplexZones",
    "stage": "BETA",
    "title": "Export Dataplex Zone Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDataprocAutoscalingPolicies",
    "stage": "BETA",
    "title": "Export Dataproc AutoscalingPolicies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDataprocBatches",
    "stage": "BETA",
    "title": "Export Dataproc Batches data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDataprocClusters",
    "stage": "BETA",
    "title": "List Dataproc Clusters data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDataprocJobs",
    "stage": "BETA",
    "title": "List Dataproc Jobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDataprocSessions",
    "stage": "BETA",
    "title": "Export Dataproc Sessions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDataprocWorkflowTemplates",
    "stage": "BETA",
    "title": "Export Dataproc WorkflowTemplates data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDatastreamConnectionProfile",
    "stage": "BETA",
    "title": "Export Datastream ConnectionProfile data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDatastreamPrivateConnection",
    "stage": "BETA",
    "title": "Export Datastream PrivateConnection data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDatastreamStream",
    "stage": "BETA",
    "title": "Export Datastream Stream data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDialogflowAgents",
    "stage": "BETA",
    "title": "Export Dialogflow Agents data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDialogflowConversationProfiles",
    "stage": "BETA",
    "title": "Export Dialogflow ConversationProfiles data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDialogflowKnowledgeBases",
    "stage": "BETA",
    "title": "Export Dialogflow KnowledgeBases data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDialogflowLocationSettings",
    "stage": "BETA",
    "title": "Export Dialogflow LocationSettings data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDlpDeidentifyTemplates",
    "stage": "BETA",
    "title": "Export DLP Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDlpDlpJobs",
    "stage": "BETA",
    "title": "Export DLP Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDlpInspectTemplates",
    "stage": "BETA",
    "title": "Export DLP Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDlpJobTriggers",
    "stage": "BETA",
    "title": "Export DLP Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDlpStoredInfoTypes",
    "stage": "BETA",
    "title": "Export DLP Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDnsManagedZones",
    "stage": "BETA",
    "title": "List Dns ManagedZones data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDnsPolicies",
    "stage": "BETA",
    "title": "List Dns Policies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportDomainsRegistrations",
    "stage": "BETA",
    "title": "Export Domains Registration data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportEventarcTriggers",
    "stage": "BETA",
    "title": "List Eventarc Triggers data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportFileBackups",
    "stage": "BETA",
    "title": "List Filestore Backups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportFileInstances",
    "stage": "BETA",
    "title": "List Filestore Service data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportFirebaseAppInfos",
    "stage": "BETA",
    "title": "List Firebase App Info data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportFirebaseProjects",
    "stage": "BETA",
    "title": "List Firebase Project data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportFirestoreDatabases",
    "stage": "BETA",
    "title": "Export Firestore data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportGKEHubFeatures",
    "stage": "BETA",
    "title": "Export GKEHub Feature data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportGKEHubMemberships",
    "stage": "BETA",
    "title": "Export GKEHub Membership data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportGameservicesGameServerClusters",
    "stage": "BETA",
    "title": "List Gameservices GameServerClusters data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportGameservicesGameServerConfigs",
    "stage": "BETA",
    "title": "List Gameservices GameServerConfigs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportGameservicesGameServerDeployments",
    "stage": "BETA",
    "title": "List Gameservices GameServerDeployments data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportGameservicesRealms",
    "stage": "BETA",
    "title": "List Gameservices Realms data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportGkeBackupBackupPlans",
    "stage": "BETA",
    "title": "Export GkeBackup BackupPlans data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportGkeBackupBackups",
    "stage": "BETA",
    "title": "Export GkeBackup Backups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportGkeBackupRestorePlans",
    "stage": "BETA",
    "title": "Export GKE Backup RestorePlans data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportGkeBackupRestores",
    "stage": "BETA",
    "title": "Export GKE Backup Restores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportGkeBackupVolumeBackups",
    "stage": "BETA",
    "title": "Export GKE Backup VolumeBackups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportGkeBackupVolumeRestores",
    "stage": "BETA",
    "title": "Export GKE Backup VolumeRestores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportHealthcareConsentStores",
    "stage": "BETA",
    "title": "Export Healthcare ConsentStores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportHealthcareDatasets",
    "stage": "BETA",
    "title": "Export Healthcare Datasets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportHealthcareDicomStores",
    "stage": "BETA",
    "title": "Export Healthcare DicomStores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportHealthcareFhirStores",
    "stage": "BETA",
    "title": "Export Healthcare FhirStores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportHealthcareHl7V2Stores",
    "stage": "BETA",
    "title": "Export Healthcare Hl7V2Stores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportIamPolicy",
    "stage": "GA",
    "title": "List IAM policy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportIamRoles",
    "stage": "BETA",
    "title": "List Iam Roles data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportIamServiceAccountKeys",
    "stage": "BETA",
    "title": "List Iam ServiceAccountKeys data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportIamServiceAccounts",
    "stage": "BETA",
    "title": "List Iam ServiceAccounts data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportIapTunnel",
    "stage": "BETA",
    "title": "List Iap Tunnel data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportIapTunnelInstances",
    "stage": "BETA",
    "title": "List Iap TunnelInstances data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportIapTunnelZones",
    "stage": "BETA",
    "title": "List Iap TunnelZones data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportIapWeb",
    "stage": "BETA",
    "title": "List Iap Web data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportIapWebServiceVersion",
    "stage": "BETA",
    "title": "List Iap WebServiceVersion data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportIapWebServices",
    "stage": "BETA",
    "title": "List Iap WebServices data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportIapWebType",
    "stage": "BETA",
    "title": "List Iap WebType data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportIdsEndpoints",
    "stage": "BETA",
    "title": "Export Cloud IDS Endpoint data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportIntegrationsAuthConfigs",
    "stage": "BETA",
    "title": "Export Integrations AuthConfig data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportIntegrationsCertificates",
    "stage": "BETA",
    "title": "Export Integrations Certificate data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportIntegrationsExecutions",
    "stage": "BETA",
    "title": "Export Integrations Execution data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportIntegrationsIntegrationVersions",
    "stage": "BETA",
    "title": "Export Integrations IntegrationVersion data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportIntegrationsIntegrations",
    "stage": "BETA",
    "title": "Export Integrations Integration data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportIntegrationsSfdcChannels",
    "stage": "BETA",
    "title": "Export Integrations SfdcChannel data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportIntegrationsSfdcInstances",
    "stage": "BETA",
    "title": "Export Integrations SfdcInstance data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportIntegrationsSuspensions",
    "stage": "BETA",
    "title": "Export Integrations Suspension data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportLoggingLogMetrics",
    "stage": "BETA",
    "title": "List Logging LogMetrics data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.exportLoggingLogSinks",
    "stage": "BETA",
    "title": "List Logging LogSinks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportManagedidentitiesDomain",
    "stage": "BETA",
    "title": "List Managed identities data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportMetastoreBackups",
    "stage": "BETA",
    "title": "Export Metastore Backups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportMetastoreMetadataImports",
    "stage": "BETA",
    "title": "Export Metastore MetadataImports data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportMetastoreServices",
    "stage": "BETA",
    "title": "Export Metastore Services data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportMonitoringAlertPolicies",
    "stage": "BETA",
    "title": "List Monitoring Service data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportNetworkConnectivityHubs",
    "stage": "BETA",
    "title": "Export NetworkConnectivity data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportNetworkConnectivitySpokes",
    "stage": "BETA",
    "title": "Export NetworkConnectivity data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportNetworkManagementConnectivityTests",
    "stage": "BETA",
    "title": "List NetworkManagement Service data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportNetworkServicesEndpointPolicies",
    "stage": "BETA",
    "title": "Export NetworkServices EndpointPolicies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportNetworkServicesGateways",
    "stage": "BETA",
    "title": "Export NetworkServices Gateways data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportNetworkServicesGrpcRoutes",
    "stage": "BETA",
    "title": "Export NetworkServices GrpcRoutes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportNetworkServicesHttpRoutes",
    "stage": "BETA",
    "title": "Export NetworkServices HttpRoutes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportNetworkServicesMeshes",
    "stage": "BETA",
    "title": "Export NetworkServices Meshes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportNetworkServicesServiceBindings",
    "stage": "BETA",
    "title": "Export NetworkServices ServiceBindings data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportNetworkServicesTcpRoutes",
    "stage": "BETA",
    "title": "Export NetworkServices TcpRoutes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportNetworkServicesTlsRoutes",
    "stage": "BETA",
    "title": "Export NetworkServices TlsRoutes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportOSConfigOSPolicyAssignmentReports",
    "stage": "BETA",
    "title": "List OSConfig OSPolicyAssignmentReport data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportOSConfigOSPolicyAssignments",
    "stage": "BETA",
    "title": "List OSConfig OSPolicyAssignment data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportOSConfigVulnerabilityReports",
    "stage": "BETA",
    "title": "exportOSConfigVulnerabilityReports"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportOSInventories",
    "stage": "GA",
    "title": "List OS Inventory data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportOrgPolicy",
    "stage": "BETA",
    "title": "List Org policy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportPatchDeployments",
    "stage": "BETA",
    "title": "List OS inventory data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportPubsubSnapshots",
    "stage": "BETA",
    "title": "List Pubsub Snapshots data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportPubsubSubscriptions",
    "stage": "BETA",
    "title": "List Pubsub Subscriptions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportPubsubTopics",
    "stage": "BETA",
    "title": "List Pubsub Topics data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportRedisInstances",
    "stage": "BETA",
    "title": "List Redis Instances data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportResource",
    "stage": "GA",
    "title": "List resource data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportSecretManagerSecretVersions",
    "stage": "BETA",
    "title": "List SecretManager SecretVersions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportSecretManagerSecrets",
    "stage": "BETA",
    "title": "List SecretManager Secrets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportServiceDirectoryNamespaces",
    "stage": "BETA",
    "title": "List Service Directory Namespaces data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportServicePerimeter",
    "stage": "BETA",
    "title": "List Service perimeter data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportServiceconsumermanagementConsumerProperty",
    "stage": "BETA",
    "title": "List Serviceconsumermanagement Consumer Property data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportServiceconsumermanagementConsumerQuotaLimits",
    "stage": "BETA",
    "title": "List Serviceconsumermanagement ConsumerQuotaLimit data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportServiceconsumermanagementConsumers",
    "stage": "BETA",
    "title": "List Serviceconsumermanagement Consumer data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportServiceconsumermanagementProducerOverrides",
    "stage": "BETA",
    "title": "List Serviceconsumermanagement ProducerOverride data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportServiceconsumermanagementTenancyUnits",
    "stage": "BETA",
    "title": "List Serviceconsumermanagement Tenancy Unit data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportServiceconsumermanagementVisibility",
    "stage": "BETA",
    "title": "List Serviceconsumermanagement Visibility data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportServicemanagementServices",
    "stage": "BETA",
    "title": "List Servicemanagement Services data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportServiceusageAdminOverrides",
    "stage": "BETA",
    "title": "List Serviceusage AdminOverride data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportServiceusageConsumerOverrides",
    "stage": "BETA",
    "title": "List Serviceusage ConsumerOverride data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportServiceusageServices",
    "stage": "BETA",
    "title": "List Serviceusage Service data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportSpannerBackups",
    "stage": "BETA",
    "title": "List Spanner Backups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportSpannerDatabases",
    "stage": "BETA",
    "title": "List Spanner Databases data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportSpannerInstances",
    "stage": "BETA",
    "title": "List Spanner Instances data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportSpeakerIdPhrases",
    "stage": "BETA",
    "title": "Export Speaker ID data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportSpeakerIdSettings",
    "stage": "BETA",
    "title": "Export Speaker ID data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportSpeakerIdSpeakers",
    "stage": "BETA",
    "title": "Export Speaker ID data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportSpeechCustomClasses",
    "stage": "BETA",
    "title": "Export Speech CustomClass data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportSpeechPhraseSets",
    "stage": "BETA",
    "title": "Export Speech PhraseSet data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportSqladminBackupRuns",
    "stage": "BETA",
    "title": "List Sqladmin BackupRuns data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportSqladminInstances",
    "stage": "BETA",
    "title": "List Sql adminInstances data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportStorageBuckets",
    "stage": "BETA",
    "title": "List Storage Buckets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportTpuNodes",
    "stage": "BETA",
    "title": "List Tpu Nodes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.exportVpcaccessConnector",
    "stage": "BETA",
    "title": "List Vpcaccess Connector data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAccessLevel",
    "stage": "BETA",
    "title": "List Access Level data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAccessPolicy",
    "stage": "BETA",
    "title": "List Access policy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAiplatformBatchPredictionJobs",
    "stage": "BETA",
    "title": "List AI Platform BatchPredictionJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAiplatformCustomJobs",
    "stage": "BETA",
    "title": "List AI Platform CustomJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAiplatformDataLabelingJobs",
    "stage": "BETA",
    "title": "List AI Platform DataLabelingJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAiplatformDatasets",
    "stage": "BETA",
    "title": "List AI Platform Datasets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAiplatformEndpoints",
    "stage": "BETA",
    "title": "List AI Platform Endpoints data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAiplatformHyperparameterTuningJobs",
    "stage": "BETA",
    "title": "List AI Platform HyperparameterTuningJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAiplatformMetadataStores",
    "stage": "BETA",
    "title": "List AI Platform MetadataStores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAiplatformModelDeploymentMonitoringJobs",
    "stage": "BETA",
    "title": "List AI Platform ModelDeploymentMonitoringJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAiplatformModels",
    "stage": "BETA",
    "title": "List AI Platform Models data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAiplatformPipelineJobs",
    "stage": "BETA",
    "title": "List AI Platform PipelineJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAiplatformSpecialistPools",
    "stage": "BETA",
    "title": "List AI Platform SpecialistPools data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAiplatformTrainingPipelines",
    "stage": "BETA",
    "title": "List AI Platform TrainingPipelines data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAllAccessPolicy",
    "stage": "BETA",
    "title": "List All Access policy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAnthosConnectedCluster",
    "stage": "BETA",
    "title": "List Anthos on prem Cluster data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAnthosedgeCluster",
    "stage": "BETA",
    "title": "list Anthos Edge Cluster data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listApigatewayApi",
    "stage": "BETA",
    "title": "List Apigateway Service Api data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listApigatewayApiConfig",
    "stage": "BETA",
    "title": "List Apigateway Service ApiConfig data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listApigatewayGateway",
    "stage": "BETA",
    "title": "List Apigateway Service Gateway data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listApikeysKeys",
    "stage": "BETA",
    "title": "List ApiKeys Key data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAppengineApplications",
    "stage": "BETA",
    "title": "List Appengine Applications data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAppengineServices",
    "stage": "BETA",
    "title": "List Appengine Services data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAppengineVersions",
    "stage": "BETA",
    "title": "List Appengine Versions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listArtifactregistryDockerImages",
    "stage": "BETA",
    "title": "List Artifactregistry DockerImages data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listArtifactregistryRepositories",
    "stage": "BETA",
    "title": "List Artifactregistry Repositories data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listAssuredWorkloadsWorkloads",
    "stage": "BETA",
    "title": "List Assured Workloads data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBeyondCorpApiGateways",
    "stage": "BETA",
    "title": "List BeyondCorp ApiGateway data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBeyondCorpAppConnections",
    "stage": "BETA",
    "title": "List BeyondCorp AppConnection data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBeyondCorpAppConnectors",
    "stage": "BETA",
    "title": "List BeyondCorp AppConnector data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBeyondCorpAppGateways",
    "stage": "BETA",
    "title": "List BeyondCorp AppGateway data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBeyondCorpClientConnectorServices",
    "stage": "BETA",
    "title": "List BeyondCorp ClientConnectorService data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBeyondCorpClientGateways",
    "stage": "BETA",
    "title": "List BeyondCorp ClientGateway data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBigqueryDatasets",
    "stage": "BETA",
    "title": "List Bigquery Datasets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBigqueryModels",
    "stage": "BETA",
    "title": "List Bigquery Models data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBigqueryTables",
    "stage": "BETA",
    "title": "List Bigquery Tables data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBigtableAppProfile",
    "stage": "BETA",
    "title": "List Bigtable data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBigtableBackup",
    "stage": "BETA",
    "title": "List Bigtable data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBigtableCluster",
    "stage": "BETA",
    "title": "List Bigtable data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBigtableInstance",
    "stage": "BETA",
    "title": "List Bigtable data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listBigtableTable",
    "stage": "BETA",
    "title": "List Bigtable data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudAssetFeeds",
    "stage": "BETA",
    "title": "List CloudAsset Feeds data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudDeployDeliveryPipelines",
    "stage": "BETA",
    "title": "List CloudDeploy DeliveryPipeline data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudDeployReleases",
    "stage": "BETA",
    "title": "List CloudDeploy Release data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudDeployRollouts",
    "stage": "BETA",
    "title": "List CloudDeploy Rollout data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudDeployTargets",
    "stage": "BETA",
    "title": "List CloudDeploy Target data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudDocumentAIEvaluation",
    "stage": "BETA",
    "title": "List Cloud Document AI Evaluation data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudDocumentAIHumanReviewConfig",
    "stage": "BETA",
    "title": "List Cloud Document AI HumanReviewConfig data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudDocumentAILabelerPool",
    "stage": "BETA",
    "title": "List Cloud Document AI LabelerPool data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudDocumentAIProcessor",
    "stage": "BETA",
    "title": "List Cloud Document AI Processor data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudDocumentAIProcessorVersion",
    "stage": "BETA",
    "title": "List Cloud Document AI ProcessorVersion data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudbillingBillingAccounts",
    "stage": "BETA",
    "title": "List Cloudbilling BillingAccounts data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudbillingProjectBillingInfos",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudfunctionsFunctions",
    "stage": "BETA",
    "title": "List Cloudfunctions Functions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudfunctionsGen2Functions",
    "stage": "BETA",
    "title": "List CloudfunctionsGen2 Functions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudkmsCryptoKeyVersions",
    "stage": "BETA",
    "title": "List Cloudkms CryptoKeyVersions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudkmsCryptoKeys",
    "stage": "BETA",
    "title": "List Cloudkms CryptoKeys data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudkmsEkmConnections",
    "stage": "BETA",
    "title": "List CloudKMS Ekm Connections"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudkmsImportJobs",
    "stage": "BETA",
    "title": "List Cloudkms ImportJobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudkmsKeyRings",
    "stage": "BETA",
    "title": "List Cloudkms KeyRings data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudmemcacheInstances",
    "stage": "BETA",
    "title": "List Cloud Memcache Instances data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudresourcemanagerFolders",
    "stage": "BETA",
    "title": "List Cloudresourcemanager Folders data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudresourcemanagerOrganizations",
    "stage": "BETA",
    "title": "List Cloudresourcemanager Organizations data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudresourcemanagerProjects",
    "stage": "BETA",
    "title": "List Cloudresourcemanager Projects data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudresourcemanagerTagBindings",
    "stage": "BETA",
    "title": "List Cloudresourcemanager TagBindings data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudresourcemanagerTagKeys",
    "stage": "BETA",
    "title": "List Cloudresourcemanager TagKeys data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listCloudresourcemanagerTagValues",
    "stage": "BETA",
    "title": "List Cloudresourcemanager TagValues data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComposerEnvironments",
    "stage": "BETA",
    "title": "List Composer Environments data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeAddress",
    "stage": "BETA",
    "title": "List Compute Address data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeAutoscalers",
    "stage": "BETA",
    "title": "List Compute Autoscalers data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeBackendBuckets",
    "stage": "BETA",
    "title": "List Compute BackendBuckets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeBackendServices",
    "stage": "BETA",
    "title": "List Compute BackendServices data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeCommitments",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeDisks",
    "stage": "BETA",
    "title": "List Compute Disks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeExternalVpnGateways",
    "stage": "BETA",
    "title": "List Compute ExternalVpnGateways data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeFirewallPolicies",
    "stage": "BETA",
    "title": "List Compute FirewallPolicies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeFirewalls",
    "stage": "BETA",
    "title": "List Compute Firewalls data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeForwardingRules",
    "stage": "BETA",
    "title": "List Compute ForwardingRules data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeGlobalAddress",
    "stage": "BETA",
    "title": "List Compute GlobalAddress data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeGlobalForwardingRules",
    "stage": "BETA",
    "title": "List Compute GlobalForwardingRules data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeHealthChecks",
    "stage": "BETA",
    "title": "List Compute HealthChecks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeHttpHealthChecks",
    "stage": "BETA",
    "title": "List Compute HttpHealthChecks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeHttpsHealthChecks",
    "stage": "BETA",
    "title": "List Compute HttpsHealthChecks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeImages",
    "stage": "BETA",
    "title": "List Compute Images data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeInstanceGroupManagers",
    "stage": "BETA",
    "title": "List Compute InstanceGroupManagers data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeInstanceGroups",
    "stage": "BETA",
    "title": "List Compute InstanceGroups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeInstanceTemplates",
    "stage": "BETA",
    "title": "List Compute InstanceTemplates data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeInstances",
    "stage": "BETA",
    "title": "List Compute Instances data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeInterconnect",
    "stage": "BETA",
    "title": "List Compute Interconnect data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeInterconnectAttachment",
    "stage": "BETA",
    "title": "List Compute InterconnectAttachment data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeLicenses",
    "stage": "BETA",
    "title": "List Compute Licenses data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeNetworkEndpointGroups",
    "stage": "BETA",
    "title": "List Compute NetworkEndpointGroups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeNetworks",
    "stage": "BETA",
    "title": "List Compute Networks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeNodeGroups",
    "stage": "BETA",
    "title": "List Compute NodeGroups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeNodeTemplates",
    "stage": "BETA",
    "title": "List Compute NodeTemplates data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputePacketMirrorings",
    "stage": "BETA",
    "title": "List Compute PacketMirrorings data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeProjects",
    "stage": "BETA",
    "title": "List Compute Projects data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeRegionAutoscaler",
    "stage": "BETA",
    "title": "List Compute RegionAutoscaler data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeRegionBackendServices",
    "stage": "BETA",
    "title": "List Compute RegionBackendServices data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeRegionDisk",
    "stage": "BETA",
    "title": "List Compute RegionDisk data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeRegionInstanceGroup",
    "stage": "BETA",
    "title": "List Compute RegionInstanceGroup data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeRegionInstanceGroupManager",
    "stage": "BETA",
    "title": "List Compute RegionInstanceGroupManager data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeReservations",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeResourcePolicies",
    "stage": "BETA",
    "title": "List Compute ResourcePolicies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeRouters",
    "stage": "BETA",
    "title": "List Compute Routers data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeRoutes",
    "stage": "BETA",
    "title": "List Compute Routes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeSecurityPolicy",
    "stage": "BETA",
    "title": "List Compute SecurityPolicy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeServiceAttachments",
    "stage": "BETA",
    "title": "List compute service attachment assets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeSnapshots",
    "stage": "BETA",
    "title": "List assets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeSslCertificates",
    "stage": "BETA",
    "title": "List Compute SslCertificates data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeSslPolicies",
    "stage": "BETA",
    "title": "List Compute SslPolicies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeSubnetworks",
    "stage": "BETA",
    "title": "List Compute Subnetworks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeTargetHttpProxies",
    "stage": "BETA",
    "title": "List Compute TargetHttpProxies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeTargetHttpsProxies",
    "stage": "BETA",
    "title": "List Compute TargetHttpsProxies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeTargetInstances",
    "stage": "BETA",
    "title": "List Compute TargetInstances data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeTargetPools",
    "stage": "BETA",
    "title": "List Compute TargetPools data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeTargetSslProxies",
    "stage": "BETA",
    "title": "List Compute TargetSslProxies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeTargetTcpProxies",
    "stage": "BETA",
    "title": "List Compute TargetTcpProxies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeTargetVpnGateways",
    "stage": "BETA",
    "title": "List Compute TargetVpnGateways data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeUrlMaps",
    "stage": "BETA",
    "title": "List Compute UrlMaps data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeVpnGateways",
    "stage": "BETA",
    "title": "List Compute VpnGateways data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listComputeVpnTunnels",
    "stage": "BETA",
    "title": "List Compute VpnTunnels data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listConnectorsConnections",
    "stage": "BETA",
    "title": "List Connectors Connection data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listConnectorsConnectorVersions",
    "stage": "BETA",
    "title": "List Connectors ConnectorVersion data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listConnectorsConnectors",
    "stage": "BETA",
    "title": "List Connectors Connector data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listConnectorsProviders",
    "stage": "BETA",
    "title": "List Connectors Provider data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listConnectorsRuntimeConfigs",
    "stage": "BETA",
    "title": "List Connectors RuntimeConfig data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerAppsDeployment",
    "stage": "BETA",
    "title": "List Kubernetes Apps Deployment data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerAppsReplicaSets",
    "stage": "BETA",
    "title": "List container replica sets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerBatchJobs",
    "stage": "BETA",
    "title": "List container jobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerClusterrole",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerClusterrolebinding",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerClusters",
    "stage": "BETA",
    "title": "List Container Clusters data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerExtensionsIngresses",
    "stage": "BETA",
    "title": "List Kubernetes Extensions Ingress data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerJobs",
    "stage": "BETA",
    "title": "List container jobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerNamespace",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerNetworkingIngresses",
    "stage": "BETA",
    "title": "List Kubernetes Networking Ingress data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerNetworkingNetworkPolicies",
    "stage": "BETA",
    "title": "List Kubernetes Networking NetworkPolicy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerNode",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerNodepool",
    "stage": "BETA",
    "title": "List Container Nodepool data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerPod",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerReplicaSets",
    "stage": "BETA",
    "title": "List container replica sets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerRole",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerRolebinding",
    "stage": "BETA",
    "title": "List Kubernetes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerServices",
    "stage": "BETA",
    "title": "List Kubernetes Service data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listContainerregistryImage",
    "stage": "BETA",
    "title": "List Containerregistry Image data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDataMigrationConnectionProfiles",
    "stage": "BETA",
    "title": "List DataMigration ConnectionProfile data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDataMigrationMigrationJobs",
    "stage": "BETA",
    "title": "List DataMigration MigrationJob data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDataflowJobs",
    "stage": "BETA",
    "title": "List Dataflow Jobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDatafusionInstance",
    "stage": "BETA",
    "title": "List Datafusion instance data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDataplexAssets",
    "stage": "BETA",
    "title": "List Dataplex Asset data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDataplexLakes",
    "stage": "BETA",
    "title": "List Dataplex Lake data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDataplexTasks",
    "stage": "BETA",
    "title": "List Dataplex Task data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDataplexZones",
    "stage": "BETA",
    "title": "List Dataplex Zone data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDataprocAutoscalingPolicies",
    "stage": "BETA",
    "title": "List Dataproc AutoscalingPolicies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDataprocBatches",
    "stage": "BETA",
    "title": "List Dataproc Batches data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDataprocClusters",
    "stage": "BETA",
    "title": "List Dataproc Clusters data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDataprocJobs",
    "stage": "BETA",
    "title": "List Dataproc Jobs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDataprocSessions",
    "stage": "BETA",
    "title": "List Dataproc Sessions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDataprocWorkflowTemplates",
    "stage": "BETA",
    "title": "List Dataproc WorkflowTemplates data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDatastreamConnectionProfile",
    "stage": "BETA",
    "title": "List Datastream ConnectionProfile data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDatastreamPrivateConnection",
    "stage": "BETA",
    "title": "List Datastream PrivateConnection data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDatastreamStream",
    "stage": "BETA",
    "title": "List Datastream Stream data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDialogflowAgents",
    "stage": "BETA",
    "title": "List Dialogflow Agents data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDialogflowConversationProfiles",
    "stage": "BETA",
    "title": "List Dialogflow ConversationProfiles data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDialogflowKnowledgeBases",
    "stage": "BETA",
    "title": "List Dialogflow KnowledgeBases data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDialogflowLocationSettings",
    "stage": "BETA",
    "title": "List Dialogflow LocationSettings data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDlpDeidentifyTemplates",
    "stage": "BETA",
    "title": "List DLP Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDlpDlpJobs",
    "stage": "BETA",
    "title": "List DLP Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDlpInspectTemplates",
    "stage": "BETA",
    "title": "List DLP Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDlpJobTriggers",
    "stage": "BETA",
    "title": "List DLP Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDlpStoredInfoTypes",
    "stage": "BETA",
    "title": "List DLP Data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDnsManagedZones",
    "stage": "BETA",
    "title": "List Dns ManagedZones data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDnsPolicies",
    "stage": "BETA",
    "title": "List Dns Policies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listDomainsRegistrations",
    "stage": "BETA",
    "title": "List Domains Registration data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listEventarcTriggers",
    "stage": "BETA",
    "title": "List Eventarc Triggers data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listFileBackups",
    "stage": "BETA",
    "title": "List Filestore Backups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listFileInstances",
    "stage": "BETA",
    "title": "List Filestore Service data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listFirebaseAppInfos",
    "stage": "BETA",
    "title": "List Firebase App Info data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listFirebaseProjects",
    "stage": "BETA",
    "title": "List Firebase Project data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listFirestoreDatabases",
    "stage": "BETA",
    "title": "List Firestore data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listGKEHubFeatures",
    "stage": "BETA",
    "title": "List GKEHub Feature data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listGKEHubMemberships",
    "stage": "BETA",
    "title": "List GKEHub Membership data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listGameservicesGameServerClusters",
    "stage": "BETA",
    "title": "List Gameservices GameServerClusters data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listGameservicesGameServerConfigs",
    "stage": "BETA",
    "title": "List Gameservices GameServerConfigs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listGameservicesGameServerDeployments",
    "stage": "BETA",
    "title": "List Gameservices GameServerDeployments data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listGameservicesRealms",
    "stage": "BETA",
    "title": "List Gameservices Realms data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listGkeBackupBackupPlans",
    "stage": "BETA",
    "title": "List GkeBackup BackupPlans data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listGkeBackupBackups",
    "stage": "BETA",
    "title": "List GkeBackup Backups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listGkeBackupRestorePlans",
    "stage": "BETA",
    "title": "List GKE Backup RestorePlans data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listGkeBackupRestores",
    "stage": "BETA",
    "title": "List GKE Backup Restores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listGkeBackupVolumeBackups",
    "stage": "BETA",
    "title": "List GKE Backup VolumeBackups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listGkeBackupVolumeRestores",
    "stage": "BETA",
    "title": "List GKE Backup VolumeRestores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listHealthcareConsentStores",
    "stage": "BETA",
    "title": "List Healthcare ConsentStores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listHealthcareDatasets",
    "stage": "BETA",
    "title": "List Healthcare Datasets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listHealthcareDicomStores",
    "stage": "BETA",
    "title": "List Healthcare DicomStores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listHealthcareFhirStores",
    "stage": "BETA",
    "title": "List Healthcare FhirStores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listHealthcareHl7V2Stores",
    "stage": "BETA",
    "title": "List Healthcare Hl7V2Stores data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listIamPolicy",
    "stage": "BETA",
    "title": "List IAM policy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listIamRoles",
    "stage": "BETA",
    "title": "List Iam Roles data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listIamServiceAccountKeys",
    "stage": "BETA",
    "title": "List Iam ServiceAccountKeys data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listIamServiceAccounts",
    "stage": "BETA",
    "title": "List Iam ServiceAccounts data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.listIapTunnel",
    "stage": "BETA",
    "title": "List Iap Tunnel data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.listIapTunnelInstances",
    "stage": "BETA",
    "title": "List Iap TunnelInstances data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.listIapTunnelZones",
    "stage": "BETA",
    "title": "List Iap TunnelZones data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.listIapWeb",
    "stage": "BETA",
    "title": "List Iap Web data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.listIapWebServiceVersion",
    "stage": "BETA",
    "title": "List Iap WebServiceVersion data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.listIapWebServices",
    "stage": "BETA",
    "title": "List Iap WebServices data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.listIapWebType",
    "stage": "BETA",
    "title": "List Iap WebType data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listIdsEndpoints",
    "stage": "BETA",
    "title": "List Cloud IDS Endpoint data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listIntegrationsAuthConfigs",
    "stage": "BETA",
    "title": "List Integrations AuthConfigs data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listIntegrationsCertificates",
    "stage": "BETA",
    "title": "List Integrations Certificate data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listIntegrationsExecutions",
    "stage": "BETA",
    "title": "List Integrations Execution data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listIntegrationsIntegrationVersions",
    "stage": "BETA",
    "title": "List Integrations IntegrationVersion data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listIntegrationsIntegrations",
    "stage": "BETA",
    "title": "List Integrations Integration data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listIntegrationsSfdcChannels",
    "stage": "BETA",
    "title": "List Integrations SfdcChannel data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listIntegrationsSfdcInstances",
    "stage": "BETA",
    "title": "List Integrations SfdcInstance data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listIntegrationsSuspensions",
    "stage": "BETA",
    "title": "List Integrations Suspension data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.listLoggingLogMetrics",
    "stage": "BETA",
    "title": "List Logging LogMetrics data"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudasset.assets.listLoggingLogSinks",
    "stage": "BETA",
    "title": "List Logging LogSinks data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listManagedidentitiesDomain",
    "stage": "BETA",
    "title": "List Managed identities data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listMetastoreBackups",
    "stage": "BETA",
    "title": "list Metastore Backups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listMetastoreMetadataImports",
    "stage": "BETA",
    "title": "list Metastore MetadataImports data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listMetastoreServices",
    "stage": "BETA",
    "title": "list Metastore Services data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listMonitoringAlertPolicies",
    "stage": "BETA",
    "title": "List Monitoring Service data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listNetworkConnectivityHubs",
    "stage": "BETA",
    "title": "List NetworkConnectivity data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listNetworkConnectivitySpokes",
    "stage": "BETA",
    "title": "List NetworkConnectivity data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listNetworkManagementConnectivityTests",
    "stage": "BETA",
    "title": "List NetworkManagement Service data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listNetworkServicesEndpointPolicies",
    "stage": "BETA",
    "title": "List NetworkServices EndpointPolicies data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listNetworkServicesGateways",
    "stage": "BETA",
    "title": "List NetworkServices Gateways data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listNetworkServicesGrpcRoutes",
    "stage": "BETA",
    "title": "List NetworkServices GrpcRoutes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listNetworkServicesHttpRoutes",
    "stage": "BETA",
    "title": "List NetworkServices HttpRoutes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listNetworkServicesMeshes",
    "stage": "BETA",
    "title": "List NetworkServices Meshes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listNetworkServicesServiceBindings",
    "stage": "BETA",
    "title": "List NetworkServices ServiceBindings data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listNetworkServicesTcpRoutes",
    "stage": "BETA",
    "title": "List NetworkServices TcpRoutes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listNetworkServicesTlsRoutes",
    "stage": "BETA",
    "title": "List NetworkServices TlsRoutes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listOSConfigOSPolicyAssignmentReports",
    "stage": "BETA",
    "title": "List OSConfig OSPolicyAssignmentReport data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listOSConfigOSPolicyAssignments",
    "stage": "BETA",
    "title": "List OSConfig OSPolicyAssignment data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listOSConfigVulnerabilityReports",
    "stage": "BETA",
    "title": "List OSConfig VulnerabilityReports data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listOSInventories",
    "stage": "BETA",
    "title": "List OS Inventory data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listOrgPolicy",
    "stage": "BETA",
    "title": "List Org policy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listPatchDeployments",
    "stage": "BETA",
    "title": "List OS inventory data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listPubsubSnapshots",
    "stage": "BETA",
    "title": "List Pubsub Snapshots data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listPubsubSubscriptions",
    "stage": "BETA",
    "title": "List Pubsub Subscriptions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listPubsubTopics",
    "stage": "BETA",
    "title": "List Pubsub Topics data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listRedisInstances",
    "stage": "BETA",
    "title": "List Redis Instances data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listResource",
    "stage": "BETA",
    "title": "List resource data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listRunDomainMapping",
    "stage": "BETA",
    "title": "List Run DomainMapping data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listRunRevision",
    "stage": "BETA",
    "title": "List Run Revision data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listRunService",
    "stage": "BETA",
    "title": "List Run Service data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listSecretManagerSecretVersions",
    "stage": "BETA",
    "title": "List SecretManager SecretVersions data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listSecretManagerSecrets",
    "stage": "BETA",
    "title": "List SecretManager Secrets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listServiceDirectoryNamespaces",
    "stage": "BETA",
    "title": "List Service Directory data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listServicePerimeter",
    "stage": "BETA",
    "title": "List Service perimeter data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listServiceconsumermanagementConsumerProperty",
    "stage": "BETA",
    "title": "List Serviceconsumermanagement Consumer Property data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listServiceconsumermanagementConsumerQuotaLimits",
    "stage": "BETA",
    "title": "List Serviceconsumermanagement ConsumerQuotaLimit data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listServiceconsumermanagementConsumers",
    "stage": "BETA",
    "title": "List Serviceconsumermanagement Consumer data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listServiceconsumermanagementProducerOverrides",
    "stage": "BETA",
    "title": "List Serviceconsumermanagement ProducerOverride data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listServiceconsumermanagementTenancyUnits",
    "stage": "BETA",
    "title": "List Serviceconsumermanagement Tenancy Unit data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listServiceconsumermanagementVisibility",
    "stage": "BETA",
    "title": "List Serviceconsumermanagement Visibility data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listServicemanagementServices",
    "stage": "BETA",
    "title": "List Servicemanagement Services data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listServiceusageAdminOverrides",
    "stage": "BETA",
    "title": "List Serviceusage AdminOverride data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listServiceusageConsumerOverrides",
    "stage": "BETA",
    "title": "List Serviceusage ConsumerOverride data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listServiceusageServices",
    "stage": "BETA",
    "title": "List Serviceusage Service data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listSpannerBackups",
    "stage": "BETA",
    "title": "List Spanner Backups data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listSpannerDatabases",
    "stage": "BETA",
    "title": "List Spanner Databases data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listSpannerInstances",
    "stage": "BETA",
    "title": "List Spanner Instances data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listSpeakerIdPhrases",
    "stage": "BETA",
    "title": "List Speaker ID data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listSpeakerIdSettings",
    "stage": "BETA",
    "title": "List Speaker ID data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listSpeakerIdSpeakers",
    "stage": "BETA",
    "title": "List Speaker ID data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listSpeechCustomClasses",
    "stage": "BETA",
    "title": "List Speech CustomClass data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listSpeechPhraseSets",
    "stage": "BETA",
    "title": "List Speech PhraseSet data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listSqladminBackupRuns",
    "stage": "BETA",
    "title": "List Sqladmin BackupRuns data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listSqladminInstances",
    "stage": "BETA",
    "title": "List Sqladmin Instances data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listStorageBuckets",
    "stage": "BETA",
    "title": "List Storage Buckets data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listTpuNodes",
    "stage": "BETA",
    "title": "List Tpu Nodes data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.listVpcaccessConnector",
    "stage": "BETA",
    "title": "List Vpcaccess Connector data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.queryAccessPolicy",
    "stage": "BETA",
    "title": "Query Access policy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.queryIamPolicy",
    "stage": "BETA",
    "title": "Query IAM policy data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.queryOSInventories",
    "stage": "BETA",
    "title": "Query OS Inventory data"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.queryResource",
    "stage": "BETA",
    "title": "Query resources"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.searchAllIamPolicies",
    "stage": "GA",
    "title": "Search IAM policies under a organization/folder/project"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.searchAllResources",
    "stage": "GA",
    "title": "Search resources under a organization/folder/project"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.assets.searchEnrichmentResourceOwners",
    "stage": "BETA",
    "title": "Search Enrichment Resource owners under a organization/folder/project"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.feeds.create",
    "stage": "GA",
    "title": "Create Feed"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.feeds.delete",
    "stage": "GA",
    "title": "Delete Feed"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.feeds.get",
    "stage": "GA",
    "title": "Get Feed"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.feeds.list",
    "stage": "GA",
    "title": "List Feed"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.feeds.update",
    "stage": "GA",
    "title": "Update Feed"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.othercloudconnections.create",
    "stage": "BETA",
    "title": "Create OtherCloudConnection"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.othercloudconnections.delete",
    "stage": "BETA",
    "title": "Delete OtherCloudConnection"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.othercloudconnections.get",
    "stage": "BETA",
    "title": "Get OtherCloudConnection"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.othercloudconnections.list",
    "stage": "BETA",
    "title": "List OtherCloudConnection"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.othercloudconnections.update",
    "stage": "BETA",
    "title": "Update OtherCloudConnection"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.othercloudconnections.verify",
    "stage": "BETA",
    "title": "Verify OtherCloudConnection"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.savedqueries.create",
    "stage": "BETA",
    "title": "Create SavedQuery"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.savedqueries.delete",
    "stage": "BETA",
    "title": "Delete SavedQuery"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.savedqueries.get",
    "stage": "BETA",
    "title": "Get SavedQuery"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.savedqueries.list",
    "stage": "BETA",
    "title": "List SavedQuery"
  },
  {
    "apiDisabled": true,
    "name": "cloudasset.savedqueries.update",
    "stage": "BETA",
    "title": "Update SavedQuery"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.builds.approve",
    "stage": "GA",
    "title": "Approve Build"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.builds.create",
    "stage": "GA",
    "title": "Create Build"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.builds.get",
    "stage": "GA",
    "title": "Read Build"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.builds.list",
    "stage": "GA",
    "title": "List Builds"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.builds.update",
    "stage": "GA",
    "title": "Update Build"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.connections.create",
    "stage": "GA",
    "title": "Create Connection"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.connections.delete",
    "stage": "GA",
    "title": "Delete Connection"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.connections.fetchLinkableRepositories",
    "stage": "GA",
    "title": "Fetch Linkable Repositories for a Connection"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.connections.get",
    "stage": "GA",
    "title": "Get Connection"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.connections.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.connections.list",
    "stage": "GA",
    "title": "List Connections"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.connections.setIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.connections.update",
    "stage": "GA",
    "title": "Update Connection"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.integrations.create",
    "stage": "GA",
    "title": "Create Integration"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.integrations.delete",
    "stage": "GA",
    "title": "Delete Integration"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.integrations.get",
    "stage": "GA",
    "title": "Read Integration"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.integrations.list",
    "stage": "GA",
    "title": "List Integrations"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.integrations.update",
    "stage": "GA",
    "title": "Update Integration"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.repositories.accessReadToken",
    "stage": "GA",
    "title": "Access Read-Only Token"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.repositories.accessReadWriteToken",
    "stage": "GA",
    "title": "Access Read/Write Token"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.repositories.create",
    "stage": "GA",
    "title": "Create Repository"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.repositories.delete",
    "stage": "GA",
    "title": "Delete Repository"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.repositories.fetchGitRefs",
    "stage": "GA",
    "title": "Fetch Git References"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.repositories.get",
    "stage": "GA",
    "title": "Get Repository"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.repositories.list",
    "stage": "GA",
    "title": "List Repositories"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.workerpools.create",
    "stage": "GA",
    "title": "Create WorkerPool"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.workerpools.delete",
    "stage": "GA",
    "title": "Delete WorkerPool"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.workerpools.get",
    "stage": "GA",
    "title": "Read WorkerPool"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.workerpools.list",
    "stage": "GA",
    "title": "List WorkerPools"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.workerpools.update",
    "stage": "GA",
    "title": "Update WorkerPool"
  },
  {
    "apiDisabled": true,
    "name": "cloudbuild.workerpools.use",
    "stage": "GA",
    "title": "Run Build in WorkerPool"
  },
  {
    "apiDisabled": true,
    "name": "cloudconfig.configs.get",
    "stage": "GA",
    "title": "Read config template"
  },
  {
    "apiDisabled": true,
    "name": "cloudconfig.configs.update",
    "stage": "GA",
    "title": "Write config template"
  },
  {
    "apiDisabled": true,
    "name": "clouddebugger.breakpoints.create",
    "stage": "BETA",
    "title": "Set a Breakpoint"
  },
  {
    "apiDisabled": true,
    "name": "clouddebugger.breakpoints.delete",
    "stage": "BETA",
    "title": "Delete a Breakpoint"
  },
  {
    "apiDisabled": true,
    "name": "clouddebugger.breakpoints.get",
    "stage": "BETA",
    "title": "Get a Breakpoint"
  },
  {
    "apiDisabled": true,
    "name": "clouddebugger.breakpoints.list",
    "stage": "BETA",
    "title": "List Breakpoints"
  },
  {
    "apiDisabled": true,
    "name": "clouddebugger.breakpoints.listActive",
    "stage": "BETA",
    "title": "List Active Breakpoints"
  },
  {
    "apiDisabled": true,
    "name": "clouddebugger.breakpoints.update",
    "stage": "BETA",
    "title": "Update a Breakpoint"
  },
  {
    "apiDisabled": true,
    "name": "clouddebugger.debuggees.create",
    "stage": "BETA",
    "title": "Register a Debuggee"
  },
  {
    "apiDisabled": true,
    "name": "clouddebugger.debuggees.list",
    "stage": "BETA",
    "title": "List Debuggees"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.automationRuns.cancel",
    "stage": "GA",
    "title": "Cancel AutomationRun"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.automationRuns.get",
    "stage": "GA",
    "title": "Get AutomationRun"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.automationRuns.list",
    "stage": "GA",
    "title": "List AutomationRun"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.automations.create",
    "stage": "GA",
    "title": "Create Automation"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.automations.delete",
    "stage": "GA",
    "title": "Delete Automation"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.automations.get",
    "stage": "GA",
    "title": "Get Automation"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.automations.list",
    "stage": "GA",
    "title": "List Automation"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.automations.update",
    "stage": "GA",
    "title": "Update Automation"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.config.get",
    "stage": "GA",
    "title": "Get Config"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.customTargetTypes.create",
    "stage": "GA",
    "title": "Create CustomTargetType"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.customTargetTypes.delete",
    "stage": "GA",
    "title": "Delete CustomTargetType"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.customTargetTypes.get",
    "stage": "GA",
    "title": "Get CustomTargetType"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.customTargetTypes.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on CustomTargetType"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.customTargetTypes.list",
    "stage": "GA",
    "title": "List CustomTargetTypes"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.customTargetTypes.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on CustomTargetType"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.customTargetTypes.update",
    "stage": "GA",
    "title": "Update CustomTargetType"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deliveryPipelines.create",
    "stage": "GA",
    "title": "Create DeliveryPipeline"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deliveryPipelines.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on DeliveryPipeline"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deliveryPipelines.delete",
    "stage": "GA",
    "title": "Delete DeliveryPipeline"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deliveryPipelines.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on DeliveryPipeline"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deliveryPipelines.get",
    "stage": "GA",
    "title": "Get DeliveryPipeline"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deliveryPipelines.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on DeliveryPipeline"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deliveryPipelines.list",
    "stage": "GA",
    "title": "List DeliveryPipeline"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deliveryPipelines.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on DeliveryPipeline"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deliveryPipelines.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on DeliveryPipeline"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deliveryPipelines.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on DeliveryPipeline"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deliveryPipelines.update",
    "stage": "GA",
    "title": "Update DeliveryPipeline"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deployPolicies.create",
    "stage": "GA",
    "title": "Create DeployPolicy"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deployPolicies.delete",
    "stage": "GA",
    "title": "Delete DeployPolicy"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deployPolicies.get",
    "stage": "GA",
    "title": "Get DeployPolicy"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deployPolicies.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on a DeployPolicy"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deployPolicies.list",
    "stage": "GA",
    "title": "List DeployPolicy"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deployPolicies.override",
    "stage": "GA",
    "title": "Override DeployPolicy"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deployPolicies.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on a DeployPolicy"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.deployPolicies.update",
    "stage": "GA",
    "title": "Update DeployPolicy"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.jobRuns.get",
    "stage": "GA",
    "title": "Get JobRun"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.jobRuns.list",
    "stage": "GA",
    "title": "List JobRuns"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.jobRuns.terminate",
    "stage": "GA",
    "title": "Terminate JobRun"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.releases.abandon",
    "stage": "GA",
    "title": "Abandon Release"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.releases.create",
    "stage": "GA",
    "title": "Create Release"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.releases.get",
    "stage": "GA",
    "title": "Get Release"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.releases.list",
    "stage": "GA",
    "title": "List Release"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.rollouts.advance",
    "stage": "GA",
    "title": "Advance Rollout"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.rollouts.approve",
    "stage": "GA",
    "title": "Approve Rollout"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.rollouts.cancel",
    "stage": "GA",
    "title": "Cancel Rollout"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.rollouts.create",
    "stage": "GA",
    "title": "Create Rollout"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.rollouts.get",
    "stage": "GA",
    "title": "Get Rollout"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.rollouts.ignoreJob",
    "stage": "GA",
    "title": "Ignore Job"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.rollouts.list",
    "stage": "GA",
    "title": "List Rollout"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.rollouts.retryJob",
    "stage": "GA",
    "title": "Retry Job"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.rollouts.rollback",
    "stage": "BETA",
    "title": "Create Rollback"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.targets.create",
    "stage": "GA",
    "title": "Create Target"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.targets.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on Target"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.targets.delete",
    "stage": "GA",
    "title": "Delete Target"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.targets.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on Target"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.targets.get",
    "stage": "GA",
    "title": "Get Target"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.targets.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Target"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.targets.list",
    "stage": "GA",
    "title": "List Target"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.targets.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on Target"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.targets.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on Target"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.targets.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Target"
  },
  {
    "apiDisabled": true,
    "name": "clouddeploy.targets.update",
    "stage": "GA",
    "title": "Update Target"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.call",
    "stage": "GA",
    "title": "Call Cloud Function"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.create",
    "stage": "GA",
    "title": "Create Cloud Function"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.delete",
    "stage": "GA",
    "title": "Delete Cloud Function"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.generateUploadUrl",
    "primaryPermission": "cloudfunctions.functions.sourceCodeSet",
    "stage": "GA",
    "title": "Set Cloud Function Source Code"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.generationUpgrade",
    "stage": "GA",
    "title": "Upgrade Cloud Function Generation"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.get",
    "stage": "GA",
    "title": "Get Cloud Function"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.getIamPolicy",
    "stage": "GA",
    "title": "Get Cloud Function IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.invoke",
    "stage": "GA",
    "title": "Invoke Cloud Function"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.list",
    "stage": "GA",
    "title": "List Cloud Functions"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.setIamPolicy",
    "stage": "GA",
    "title": "Set Cloud Function IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.sourceCodeGet",
    "stage": "GA",
    "title": "Get Cloud Function Source Code"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.sourceCodeSet",
    "stage": "GA",
    "title": "Set Cloud Function Source Code"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.functions.update",
    "stage": "GA",
    "title": "Update Cloud Function"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudfunctions.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudiottoken.tokensettings.get",
    "stage": "BETA",
    "title": "Get Token Settings"
  },
  {
    "apiDisabled": true,
    "name": "cloudiottoken.tokensettings.update",
    "stage": "BETA",
    "title": "Update Token Settings"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.companies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.companies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.companies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.companies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.companies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.events.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.jobs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.jobs.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.jobs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.jobs.search",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.jobs.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.profiles.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.profiles.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.profiles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.profiles.search",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.profiles.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.tenants.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.tenants.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.tenants.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.tenants.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudjobdiscovery.tools.access",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.create",
    "stage": "GA",
    "title": "Create Key Version"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.destroy",
    "stage": "GA",
    "title": "Destroy CryptoKeyVersion Material"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.get",
    "stage": "GA",
    "title": "Get CryptoKeyVersion Metadata"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.list",
    "stage": "GA",
    "title": "List CryptoKeyVersions"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.manageRawAesCbcKeys",
    "stage": "GA",
    "title": "Allow creating/managing Raw AES-CBC keys."
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.manageRawAesCtrKeys",
    "stage": "GA",
    "title": "Allow creating/managing Raw AES-CTR keys."
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.manageRawPKCS1Keys",
    "stage": "GA",
    "title": "Allow creating/managing Raw PKCS #1 keys."
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.restore",
    "stage": "GA",
    "title": "Restore CryptoKeyVersion"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.update",
    "stage": "GA",
    "title": "Update CryptoKeyVersion"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.useToDecapsulate",
    "stage": "BETA",
    "title": "Decapsulate with CryptoKeyVersion"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.useToDecrypt",
    "stage": "GA",
    "title": "Decrypt with CryptoKeyVersion"
  },
  {
    "name": "cloudkms.cryptoKeyVersions.useToDecryptViaDelegation",
    "stage": "GA",
    "title": "Decrypt with CryptoKeyVersion Via Delegation"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.useToEncrypt",
    "stage": "GA",
    "title": "Encrypt with CryptoKeyVersion"
  },
  {
    "name": "cloudkms.cryptoKeyVersions.useToEncryptViaDelegation",
    "stage": "GA",
    "title": "Encrypt with CryptoKeyVersion Via Delegation"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.useToSign",
    "stage": "GA",
    "title": "Sign with CryptoKeyVersion"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.useToVerify",
    "stage": "GA",
    "title": "Verify with CryptoKeyVersion"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeyVersions.viewPublicKey",
    "stage": "GA",
    "title": "Get CryptoKeyVersion public key"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeys.create",
    "stage": "GA",
    "title": "Create CryptoKey"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeys.get",
    "stage": "GA",
    "title": "Get CryptoKey"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeys.getIamPolicy",
    "stage": "GA",
    "title": "Get CryptoKey Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeys.list",
    "stage": "GA",
    "title": "List CryptoKeys"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeys.setIamPolicy",
    "stage": "GA",
    "title": "Set CryptoKey Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.cryptoKeys.update",
    "stage": "GA",
    "title": "Update CryptoKey"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.ekmConfigs.get",
    "stage": "GA",
    "title": "Get EkmConfig"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.ekmConfigs.getIamPolicy",
    "stage": "GA",
    "title": "Get EkmConfig Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.ekmConfigs.setIamPolicy",
    "stage": "GA",
    "title": "Set EkmConfig Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.ekmConfigs.update",
    "stage": "GA",
    "title": "Update EkmConfig"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.ekmConnections.create",
    "stage": "GA",
    "title": "Create EkmConnection"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.ekmConnections.get",
    "stage": "GA",
    "title": "Get EkmConnection"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.ekmConnections.getIamPolicy",
    "stage": "GA",
    "title": "Get EkmConnection Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.ekmConnections.list",
    "stage": "GA",
    "title": "List EkmConnections"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.ekmConnections.setIamPolicy",
    "stage": "GA",
    "title": "Set EkmConnection Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.ekmConnections.update",
    "stage": "GA",
    "title": "Update EkmConnection"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.ekmConnections.use",
    "stage": "GA",
    "title": "Use EkmConnection"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.ekmConnections.verifyConnectivity",
    "stage": "GA",
    "title": "Verify Connectivity to an EkmConnection"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.importJobs.create",
    "stage": "GA",
    "title": "Create ImportJob"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.importJobs.get",
    "stage": "GA",
    "title": "Get ImportJob"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.importJobs.getIamPolicy",
    "stage": "GA",
    "title": "Get ImportJob Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.importJobs.list",
    "stage": "GA",
    "title": "List ImportJobs"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.importJobs.setIamPolicy",
    "stage": "GA",
    "title": "Set ImportJob Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.importJobs.useToImport",
    "stage": "GA",
    "title": "Import CryptoKeyVersion"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.kajPolicyConfigs.get",
    "stage": "BETA",
    "title": "Get Key Access Justifications Policy Config"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.kajPolicyConfigs.update",
    "stage": "BETA",
    "title": "Update Key Access Justifications Policy Config"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.keyHandles.create",
    "stage": "GA",
    "title": "Create KeyHandle"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.keyHandles.get",
    "stage": "GA",
    "title": "Get KeyHandle"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.keyHandles.list",
    "stage": "GA",
    "title": "List KeyHandles"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.keyRings.create",
    "stage": "GA",
    "title": "Create KeyRing"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.keyRings.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.keyRings.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.keyRings.get",
    "stage": "GA",
    "title": "Get KeyRing"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.keyRings.getIamPolicy",
    "stage": "GA",
    "title": "Get KeyRing Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.keyRings.list",
    "stage": "GA",
    "title": "List KeyRings"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.keyRings.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.keyRings.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.keyRings.setIamPolicy",
    "stage": "GA",
    "title": "Set KeyRing Policy"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.locations.generateRandomBytes",
    "stage": "GA",
    "title": "Generate Random Bytes"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.locations.optOutKeyDeletionMsa",
    "stage": "GA",
    "title": "Allow setting opt-out preference for the key deletion default value change."
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.projects.showEffectiveAutokeyConfig",
    "stage": "GA",
    "title": "Show Effective Autokey Config"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.projects.showEffectiveKajEnrollmentConfig",
    "stage": "BETA",
    "title": "Show Effective Key Access Justifications Enrollment Config"
  },
  {
    "apiDisabled": true,
    "name": "cloudkms.projects.showEffectiveKajPolicyConfig",
    "stage": "BETA",
    "title": "Show Effective Key Access Justifications Config"
  },
  {
    "apiDisabled": true,
    "name": "cloudlocationfinder.cloudLocations.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudlocationfinder.cloudLocations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudlocationfinder.cloudLocations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudlocationfinder.cloudLocations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudlocationfinder.cloudLocations.search",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudlocationfinder.cloudLocations.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudlocationfinder.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudlocationfinder.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudmessaging.messages.create",
    "stage": "GA",
    "title": "Send Firebase Cloud Messaging message"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "cloudmigration.velostrataendpoints.connect",
    "onlyInPredefinedRoles": true,
    "stage": "BETA"
  },
  {
    "name": "cloudnotifications.activities.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Dell EMC, not Google.",
    "name": "cloudonefs.isiloncloud.com/clusters.create",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Create cluster"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Dell EMC, not Google.",
    "name": "cloudonefs.isiloncloud.com/clusters.delete",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Delete cluster"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Dell EMC, not Google.",
    "name": "cloudonefs.isiloncloud.com/clusters.get",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Get cluster"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Dell EMC, not Google.",
    "name": "cloudonefs.isiloncloud.com/clusters.list",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "List clusters"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Dell EMC, not Google.",
    "name": "cloudonefs.isiloncloud.com/clusters.update",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Update cluster"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Dell EMC, not Google.",
    "name": "cloudonefs.isiloncloud.com/clusters.updateAdvancedSettings",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Update advanced cluster settings"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Dell EMC, not Google.",
    "name": "cloudonefs.isiloncloud.com/fileshares.create",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Create fileshare"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Dell EMC, not Google.",
    "name": "cloudonefs.isiloncloud.com/fileshares.delete",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Delete fileshare"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Dell EMC, not Google.",
    "name": "cloudonefs.isiloncloud.com/fileshares.get",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Get fileshare"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Dell EMC, not Google.",
    "name": "cloudonefs.isiloncloud.com/fileshares.list",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "List fileshares"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Dell EMC, not Google.",
    "name": "cloudonefs.isiloncloud.com/fileshares.update",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Update fileshare"
  },
  {
    "apiDisabled": true,
    "description": "Create an Operation",
    "name": "cloudoptimization.operations.create",
    "stage": "GA",
    "title": "Create an Operation"
  },
  {
    "apiDisabled": true,
    "description": "Get operations",
    "name": "cloudoptimization.operations.get",
    "stage": "GA",
    "title": "Get operations"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalog.targets.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.catalogAssociations.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.catalogAssociations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.catalogAssociations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.catalogAssociations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.producerCatalogs.attachProduct",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.producerCatalogs.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.producerCatalogs.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.producerCatalogs.detachProduct",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.producerCatalogs.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.producerCatalogs.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.producerCatalogs.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.producerCatalogs.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.producerCatalogs.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.products.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.products.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.products.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.products.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.products.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.products.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.products.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.targets.associate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudprivatecatalogproducer.targets.unassociate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudprofiler.profiles.create",
    "stage": "GA",
    "title": "Create Profile"
  },
  {
    "apiDisabled": true,
    "name": "cloudprofiler.profiles.list",
    "stage": "GA",
    "title": "List Profiles"
  },
  {
    "apiDisabled": true,
    "name": "cloudprofiler.profiles.update",
    "stage": "GA",
    "title": "Update Profile"
  },
  {
    "apiDisabled": true,
    "name": "cloudquotas.quotas.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudquotas.quotas.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudscheduler.jobs.create",
    "stage": "GA",
    "title": "Create Job"
  },
  {
    "apiDisabled": true,
    "name": "cloudscheduler.jobs.delete",
    "stage": "GA",
    "title": "Delete Job"
  },
  {
    "apiDisabled": true,
    "name": "cloudscheduler.jobs.enable",
    "stage": "GA",
    "title": "Enable Job"
  },
  {
    "apiDisabled": true,
    "name": "cloudscheduler.jobs.fullView",
    "stage": "GA",
    "title": "Full Job View"
  },
  {
    "apiDisabled": true,
    "name": "cloudscheduler.jobs.get",
    "stage": "GA",
    "title": "Get Job"
  },
  {
    "apiDisabled": true,
    "name": "cloudscheduler.jobs.list",
    "stage": "GA",
    "title": "List Jobs"
  },
  {
    "apiDisabled": true,
    "name": "cloudscheduler.jobs.pause",
    "stage": "GA",
    "title": "Pause Job"
  },
  {
    "apiDisabled": true,
    "name": "cloudscheduler.jobs.run",
    "stage": "GA",
    "title": "Run Job"
  },
  {
    "apiDisabled": true,
    "name": "cloudscheduler.jobs.update",
    "stage": "GA",
    "title": "Update Job"
  },
  {
    "apiDisabled": true,
    "name": "cloudscheduler.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "cloudscheduler.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "description": "Allows generation of Audit Reports.",
    "name": "cloudsecuritycompliance.auditReports.generate",
    "stage": "BETA",
    "title": "Generate Audit Report"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.auditReports.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.auditReports.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Allows generation of Audit Scope Reports.",
    "name": "cloudsecuritycompliance.auditScopeReports.generate",
    "stage": "BETA",
    "title": "Generate Audit Scope Report"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.billingSettings.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.cloudControlDeployments.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.cloudControlDeployments.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.cloudControlDeployments.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.cloudControlDeployments.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.cloudControlDeployments.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.cloudControlPredictions.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.cloudControlPredictions.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.cloudControlPredictions.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.cloudControls.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.cloudControls.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.cloudControls.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.cloudControls.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.cloudControls.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.controlComplianceSummaries.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.controlReports.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.controls.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.controls.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.findingSummaries.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.findings.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.frameworkComplianceReports.aggregate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.frameworkComplianceReports.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.frameworkComplianceSummaries.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.frameworkDeployments.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.frameworkDeployments.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.frameworkDeployments.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.frameworkDeployments.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.frameworkDeployments.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.frameworks.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.frameworks.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.frameworks.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.frameworks.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.frameworks.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Allows enrolling resources of a project/folder/organization for auditing.",
    "name": "cloudsecuritycompliance.locations.enrollResource",
    "stage": "BETA",
    "title": "Enroll Resources in Audit."
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.resourceEnrollmentStatuses.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsecuritycompliance.resourceEnrollmentStatuses.list",
    "stage": "BETA"
  },
  {
    "name": "cloudsecurityscanner.crawledurls.list",
    "stage": "GA",
    "title": "List crawled urls"
  },
  {
    "name": "cloudsecurityscanner.results.get",
    "stage": "GA",
    "title": "Get a scan result"
  },
  {
    "name": "cloudsecurityscanner.results.list",
    "stage": "GA",
    "title": "List scan results"
  },
  {
    "name": "cloudsecurityscanner.scanruns.get",
    "stage": "GA",
    "title": "Get a scanrun"
  },
  {
    "name": "cloudsecurityscanner.scanruns.getSummary",
    "stage": "GA",
    "title": "Get a summary of results of a scanrun"
  },
  {
    "name": "cloudsecurityscanner.scanruns.list",
    "stage": "GA",
    "title": "List scanruns"
  },
  {
    "name": "cloudsecurityscanner.scanruns.stop",
    "stage": "GA",
    "title": "Stop a scanrun"
  },
  {
    "name": "cloudsecurityscanner.scans.create",
    "stage": "GA",
    "title": "Create a scan"
  },
  {
    "name": "cloudsecurityscanner.scans.delete",
    "stage": "GA",
    "title": "Delete a scan"
  },
  {
    "name": "cloudsecurityscanner.scans.get",
    "stage": "GA",
    "title": "Get a scan"
  },
  {
    "name": "cloudsecurityscanner.scans.list",
    "stage": "GA",
    "title": "List scans"
  },
  {
    "name": "cloudsecurityscanner.scans.run",
    "stage": "GA",
    "title": "Run a scan"
  },
  {
    "name": "cloudsecurityscanner.scans.update",
    "stage": "GA",
    "title": "Update a scan"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.backupRuns.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.backupRuns.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.backupRuns.export",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.backupRuns.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.backupRuns.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.backupRuns.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.databases.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.databases.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.databases.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.databases.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.databases.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.addServerCa",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.addServerCertificate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.clone",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.connect",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.createBackupDrBackup",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on Cloud SQL instance"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on Cloud SQL instance"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.demoteMaster",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.executeSql",
    "stage": "GA",
    "title": "Execute SQL queries in databases of the Cloud SQL instance"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.export",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.failover",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.getDiskShrinkConfig",
    "stage": "GA",
    "title": "Get Storage Shrink Config on Cloud SQL instance"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.import",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on Cloud SQL instance"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.listServerCas",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.listServerCertificates",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on Cloud SQL instance"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.login",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.manageEncryption",
    "stage": "GA",
    "title": "Manage instance encryption settings"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.migrate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.performDiskShrink",
    "stage": "GA",
    "title": "Perform Storage Shrink on Cloud SQL instance"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.promoteReplica",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.reencrypt",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.resetReplicaSize",
    "stage": "GA",
    "title": "Reset Replica Size on Cloud SQL instance"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.resetSslConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.restart",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.restoreBackup",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.rotateServerCa",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.rotateServerCertificate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.startReplica",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.stopReplica",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.truncateLog",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.instances.updateBackupDrConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.schemas.view",
    "stage": "GA",
    "title": "View all database schemas of the Cloud SQL instance on Dataplex"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.sslCerts.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.sslCerts.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.sslCerts.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.sslCerts.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.users.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.users.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.users.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.users.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "cloudsql.users.update",
    "stage": "GA"
  },
  {
    "name": "cloudsupport.properties.get",
    "stage": "GA",
    "title": "View support properties"
  },
  {
    "name": "cloudsupport.techCases.create",
    "stage": "GA",
    "title": "Create Tech Support Cases"
  },
  {
    "name": "cloudsupport.techCases.escalate",
    "stage": "GA",
    "title": "Escalate Tech Support Cases"
  },
  {
    "name": "cloudsupport.techCases.get",
    "stage": "GA",
    "title": "Read Tech Support Cases"
  },
  {
    "name": "cloudsupport.techCases.list",
    "stage": "GA",
    "title": "List Tech Support Cases"
  },
  {
    "name": "cloudsupport.techCases.update",
    "stage": "GA",
    "title": "Update Tech Support Cases"
  },
  {
    "apiDisabled": true,
    "name": "cloudtasks.cmekConfig.get",
    "stage": "BETA",
    "title": "Get Customer Managed Encryption Key Config"
  },
  {
    "apiDisabled": true,
    "name": "cloudtasks.cmekConfig.update",
    "stage": "BETA",
    "title": "Update Customer Managed Encryption Key Config"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.create",
    "stage": "BETA",
    "title": "Create Queue"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.delete",
    "stage": "BETA",
    "title": "Delete Queue"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.get",
    "stage": "BETA",
    "title": "Get Queue"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.list",
    "stage": "BETA",
    "title": "List Queues"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.pause",
    "stage": "BETA",
    "title": "Pause Queue"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.purge",
    "stage": "BETA",
    "title": "Purge Queue"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.resume",
    "stage": "BETA",
    "title": "Resume Queue"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.queues.update",
    "stage": "BETA",
    "title": "Update Queue"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.tasks.create",
    "stage": "BETA",
    "title": "Create Task"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.tasks.delete",
    "stage": "BETA",
    "title": "Delete Task"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.tasks.fullView",
    "stage": "BETA",
    "title": "Full Task View"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.tasks.get",
    "stage": "BETA",
    "title": "Get Task"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.tasks.list",
    "stage": "BETA",
    "title": "List Tasks"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtasks.tasks.run",
    "stage": "BETA",
    "title": "Run Task"
  },
  {
    "apiDisabled": true,
    "name": "cloudtestservice.devicesession.cancel",
    "stage": "BETA",
    "title": "Cancel a device session"
  },
  {
    "apiDisabled": true,
    "name": "cloudtestservice.devicesession.create",
    "stage": "BETA",
    "title": "Create a device session"
  },
  {
    "apiDisabled": true,
    "name": "cloudtestservice.devicesession.get",
    "stage": "BETA",
    "title": "Get a device session"
  },
  {
    "apiDisabled": true,
    "name": "cloudtestservice.devicesession.list",
    "stage": "BETA",
    "title": "List device sessions"
  },
  {
    "apiDisabled": true,
    "name": "cloudtestservice.devicesession.update",
    "stage": "BETA",
    "title": "Extend a device session"
  },
  {
    "apiDisabled": true,
    "name": "cloudtestservice.devicesession.use",
    "stage": "BETA",
    "title": "Connect to a device session"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtestservice.environmentcatalog.get",
    "stage": "GA",
    "title": "Get the test environment catalog"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtestservice.matrices.create",
    "stage": "GA",
    "title": "Create a matrix"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtestservice.matrices.get",
    "stage": "GA",
    "title": "Get a matrix"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtestservice.matrices.update",
    "stage": "GA",
    "title": "Update a matrix"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.executions.create",
    "stage": "GA",
    "title": "Create an execution"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.executions.get",
    "stage": "GA",
    "title": "Get an execution"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.executions.list",
    "stage": "GA",
    "title": "List executions"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.executions.update",
    "stage": "GA",
    "title": "Update an execution"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.histories.create",
    "stage": "GA",
    "title": "Create a history"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.histories.get",
    "stage": "GA",
    "title": "Get a history"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.histories.list",
    "stage": "GA",
    "title": "List histories"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.settings.create",
    "stage": "GA",
    "title": "Create or initialize project tool results settings"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.settings.get",
    "stage": "GA",
    "title": "Get project tool results settings"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.settings.update",
    "stage": "GA",
    "title": "Update tool results settings for a project"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.steps.create",
    "stage": "GA",
    "title": "Create a step"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.steps.get",
    "stage": "GA",
    "title": "Get a step"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.steps.list",
    "stage": "GA",
    "title": "List steps"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtoolresults.steps.update",
    "stage": "GA",
    "title": "Update a step"
  },
  {
    "name": "cloudtrace.insights.get",
    "stage": "GA",
    "title": "Get Insights for a Trace"
  },
  {
    "name": "cloudtrace.insights.list",
    "stage": "GA",
    "title": "List Insights for Traces"
  },
  {
    "name": "cloudtrace.stats.get",
    "stage": "GA",
    "title": "Get Stats for a Project"
  },
  {
    "name": "cloudtrace.tasks.create",
    "stage": "GA",
    "title": "Create a Task"
  },
  {
    "name": "cloudtrace.tasks.delete",
    "stage": "GA",
    "title": "Delete a Task"
  },
  {
    "name": "cloudtrace.tasks.get",
    "stage": "GA",
    "title": "Get a Task"
  },
  {
    "name": "cloudtrace.tasks.list",
    "stage": "GA",
    "title": "List Tasks"
  },
  {
    "name": "cloudtrace.traceScopes.create",
    "stage": "BETA"
  },
  {
    "name": "cloudtrace.traceScopes.delete",
    "stage": "BETA"
  },
  {
    "name": "cloudtrace.traceScopes.get",
    "stage": "BETA"
  },
  {
    "name": "cloudtrace.traceScopes.list",
    "stage": "BETA"
  },
  {
    "name": "cloudtrace.traceScopes.update",
    "stage": "BETA"
  },
  {
    "name": "cloudtrace.traces.get",
    "stage": "GA",
    "title": "Get a Trace"
  },
  {
    "name": "cloudtrace.traces.list",
    "stage": "GA",
    "title": "List Traces"
  },
  {
    "name": "cloudtrace.traces.patch",
    "stage": "GA",
    "title": "Patch Traces"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtranslate.adaptiveMtDatasets.create",
    "stage": "BETA",
    "title": "Creates an adaptive machine translation dataset"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtranslate.adaptiveMtDatasets.delete",
    "stage": "BETA",
    "title": "Deletes an adaptive machine translation dataset"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtranslate.adaptiveMtDatasets.get",
    "stage": "BETA",
    "title": "Gets an adaptive machine translation dataset"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtranslate.adaptiveMtDatasets.import",
    "stage": "BETA",
    "title": "Imports an adaptive machine translation file into a dataset"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtranslate.adaptiveMtDatasets.list",
    "stage": "BETA",
    "title": "Lists the adaptive machine translation datasets"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtranslate.adaptiveMtDatasets.predict",
    "stage": "BETA",
    "title": "Translates using an adaptive machine translation dataset"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtranslate.adaptiveMtFiles.delete",
    "stage": "BETA",
    "title": "Deletes an adaptive machine translation file"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtranslate.adaptiveMtFiles.get",
    "stage": "BETA",
    "title": "Gets an adaptive machine translation file"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtranslate.adaptiveMtFiles.list",
    "stage": "BETA",
    "title": "Lists an adaptive machine translation files"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "cloudtranslate.adaptiveMtSentences.list",
    "stage": "BETA",
    "title": "List an adaptive machine translation sentences"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.customModels.create",
    "stage": "GA",
    "title": "Create custom models"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.customModels.delete",
    "stage": "GA",
    "title": "Delete custom models"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.customModels.get",
    "stage": "GA",
    "title": "Get custom models"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.customModels.list",
    "stage": "GA",
    "title": "List custom models"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.customModels.predict",
    "stage": "GA",
    "title": "Predict using custom models"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.datasets.create",
    "stage": "GA",
    "title": "Create datasets"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.datasets.delete",
    "stage": "GA",
    "title": "Delete datasets"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.datasets.export",
    "stage": "GA",
    "title": "Export dataset examples"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.datasets.get",
    "stage": "GA",
    "title": "Get datasets"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.datasets.import",
    "stage": "GA",
    "title": "Import dataset examples"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.datasets.list",
    "stage": "GA",
    "title": "List datasets"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.generalModels.batchDocPredict",
    "stage": "GA",
    "title": "Batch document predict using a general translation model"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.generalModels.batchPredict",
    "stage": "GA",
    "title": "Batch predict using a general translation model"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.generalModels.docPredict",
    "stage": "GA",
    "title": "Document predict using a general translation model"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.generalModels.get",
    "stage": "GA",
    "title": "Get model"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.generalModels.predict",
    "stage": "GA",
    "title": "Predict using a general translation model"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.batchDocPredict",
    "stage": "GA",
    "title": "Batch document predict using a glossary"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.batchPredict",
    "stage": "GA",
    "title": "Batch predict using a glossary"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.create",
    "stage": "GA",
    "title": "Create glossary"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.delete",
    "stage": "GA",
    "title": "Delete glossary"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.docPredict",
    "stage": "GA",
    "title": "Document predict using a glossary"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.get",
    "stage": "GA",
    "title": "Get glossary"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.list",
    "stage": "GA",
    "title": "List glossaries"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.predict",
    "stage": "GA",
    "title": "Predict using a glossary"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaries.update",
    "stage": "GA",
    "title": "Update glossary"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaryentries.create",
    "stage": "GA",
    "title": "Create glossary entry"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaryentries.delete",
    "stage": "GA",
    "title": "Delete glossary entry"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaryentries.get",
    "stage": "GA",
    "title": "Get glossary entry"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaryentries.list",
    "stage": "GA",
    "title": "List glossary entries"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.glossaryentries.update",
    "stage": "GA",
    "title": "Update glossary entry"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.languageDetectionModels.predict",
    "stage": "GA",
    "title": "Detect language"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.locations.get",
    "stage": "GA",
    "title": "Get Translation Location"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.locations.list",
    "stage": "GA",
    "title": "List Translation Locations"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.operations.list",
    "stage": "GA",
    "title": "List Operations"
  },
  {
    "apiDisabled": true,
    "name": "cloudtranslate.operations.wait",
    "stage": "GA",
    "title": "Wait for Operation"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/activeDirectories.create",
    "stage": "BETA",
    "title": "Create Active Directory connection"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/activeDirectories.delete",
    "stage": "BETA",
    "title": "Delete Active Directory connection"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/activeDirectories.get",
    "stage": "BETA",
    "title": "Get Active Directory connection"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/activeDirectories.list",
    "stage": "BETA",
    "title": "List Active Directory connections"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/activeDirectories.update",
    "stage": "BETA",
    "title": "Update Active Directory connection"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/ipRanges.list",
    "stage": "BETA",
    "title": "List IP ranges"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/jobs.get",
    "stage": "BETA",
    "title": "Get job"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/jobs.list",
    "stage": "BETA",
    "title": "List jobs"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/regions.list",
    "stage": "BETA",
    "title": "List regions"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/serviceLevels.list",
    "stage": "BETA",
    "title": "List service levels"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/snapshots.create",
    "stage": "BETA",
    "title": "Create snapshot"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/snapshots.delete",
    "stage": "BETA",
    "title": "Delete snapshot"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/snapshots.get",
    "stage": "BETA",
    "title": "Get snapshot"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/snapshots.list",
    "stage": "BETA",
    "title": "List snapshots"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/snapshots.update",
    "stage": "BETA",
    "title": "Update snapshot"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumereplication.authorize",
    "stage": "BETA",
    "title": "Authorize Volume Replication"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumereplication.break",
    "stage": "BETA",
    "title": "Break Volume Replication"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumereplication.create",
    "stage": "BETA",
    "title": "Create Volume Replication"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumereplication.delete",
    "stage": "BETA",
    "title": "Delete Volume Replication"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumereplication.get",
    "stage": "BETA",
    "title": "Get Volume Replication"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumereplication.list",
    "stage": "BETA",
    "title": "List Volume Replication"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumereplication.release",
    "stage": "BETA",
    "title": "Release Volume Replication"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumereplication.resync",
    "stage": "BETA",
    "title": "Resync Volume Replication"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumereplication.update",
    "stage": "BETA",
    "title": "Update Volume Replication"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumes.create",
    "stage": "BETA",
    "title": "Create volume"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumes.delete",
    "stage": "BETA",
    "title": "Delete volume"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumes.get",
    "stage": "BETA",
    "title": "Get volume"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumes.list",
    "stage": "BETA",
    "title": "List volumes"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "description": "This permission is managed by NetApp, not Google.",
    "name": "cloudvolumesgcp-api.netapp.com/volumes.update",
    "stage": "BETA",
    "title": "Update volume"
  },
  {
    "apiDisabled": true,
    "name": "commerceagreementpublishing.agreements.create",
    "stage": "BETA",
    "title": "Create Agreement"
  },
  {
    "apiDisabled": true,
    "name": "commerceagreementpublishing.agreements.delete",
    "stage": "BETA",
    "title": "Delete Agreement"
  },
  {
    "apiDisabled": true,
    "name": "commerceagreementpublishing.agreements.get",
    "stage": "BETA",
    "title": "Get Agreement"
  },
  {
    "apiDisabled": true,
    "name": "commerceagreementpublishing.agreements.list",
    "stage": "BETA",
    "title": "List Agreements"
  },
  {
    "apiDisabled": true,
    "name": "commerceagreementpublishing.agreements.update",
    "stage": "BETA",
    "title": "Update Agreement"
  },
  {
    "apiDisabled": true,
    "name": "commerceagreementpublishing.documents.create",
    "stage": "BETA",
    "title": "Create AgreementDocument"
  },
  {
    "apiDisabled": true,
    "name": "commerceagreementpublishing.documents.delete",
    "stage": "BETA",
    "title": "Delete AgreementDocument"
  },
  {
    "apiDisabled": true,
    "name": "commerceagreementpublishing.documents.get",
    "stage": "BETA",
    "title": "Get AgreementDocument"
  },
  {
    "apiDisabled": true,
    "name": "commerceagreementpublishing.documents.list",
    "stage": "BETA",
    "title": "List AgreementDocuments"
  },
  {
    "apiDisabled": true,
    "name": "commerceagreementpublishing.documents.update",
    "stage": "BETA",
    "title": "Update AgreementDocument"
  },
  {
    "apiDisabled": true,
    "description": "Get Leadgen Configuration",
    "name": "commercebusinessenablement.leadgenConfig.get",
    "stage": "BETA",
    "title": "Get Leadgen Configuration"
  },
  {
    "apiDisabled": true,
    "description": "Update Leadgen Configuration",
    "name": "commercebusinessenablement.leadgenConfig.update",
    "stage": "BETA",
    "title": "Update Leadgen Configuration"
  },
  {
    "apiDisabled": true,
    "description": "Cancel operation",
    "name": "commercebusinessenablement.operations.cancel",
    "stage": "BETA",
    "title": "Cancel operation"
  },
  {
    "apiDisabled": true,
    "description": "Delete operation",
    "name": "commercebusinessenablement.operations.delete",
    "stage": "BETA",
    "title": "Delete operation"
  },
  {
    "apiDisabled": true,
    "description": "Get operations",
    "name": "commercebusinessenablement.operations.get",
    "stage": "BETA",
    "title": "Get operations"
  },
  {
    "apiDisabled": true,
    "description": "List operations",
    "name": "commercebusinessenablement.operations.list",
    "stage": "BETA",
    "title": "List operations"
  },
  {
    "apiDisabled": true,
    "description": "Get Partner Info",
    "name": "commercebusinessenablement.partnerInfo.get",
    "stage": "BETA",
    "title": "Get Partner Info"
  },
  {
    "apiDisabled": true,
    "description": "Get Payment Configuration",
    "name": "commercebusinessenablement.paymentConfig.get",
    "stage": "BETA",
    "title": "Get Payment Configuration"
  },
  {
    "apiDisabled": true,
    "description": "Update Payment Configuration",
    "name": "commercebusinessenablement.paymentConfig.update",
    "stage": "BETA",
    "title": "Update Payment Configuration"
  },
  {
    "apiDisabled": true,
    "description": "Cancel refund",
    "name": "commercebusinessenablement.refunds.cancel",
    "stage": "BETA",
    "title": "Cancel refund"
  },
  {
    "apiDisabled": true,
    "description": "Calculate the eligible refund amount then create the refund",
    "name": "commercebusinessenablement.refunds.create",
    "stage": "BETA",
    "title": "Calculate the eligible refund amount then create the refund"
  },
  {
    "apiDisabled": true,
    "description": "Delete refund",
    "name": "commercebusinessenablement.refunds.delete",
    "stage": "BETA",
    "title": "Delete refund"
  },
  {
    "apiDisabled": true,
    "description": "Get refund details",
    "name": "commercebusinessenablement.refunds.get",
    "stage": "BETA",
    "title": "Get refund details"
  },
  {
    "apiDisabled": true,
    "description": "List refund",
    "name": "commercebusinessenablement.refunds.list",
    "stage": "BETA",
    "title": "List refund"
  },
  {
    "apiDisabled": true,
    "description": "Start the refund process",
    "name": "commercebusinessenablement.refunds.start",
    "stage": "BETA",
    "title": "Start the refund process"
  },
  {
    "apiDisabled": true,
    "description": "Update refund",
    "name": "commercebusinessenablement.refunds.update",
    "stage": "BETA",
    "title": "Update refund"
  },
  {
    "apiDisabled": true,
    "name": "commerceoffercatalog.agreements.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "commerceoffercatalog.agreements.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "commerceoffercatalog.documents.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "commerceoffercatalog.documents.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "commerceoffercatalog.offers.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Get consumer sharing policy",
    "name": "commerceorggovernance.consumerSharingPolicies.get",
    "stage": "BETA",
    "title": "Get consumer sharing policy"
  },
  {
    "apiDisabled": true,
    "description": "Update existing consumer sharing policy",
    "name": "commerceorggovernance.consumerSharingPolicies.update",
    "stage": "BETA",
    "title": "Update existing consumer sharing policy"
  },
  {
    "apiDisabled": true,
    "description": "Get a service access status",
    "name": "commerceorggovernance.services.get",
    "stage": "BETA",
    "title": "Get a service access status"
  },
  {
    "apiDisabled": true,
    "description": "List all available services for a project",
    "name": "commerceorggovernance.services.list",
    "stage": "BETA",
    "title": "List all available services for a project"
  },
  {
    "apiDisabled": true,
    "description": "Request a service",
    "name": "commerceorggovernance.services.request",
    "stage": "BETA",
    "title": "Request a service"
  },
  {
    "apiDisabled": true,
    "name": "commerceprice.events.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "commerceprice.events.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "commerceprice.privateoffers.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "commerceprice.privateoffers.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "commerceprice.privateoffers.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "commerceprice.privateoffers.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "commerceprice.privateoffers.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "commerceprice.privateoffers.publish",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "commerceprice.privateoffers.sendEmail",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "commerceprice.privateoffers.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "composer.dags.execute",
    "stage": "GA",
    "title": "Execute DAGs"
  },
  {
    "apiDisabled": true,
    "name": "composer.dags.get",
    "stage": "GA",
    "title": "Get DAG"
  },
  {
    "apiDisabled": true,
    "name": "composer.dags.getSourceCode",
    "stage": "GA",
    "title": "Get DAG's source code"
  },
  {
    "apiDisabled": true,
    "name": "composer.dags.list",
    "stage": "GA",
    "title": "List DAGs"
  },
  {
    "apiDisabled": true,
    "name": "composer.environments.create",
    "stage": "GA",
    "title": "Create Composer Environments"
  },
  {
    "apiDisabled": true,
    "name": "composer.environments.delete",
    "stage": "GA",
    "title": "Delete Composer Environments"
  },
  {
    "apiDisabled": true,
    "name": "composer.environments.executeAirflowCommand",
    "stage": "GA",
    "title": "Execute Airflow Command on Composer Environment"
  },
  {
    "apiDisabled": true,
    "name": "composer.environments.get",
    "stage": "GA",
    "title": "Read Composer Environments"
  },
  {
    "apiDisabled": true,
    "name": "composer.environments.list",
    "stage": "GA",
    "title": "List Composer Environments"
  },
  {
    "apiDisabled": true,
    "name": "composer.environments.update",
    "stage": "GA",
    "title": "Update Composer Environments"
  },
  {
    "apiDisabled": true,
    "name": "composer.imageversions.list",
    "stage": "GA",
    "title": "List Composer Image Versions"
  },
  {
    "apiDisabled": true,
    "name": "composer.operations.delete",
    "stage": "GA",
    "title": "Delete Composer operations"
  },
  {
    "apiDisabled": true,
    "name": "composer.operations.get",
    "stage": "GA",
    "title": "Read Composer operations"
  },
  {
    "apiDisabled": true,
    "name": "composer.operations.list",
    "stage": "GA",
    "title": "List Composer operations"
  },
  {
    "apiDisabled": true,
    "name": "composer.userworkloadsconfigmaps.create",
    "stage": "GA",
    "title": "Create Composer User Workloads ConfigMaps"
  },
  {
    "apiDisabled": true,
    "name": "composer.userworkloadsconfigmaps.delete",
    "stage": "GA",
    "title": "Delete Composer User Workloads ConfigMaps"
  },
  {
    "apiDisabled": true,
    "name": "composer.userworkloadsconfigmaps.get",
    "stage": "GA",
    "title": "Read Composer User Workloads ConfigMaps"
  },
  {
    "apiDisabled": true,
    "name": "composer.userworkloadsconfigmaps.list",
    "stage": "GA",
    "title": "List Composer User Workloads ConfigMaps"
  },
  {
    "apiDisabled": true,
    "name": "composer.userworkloadsconfigmaps.update",
    "stage": "GA",
    "title": "Update Composer User Workloads ConfigMaps"
  },
  {
    "apiDisabled": true,
    "name": "composer.userworkloadssecrets.create",
    "stage": "GA",
    "title": "Create Composer User Workloads Secrets"
  },
  {
    "apiDisabled": true,
    "name": "composer.userworkloadssecrets.delete",
    "stage": "GA",
    "title": "Delete Composer User Workloads Secrets"
  },
  {
    "apiDisabled": true,
    "name": "composer.userworkloadssecrets.get",
    "stage": "GA",
    "title": "Read Composer User Workloads Secrets"
  },
  {
    "apiDisabled": true,
    "name": "composer.userworkloadssecrets.list",
    "stage": "GA",
    "title": "List Composer User Workloads Secrets"
  },
  {
    "apiDisabled": true,
    "name": "composer.userworkloadssecrets.update",
    "stage": "GA",
    "title": "Update Composer User Workloads Secrets"
  },
  {
    "apiDisabled": true,
    "name": "compute.acceleratorTypes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.acceleratorTypes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.addresses.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.addresses.createInternal",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.addresses.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.addresses.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.addresses.deleteInternal",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.addresses.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.addresses.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.addresses.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.addresses.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.addresses.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.addresses.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.addresses.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.addresses.useInternal",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.advice.calendarMode",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.autoscalers.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.autoscalers.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.autoscalers.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.autoscalers.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.autoscalers.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.addSignedUrlKey",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.deleteSignedUrlKey",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.setSecurityPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendBuckets.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.addSignedUrlKey",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.deleteSignedUrlKey",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.setSecurityPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.backendServices.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.commitments.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.commitments.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.commitments.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.commitments.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.commitments.updateReservations",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.crossSiteNetworks.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.crossSiteNetworks.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.crossSiteNetworks.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.crossSiteNetworks.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.crossSiteNetworks.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.diskSettings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.diskSettings.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.diskTypes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.diskTypes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.addResourcePolicies",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.createSnapshot",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.removeResourcePolicies",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.resize",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.startAsyncReplication",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.stopAsyncReplication",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.stopGroupAsyncReplication",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.disks.useReadOnly",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.externalVpnGateways.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.externalVpnGateways.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.externalVpnGateways.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.externalVpnGateways.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.externalVpnGateways.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.externalVpnGateways.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.externalVpnGateways.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.externalVpnGateways.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.externalVpnGateways.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.externalVpnGateways.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewallPolicies.cloneRules",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewallPolicies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewallPolicies.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewallPolicies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewallPolicies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewallPolicies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewallPolicies.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewallPolicies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewallPolicies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewallPolicies.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewallPolicies.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewallPolicies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewallPolicies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewalls.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewalls.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewalls.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewalls.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewalls.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewalls.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewalls.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewalls.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.firewalls.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.pscCreate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.pscDelete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.pscSetLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.pscUpdate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.forwardingRules.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.setTarget",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.forwardingRules.use",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.futureReservations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.futureReservations.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.futureReservations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.futureReservations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.futureReservations.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.futureReservations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.futureReservations.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.futureReservations.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalAddresses.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalAddresses.createInternal",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalAddresses.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalAddresses.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalAddresses.deleteInternal",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalAddresses.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalAddresses.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalAddresses.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalAddresses.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalAddresses.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.globalAddresses.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalAddresses.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalForwardingRules.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalForwardingRules.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalForwardingRules.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalForwardingRules.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalForwardingRules.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalForwardingRules.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalForwardingRules.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalForwardingRules.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalForwardingRules.pscCreate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalForwardingRules.pscDelete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalForwardingRules.pscSetLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalForwardingRules.pscUpdate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.globalForwardingRules.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.globalForwardingRules.setTarget",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalForwardingRules.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalNetworkEndpointGroups.attachNetworkEndpoints",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalNetworkEndpointGroups.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalNetworkEndpointGroups.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalNetworkEndpointGroups.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalNetworkEndpointGroups.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalNetworkEndpointGroups.detachNetworkEndpoints",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalNetworkEndpointGroups.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalNetworkEndpointGroups.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalNetworkEndpointGroups.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalNetworkEndpointGroups.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalNetworkEndpointGroups.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalOperations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalOperations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.globalOperations.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalOperations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.globalOperations.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalPublicDelegatedPrefixes.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalPublicDelegatedPrefixes.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalPublicDelegatedPrefixes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalPublicDelegatedPrefixes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.globalPublicDelegatedPrefixes.updatePolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.healthChecks.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.healthChecks.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.healthChecks.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.healthChecks.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.healthChecks.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.healthChecks.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.healthChecks.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.healthChecks.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.healthChecks.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.healthChecks.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.healthChecks.useReadOnly",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpHealthChecks.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpHealthChecks.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpHealthChecks.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpHealthChecks.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpHealthChecks.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpHealthChecks.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpHealthChecks.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpHealthChecks.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpHealthChecks.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.httpHealthChecks.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpHealthChecks.useReadOnly",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpsHealthChecks.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpsHealthChecks.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpsHealthChecks.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpsHealthChecks.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpsHealthChecks.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpsHealthChecks.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpsHealthChecks.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpsHealthChecks.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpsHealthChecks.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.httpsHealthChecks.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.httpsHealthChecks.useReadOnly",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.deprecate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.getFromFamily",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.images.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.images.useReadOnly",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroupManagers.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroupManagers.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroupManagers.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroupManagers.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroupManagers.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroupManagers.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroupManagers.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroupManagers.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroupManagers.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroupManagers.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroups.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroups.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroups.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroups.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroups.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroups.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroups.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroups.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroups.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceGroups.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceSettings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceSettings.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceTemplates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceTemplates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceTemplates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceTemplates.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceTemplates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceTemplates.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instanceTemplates.useReadOnly",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.addAccessConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.addNetworkInterface",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.addResourcePolicies",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.attachDisk",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.deleteAccessConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.deleteNetworkInterface",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.detachDisk",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.getEffectiveFirewalls",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.instances.getGuestAttributes",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.getScreenshot",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.getSerialPortOutput",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.getShieldedInstanceIdentity",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.getShieldedVmIdentity",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.listReferrers",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.osAdminLogin",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.osLogin",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.pscInterfaceCreate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.removeResourcePolicies",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.reset",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.resume",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.sendDiagnosticInterrupt",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.instances.setDeletionProtection",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setDiskAutoDelete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setMachineResources",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setMachineType",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setMetadata",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setMinCpuPlatform",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setName",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setScheduling",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setSecurityPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setServiceAccount",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setShieldedInstanceIntegrityPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setShieldedVmIntegrityPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.setTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.simulateMaintenanceEvent",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.start",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.startWithEncryptionKey",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.stop",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.suspend",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.updateAccessConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.updateDisplayDevice",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.updateNetworkInterface",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.updateSecurity",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.updateShieldedInstanceConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.updateShieldedVmConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instances.useReadOnly",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instantSnapshots.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instantSnapshots.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instantSnapshots.export",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instantSnapshots.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instantSnapshots.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instantSnapshots.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instantSnapshots.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instantSnapshots.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.instantSnapshots.useReadOnly",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectAttachmentGroups.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectAttachmentGroups.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectAttachmentGroups.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectAttachmentGroups.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectAttachmentGroups.patch",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectAttachmentGroups.update",
    "primaryPermission": "compute.interconnectAttachmentGroups.patch",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectAttachments.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectAttachments.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectAttachments.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectAttachments.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.setLabels",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectAttachments.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectGroups.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectGroups.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectGroups.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectGroups.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectGroups.patch",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectGroups.update",
    "primaryPermission": "compute.interconnectGroups.patch",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectLocations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnectLocations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectRemoteLocations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnectRemoteLocations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnects.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnects.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnects.getMacsecConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnects.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.interconnects.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.setLabels",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.interconnects.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.licenseCodes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.licenseCodes.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.licenseCodes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.licenseCodes.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.licenseCodes.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.licenses.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.licenses.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.licenses.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.licenses.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.licenses.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.licenses.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.licenses.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.machineImages.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.machineImages.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.machineImages.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.machineImages.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.machineImages.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.machineImages.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.machineImages.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.machineImages.useReadOnly",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.machineTypes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.machineTypes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.multiMig.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.multiMig.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.multiMig.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.multiMig.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.multiMigMembers.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.multiMigMembers.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkAttachments.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkAttachments.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkAttachments.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkAttachments.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkAttachments.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkAttachments.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkAttachments.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkAttachments.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkAttachments.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkAttachments.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkAttachments.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkAttachments.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEdgeSecurityServices.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEdgeSecurityServices.createTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEdgeSecurityServices.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEdgeSecurityServices.deleteTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEdgeSecurityServices.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEdgeSecurityServices.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEdgeSecurityServices.listEffectiveTags",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEdgeSecurityServices.listTagBindings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEdgeSecurityServices.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEndpointGroups.attachNetworkEndpoints",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEndpointGroups.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEndpointGroups.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEndpointGroups.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEndpointGroups.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEndpointGroups.detachNetworkEndpoints",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEndpointGroups.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEndpointGroups.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEndpointGroups.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEndpointGroups.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkEndpointGroups.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkProfiles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networkProfiles.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.access",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.networks.addPeering",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.getEffectiveFirewalls",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.getRegionEffectiveFirewalls",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.listPeeringRoutes",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.mirror",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.networks.removePeering",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.setFirewallPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.networks.switchToCustomMode",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.networks.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.updatePeering",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.updatePolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.networks.useExternalIp",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeGroups.addNodes",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeGroups.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeGroups.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeGroups.deleteNodes",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeGroups.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeGroups.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeGroups.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeGroups.performMaintenance",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeGroups.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeGroups.setNodeTemplate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeGroups.simulateMaintenanceEvent",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeGroups.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeTemplates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeTemplates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeTemplates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeTemplates.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeTemplates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeTemplates.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeTypes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.nodeTypes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.organizations.disableXpnHost",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.organizations.disableXpnResource",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.organizations.enableXpnHost",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.organizations.enableXpnResource",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.organizations.listAssociations",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.organizations.setFirewallPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.organizations.setSecurityPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.packetMirrorings.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.packetMirrorings.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.packetMirrorings.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.packetMirrorings.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.packetMirrorings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.packetMirrorings.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.packetMirrorings.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.packetMirrorings.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.packetMirrorings.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.previewFeatures.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.previewFeatures.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.previewFeatures.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.projects.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.projects.setCloudArmorTier",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.projects.setCommonInstanceMetadata",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.projects.setDefaultNetworkTier",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.projects.setDefaultServiceAccount",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.projects.setManagedProtectionTier",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.projects.setUsageExportBucket",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicAdvertisedPrefixes.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicAdvertisedPrefixes.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicAdvertisedPrefixes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicAdvertisedPrefixes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicAdvertisedPrefixes.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicAdvertisedPrefixes.updatePolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicDelegatedPrefixes.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicDelegatedPrefixes.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicDelegatedPrefixes.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicDelegatedPrefixes.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicDelegatedPrefixes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicDelegatedPrefixes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicDelegatedPrefixes.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicDelegatedPrefixes.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicDelegatedPrefixes.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicDelegatedPrefixes.updatePolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.publicDelegatedPrefixes.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionBackendServices.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionBackendServices.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionBackendServices.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionBackendServices.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionBackendServices.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionBackendServices.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionBackendServices.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionBackendServices.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionBackendServices.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionBackendServices.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionBackendServices.setSecurityPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionBackendServices.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionBackendServices.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionFirewallPolicies.cloneRules",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionFirewallPolicies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionFirewallPolicies.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionFirewallPolicies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionFirewallPolicies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionFirewallPolicies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionFirewallPolicies.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionFirewallPolicies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionFirewallPolicies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionFirewallPolicies.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionFirewallPolicies.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionFirewallPolicies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionFirewallPolicies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthCheckServices.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthCheckServices.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthCheckServices.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthCheckServices.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthCheckServices.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthCheckServices.use",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthChecks.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthChecks.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthChecks.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthChecks.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthChecks.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthChecks.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthChecks.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthChecks.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthChecks.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthChecks.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionHealthChecks.useReadOnly",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNetworkEndpointGroups.attachNetworkEndpoints",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNetworkEndpointGroups.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNetworkEndpointGroups.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNetworkEndpointGroups.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNetworkEndpointGroups.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNetworkEndpointGroups.detachNetworkEndpoints",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNetworkEndpointGroups.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNetworkEndpointGroups.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNetworkEndpointGroups.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNetworkEndpointGroups.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNetworkEndpointGroups.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNotificationEndpoints.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNotificationEndpoints.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNotificationEndpoints.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNotificationEndpoints.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNotificationEndpoints.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionNotificationEndpoints.use",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionOperations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionOperations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.regionOperations.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionOperations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.regionOperations.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSecurityPolicies.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSecurityPolicies.createTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSecurityPolicies.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSecurityPolicies.deleteTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSecurityPolicies.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSecurityPolicies.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSecurityPolicies.listEffectiveTags",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSecurityPolicies.listTagBindings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSecurityPolicies.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSecurityPolicies.use",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslCertificates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslCertificates.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslCertificates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslCertificates.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslCertificates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslCertificates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslCertificates.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslCertificates.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslPolicies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslPolicies.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslPolicies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslPolicies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslPolicies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslPolicies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslPolicies.listAvailableFeatures",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslPolicies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslPolicies.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslPolicies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionSslPolicies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpProxies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpProxies.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpProxies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpProxies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpProxies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpProxies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpProxies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpProxies.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpProxies.setUrlMap",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpProxies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpsProxies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpsProxies.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpsProxies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpsProxies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpsProxies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpsProxies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpsProxies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpsProxies.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpsProxies.setSslCertificates",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpsProxies.setUrlMap",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpsProxies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetHttpsProxies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetTcpProxies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetTcpProxies.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetTcpProxies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetTcpProxies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetTcpProxies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetTcpProxies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetTcpProxies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetTcpProxies.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionTargetTcpProxies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionUrlMaps.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionUrlMaps.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionUrlMaps.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionUrlMaps.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionUrlMaps.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionUrlMaps.invalidateCache",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionUrlMaps.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionUrlMaps.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionUrlMaps.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionUrlMaps.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionUrlMaps.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regionUrlMaps.validate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regions.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.regions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.reservationBlocks.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.reservationBlocks.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.reservationBlocks.performMaintenance",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.reservationSubBlocks.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.reservationSubBlocks.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.reservationSubBlocks.performMaintenance",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.reservations.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.reservations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.reservations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.reservations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.reservations.performMaintenance",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.reservations.resize",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.reservations.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.resourcePolicies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.resourcePolicies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.resourcePolicies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.resourcePolicies.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.resourcePolicies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.resourcePolicies.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.resourcePolicies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.resourcePolicies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.resourcePolicies.useReadOnly",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.deleteRoutePolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.getRoutePolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.listBgpRoutes",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.listRoutePolicies",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.updateRoutePolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routers.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routes.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routes.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routes.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routes.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routes.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.routes.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.securityPolicies.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.securityPolicies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.securityPolicies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.securityPolicies.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.securityPolicies.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.securityPolicies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.serviceAttachments.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.serviceAttachments.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.serviceAttachments.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.serviceAttachments.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.serviceAttachments.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.serviceAttachments.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.serviceAttachments.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.serviceAttachments.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.serviceAttachments.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.serviceAttachments.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.serviceAttachments.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.serviceAttachments.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshotSettings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshotSettings.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshots.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshots.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshots.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshots.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshots.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshots.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshots.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshots.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshots.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshots.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshots.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.snapshots.useReadOnly",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.spotAssistants.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.sslCertificates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.sslCertificates.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.sslCertificates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.sslCertificates.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.sslCertificates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.sslCertificates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.sslCertificates.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.sslCertificates.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.sslPolicies.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.sslPolicies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.listAvailableFeatures",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.sslPolicies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.sslPolicies.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.sslPolicies.use",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.storagePools.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.storagePools.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.storagePools.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.storagePools.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.storagePools.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.storagePools.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.storagePools.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.storagePools.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.expandIpCidrRange",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.mirror",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.setPrivateIpGoogleAccess",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.useExternalIp",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.subnetworks.usePeerMigration",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetGrpcProxies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetGrpcProxies.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetGrpcProxies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetGrpcProxies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetGrpcProxies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetGrpcProxies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetGrpcProxies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetGrpcProxies.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetGrpcProxies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetGrpcProxies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpProxies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpProxies.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpProxies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpProxies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpProxies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpProxies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpProxies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpProxies.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpProxies.setUrlMap",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpProxies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpProxies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.setCertificateMap",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.setQuicOverride",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.setSslCertificates",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.targetHttpsProxies.setSslPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.setUrlMap",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetHttpsProxies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetInstances.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetInstances.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetInstances.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetInstances.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetInstances.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetInstances.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetInstances.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetInstances.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetInstances.setSecurityPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetInstances.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.addHealthCheck",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.addInstance",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.removeHealthCheck",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.removeInstance",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.setSecurityPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetPools.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.setBackendService",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.setCertificateMap",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.setProxyHeader",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.setSslCertificates",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.setSslPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetSslProxies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetTcpProxies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetTcpProxies.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetTcpProxies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetTcpProxies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetTcpProxies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetTcpProxies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetTcpProxies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetTcpProxies.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetTcpProxies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetTcpProxies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetVpnGateways.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetVpnGateways.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetVpnGateways.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetVpnGateways.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetVpnGateways.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetVpnGateways.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetVpnGateways.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetVpnGateways.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.targetVpnGateways.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.targetVpnGateways.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.urlMaps.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.urlMaps.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.invalidateCache",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.urlMaps.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.urlMaps.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.urlMaps.validate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnGateways.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnGateways.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnGateways.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnGateways.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnGateways.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnGateways.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnGateways.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnGateways.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnGateways.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnGateways.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnTunnels.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnTunnels.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnTunnels.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnTunnels.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnTunnels.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnTunnels.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnTunnels.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.vpnTunnels.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.vpnTunnels.setLabels",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.wireGroups.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.wireGroups.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.wireGroups.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.wireGroups.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.wireGroups.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "compute.zoneOperations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.zoneOperations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.zoneOperations.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.zoneOperations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "compute.zoneOperations.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.zones.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "compute.zones.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "confidentialcomputing.challenges.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "confidentialcomputing.challenges.verify",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "confidentialcomputing.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "confidentialcomputing.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "config.artifacts.import",
    "stage": "BETA",
    "title": "Import artifacts"
  },
  {
    "apiDisabled": true,
    "name": "config.deployments.create",
    "stage": "BETA",
    "title": "Create Deployment"
  },
  {
    "apiDisabled": true,
    "name": "config.deployments.delete",
    "stage": "BETA",
    "title": "Delete Deployment"
  },
  {
    "apiDisabled": true,
    "name": "config.deployments.deleteState",
    "stage": "BETA",
    "title": "Delete State"
  },
  {
    "apiDisabled": true,
    "name": "config.deployments.get",
    "stage": "BETA",
    "title": "Get Deployment"
  },
  {
    "apiDisabled": true,
    "name": "config.deployments.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Deployment"
  },
  {
    "apiDisabled": true,
    "name": "config.deployments.getLock",
    "stage": "BETA",
    "title": "Get Lock Info"
  },
  {
    "apiDisabled": true,
    "name": "config.deployments.getState",
    "stage": "BETA",
    "title": "Export State"
  },
  {
    "apiDisabled": true,
    "name": "config.deployments.list",
    "stage": "BETA",
    "title": "List Deployment"
  },
  {
    "apiDisabled": true,
    "name": "config.deployments.lock",
    "stage": "BETA",
    "title": "Lock State"
  },
  {
    "apiDisabled": true,
    "name": "config.deployments.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Deployment"
  },
  {
    "apiDisabled": true,
    "name": "config.deployments.unlock",
    "stage": "BETA",
    "title": "Unlock State"
  },
  {
    "apiDisabled": true,
    "name": "config.deployments.update",
    "stage": "BETA",
    "title": "Update Deployment"
  },
  {
    "apiDisabled": true,
    "name": "config.deployments.updateState",
    "stage": "BETA",
    "title": "Import State"
  },
  {
    "apiDisabled": true,
    "name": "config.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "config.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "config.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "config.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "config.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "config.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "config.previews.create",
    "stage": "BETA",
    "title": "Create Preview"
  },
  {
    "apiDisabled": true,
    "name": "config.previews.delete",
    "stage": "BETA",
    "title": "Delete Preview"
  },
  {
    "apiDisabled": true,
    "name": "config.previews.export",
    "stage": "BETA",
    "title": "Export Preview results"
  },
  {
    "apiDisabled": true,
    "name": "config.previews.get",
    "stage": "BETA",
    "title": "Get Preview"
  },
  {
    "apiDisabled": true,
    "name": "config.previews.list",
    "stage": "BETA",
    "title": "List Previews"
  },
  {
    "apiDisabled": true,
    "name": "config.previews.upload",
    "stage": "BETA",
    "title": "Upload Preview results"
  },
  {
    "apiDisabled": true,
    "name": "config.resourcechanges.get",
    "stage": "BETA",
    "title": "Get Resource Change"
  },
  {
    "apiDisabled": true,
    "name": "config.resourcechanges.list",
    "stage": "BETA",
    "title": "List Resource Changes"
  },
  {
    "apiDisabled": true,
    "name": "config.resourcedrifts.get",
    "stage": "BETA",
    "title": "Get Resource Drift"
  },
  {
    "apiDisabled": true,
    "name": "config.resourcedrifts.list",
    "stage": "BETA",
    "title": "List Resource Drifts"
  },
  {
    "apiDisabled": true,
    "name": "config.resources.get",
    "stage": "BETA",
    "title": "Get Resource"
  },
  {
    "apiDisabled": true,
    "name": "config.resources.list",
    "stage": "BETA",
    "title": "List Resource"
  },
  {
    "apiDisabled": true,
    "name": "config.revisions.get",
    "stage": "BETA",
    "title": "Get Revision"
  },
  {
    "apiDisabled": true,
    "name": "config.revisions.getState",
    "stage": "BETA",
    "title": "Export State"
  },
  {
    "apiDisabled": true,
    "name": "config.revisions.list",
    "stage": "BETA",
    "title": "List Revision"
  },
  {
    "apiDisabled": true,
    "name": "config.terraformversions.get",
    "stage": "BETA",
    "title": "Get a Terraform Version"
  },
  {
    "apiDisabled": true,
    "name": "config.terraformversions.list",
    "stage": "BETA",
    "title": "List Terraform Versions"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.fleetPackages.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.fleetPackages.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.fleetPackages.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.fleetPackages.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.fleetPackages.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.releases.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.releases.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.releases.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.releases.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.releases.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.resourceBundles.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.resourceBundles.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.resourceBundles.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.resourceBundles.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.resourceBundles.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.rollouts.abort",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.rollouts.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.rollouts.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.rollouts.resume",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "configdelivery.rollouts.suspend",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "connectors.actions.execute",
    "stage": "GA",
    "title": "Execute Action."
  },
  {
    "apiDisabled": true,
    "name": "connectors.actions.list",
    "stage": "GA",
    "title": "List Actions."
  },
  {
    "apiDisabled": true,
    "name": "connectors.connections.create",
    "stage": "GA",
    "title": "Create Connection"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connections.delete",
    "stage": "GA",
    "title": "Delete Connection"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connections.executeSqlQuery",
    "stage": "GA",
    "title": "Execute Sql Query"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connections.generateOpenAPISpec",
    "stage": "GA",
    "title": "Generate OpenAPI Spec"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connections.get",
    "stage": "GA",
    "title": "Get Connection"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connections.getConnectionSchemaMetadata",
    "stage": "GA",
    "title": "Get Connection Runtime Schema"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connections.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Connection"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connections.getRuntimeActionSchema",
    "stage": "GA",
    "title": "Get Action Metadata"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connections.getRuntimeEntitySchema",
    "stage": "GA",
    "title": "Get Entity Metadata"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connections.list",
    "stage": "GA",
    "title": "List Connections"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connections.listenEvent",
    "stage": "GA",
    "title": "Listen to events"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connections.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Connection"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connections.update",
    "stage": "GA",
    "title": "Update Connection"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connectors.get",
    "stage": "GA",
    "title": "Get Connector"
  },
  {
    "apiDisabled": true,
    "name": "connectors.connectors.list",
    "stage": "GA",
    "title": "List Connectors"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectorVersions.create",
    "stage": "GA",
    "title": "Create Custom Connector Versions"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectorVersions.delete",
    "stage": "GA",
    "title": "Delete Custom Connector Versions"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectorVersions.get",
    "stage": "GA",
    "title": "Get Custom Connector Versions"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectorVersions.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Custom Connector Versions"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectorVersions.list",
    "stage": "GA",
    "title": "List Custom Connector Versions"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectorVersions.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Custom Connector Versions"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectorVersions.update",
    "stage": "GA",
    "title": "Update Custom Connector Versions"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectors.create",
    "stage": "GA",
    "title": "Create CustomConnector"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectors.delete",
    "stage": "GA",
    "title": "Delete CustomConnector"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectors.get",
    "stage": "GA",
    "title": "Get CustomConnector"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectors.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on CustomConnector"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectors.list",
    "stage": "GA",
    "title": "List CustomConnectors"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectors.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on CustomConnector"
  },
  {
    "apiDisabled": true,
    "name": "connectors.customConnectors.update",
    "stage": "GA",
    "title": "Update CustomConnector"
  },
  {
    "apiDisabled": true,
    "name": "connectors.endpointAttachments.create",
    "stage": "GA",
    "title": "Create EndpointAttachment"
  },
  {
    "apiDisabled": true,
    "name": "connectors.endpointAttachments.delete",
    "stage": "GA",
    "title": "Delete EndpointAttachment"
  },
  {
    "apiDisabled": true,
    "name": "connectors.endpointAttachments.get",
    "stage": "GA",
    "title": "Get EndpointAttachment"
  },
  {
    "apiDisabled": true,
    "name": "connectors.endpointAttachments.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on EndpointAttachment"
  },
  {
    "apiDisabled": true,
    "name": "connectors.endpointAttachments.list",
    "stage": "GA",
    "title": "List EndpointAttachments"
  },
  {
    "apiDisabled": true,
    "name": "connectors.endpointAttachments.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on EndpointAttachment"
  },
  {
    "apiDisabled": true,
    "name": "connectors.endpointAttachments.update",
    "stage": "GA",
    "title": "Update EndpointAttachment"
  },
  {
    "apiDisabled": true,
    "name": "connectors.entities.create",
    "stage": "GA",
    "title": "Create Entity."
  },
  {
    "apiDisabled": true,
    "name": "connectors.entities.delete",
    "stage": "GA",
    "title": "Delete Entity."
  },
  {
    "apiDisabled": true,
    "name": "connectors.entities.deleteEntitiesWithConditions",
    "stage": "GA",
    "title": "Delete Entities With Conditions."
  },
  {
    "apiDisabled": true,
    "name": "connectors.entities.get",
    "stage": "GA",
    "title": "Get Entity."
  },
  {
    "apiDisabled": true,
    "name": "connectors.entities.list",
    "stage": "GA",
    "title": "List Entities."
  },
  {
    "apiDisabled": true,
    "name": "connectors.entities.update",
    "stage": "GA",
    "title": "Update Entity."
  },
  {
    "apiDisabled": true,
    "name": "connectors.entities.updateEntitiesWithConditions",
    "stage": "GA",
    "title": "Update Entities With Conditions."
  },
  {
    "apiDisabled": true,
    "name": "connectors.entityTypes.list",
    "stage": "GA",
    "title": "List Entity Types."
  },
  {
    "apiDisabled": true,
    "name": "connectors.eventSubscriptions.create",
    "stage": "GA",
    "title": "Create Event Subscription"
  },
  {
    "apiDisabled": true,
    "name": "connectors.eventSubscriptions.delete",
    "stage": "GA",
    "title": "Delete Event Subscription"
  },
  {
    "apiDisabled": true,
    "name": "connectors.eventSubscriptions.get",
    "stage": "GA",
    "title": "Get Event Subscription"
  },
  {
    "apiDisabled": true,
    "name": "connectors.eventSubscriptions.list",
    "stage": "GA",
    "title": "List Event Subscriptions"
  },
  {
    "apiDisabled": true,
    "name": "connectors.eventSubscriptions.update",
    "stage": "GA",
    "title": "Update Event Subscription"
  },
  {
    "apiDisabled": true,
    "name": "connectors.eventtypes.get",
    "stage": "GA",
    "title": "Get Event Type"
  },
  {
    "apiDisabled": true,
    "name": "connectors.eventtypes.list",
    "stage": "GA",
    "title": "List Event Types"
  },
  {
    "apiDisabled": true,
    "name": "connectors.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "connectors.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "connectors.managedZones.create",
    "stage": "GA",
    "title": "Create Managed Zone"
  },
  {
    "apiDisabled": true,
    "name": "connectors.managedZones.delete",
    "stage": "GA",
    "title": "Delete Managed Zone"
  },
  {
    "apiDisabled": true,
    "name": "connectors.managedZones.get",
    "stage": "GA",
    "title": "Get Managed Zone"
  },
  {
    "apiDisabled": true,
    "name": "connectors.managedZones.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Managed Zone"
  },
  {
    "apiDisabled": true,
    "name": "connectors.managedZones.list",
    "stage": "GA",
    "title": "List Managed Zones"
  },
  {
    "apiDisabled": true,
    "name": "connectors.managedZones.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Managed Zone"
  },
  {
    "apiDisabled": true,
    "name": "connectors.managedZones.update",
    "stage": "GA",
    "title": "Update Managed Zone"
  },
  {
    "apiDisabled": true,
    "name": "connectors.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "connectors.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "connectors.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "connectors.operations.list",
    "stage": "GA",
    "title": "List Operations"
  },
  {
    "apiDisabled": true,
    "name": "connectors.providers.get",
    "stage": "GA",
    "title": "Get Provider"
  },
  {
    "apiDisabled": true,
    "name": "connectors.providers.list",
    "stage": "GA",
    "title": "List Providers"
  },
  {
    "apiDisabled": true,
    "name": "connectors.regionalSettings.get",
    "stage": "GA",
    "title": "Get Regional Settings."
  },
  {
    "apiDisabled": true,
    "name": "connectors.regionalSettings.update",
    "stage": "GA",
    "title": "Update Regional Settings."
  },
  {
    "apiDisabled": true,
    "name": "connectors.runtimeconfig.get",
    "stage": "GA",
    "title": "Get Runtime Config"
  },
  {
    "apiDisabled": true,
    "name": "connectors.schemaMetadata.refresh",
    "stage": "GA",
    "title": "Refresh Connection Schema Metadata."
  },
  {
    "apiDisabled": true,
    "name": "connectors.settings.get",
    "stage": "GA",
    "title": "Get Settings."
  },
  {
    "apiDisabled": true,
    "name": "connectors.settings.update",
    "stage": "GA",
    "title": "Update Settings."
  },
  {
    "apiDisabled": true,
    "name": "connectors.versions.get",
    "stage": "GA",
    "title": "Get Connector Version"
  },
  {
    "apiDisabled": true,
    "name": "connectors.versions.list",
    "stage": "GA",
    "title": "List Connector Versions"
  },
  {
    "apiDisabled": true,
    "name": "consumerprocurement.consents.allowProjectGrant",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "consumerprocurement.consents.check",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "consumerprocurement.consents.grant",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "consumerprocurement.consents.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "consumerprocurement.consents.revoke",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "consumerprocurement.entitlements.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "consumerprocurement.entitlements.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "consumerprocurement.freeTrials.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "consumerprocurement.freeTrials.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "consumerprocurement.freeTrials.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "contactcenteraiplatform.contactCenters.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "contactcenteraiplatform.contactCenters.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "contactcenteraiplatform.contactCenters.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "contactcenteraiplatform.contactCenters.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "contactcenteraiplatform.contactCenters.program",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "contactcenteraiplatform.contactCenters.queryQuota",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "contactcenteraiplatform.contactCenters.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "contactcenteraiplatform.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "contactcenteraiplatform.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "contactcenteraiplatform.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "contactcenteraiplatform.operations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "contactcenteraiplatform.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "contactcenteraiplatform.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Create Analyses",
    "name": "contactcenterinsights.analyses.create",
    "stage": "GA",
    "title": "Create Analyses"
  },
  {
    "apiDisabled": true,
    "description": "Delete Analyses",
    "name": "contactcenterinsights.analyses.delete",
    "stage": "GA",
    "title": "Delete Analyses"
  },
  {
    "apiDisabled": true,
    "description": "Get Analyses",
    "name": "contactcenterinsights.analyses.get",
    "stage": "GA",
    "title": "Get Analyses"
  },
  {
    "apiDisabled": true,
    "description": "List Analyses",
    "name": "contactcenterinsights.analyses.list",
    "stage": "GA",
    "title": "List Analyses"
  },
  {
    "apiDisabled": true,
    "description": "Create Analysis Rule",
    "name": "contactcenterinsights.analysisRules.create",
    "stage": "GA",
    "title": "Create Analysis Rule"
  },
  {
    "apiDisabled": true,
    "description": "Delete Analysis Rule",
    "name": "contactcenterinsights.analysisRules.delete",
    "stage": "GA",
    "title": "Delete Analysis Rule"
  },
  {
    "apiDisabled": true,
    "description": "Get Analysis Rule",
    "name": "contactcenterinsights.analysisRules.get",
    "stage": "GA",
    "title": "Get Analysis Rule"
  },
  {
    "apiDisabled": true,
    "description": "List Analysis Rules",
    "name": "contactcenterinsights.analysisRules.list",
    "stage": "GA",
    "title": "List Analysis Rules"
  },
  {
    "apiDisabled": true,
    "description": "Update Analysis Rule",
    "name": "contactcenterinsights.analysisRules.update",
    "stage": "GA",
    "title": "Update Analysis Rule"
  },
  {
    "description": "Create Assessment Rule",
    "name": "contactcenterinsights.assessmentRules.create",
    "stage": "BETA",
    "title": "Create Assessment Rule"
  },
  {
    "description": "Delete Assessment Rule",
    "name": "contactcenterinsights.assessmentRules.delete",
    "stage": "BETA",
    "title": "Delete Assessment Rule"
  },
  {
    "description": "Get Assessment Rule",
    "name": "contactcenterinsights.assessmentRules.get",
    "stage": "BETA",
    "title": "Get Assessment Rule"
  },
  {
    "description": "List Assessment Rules",
    "name": "contactcenterinsights.assessmentRules.list",
    "stage": "BETA",
    "title": "List Assessment Rules"
  },
  {
    "description": "Update Assessment Rule",
    "name": "contactcenterinsights.assessmentRules.update",
    "stage": "BETA",
    "title": "Update Assessment Rule"
  },
  {
    "description": "Appeal Assessment",
    "name": "contactcenterinsights.assessments.appeal",
    "stage": "BETA",
    "title": "Appeal Assessment"
  },
  {
    "description": "Create Assessment",
    "name": "contactcenterinsights.assessments.create",
    "stage": "BETA",
    "title": "Create Assessment"
  },
  {
    "description": "Delete Assessment",
    "name": "contactcenterinsights.assessments.delete",
    "stage": "BETA",
    "title": "Delete Assessment"
  },
  {
    "description": "Finalize Assessment",
    "name": "contactcenterinsights.assessments.finalize",
    "stage": "BETA",
    "title": "Finalize Assessment"
  },
  {
    "description": "Get Assessment",
    "name": "contactcenterinsights.assessments.get",
    "stage": "BETA",
    "title": "Get Assessment"
  },
  {
    "description": "List Assessments",
    "name": "contactcenterinsights.assessments.list",
    "stage": "BETA",
    "title": "List Assessments"
  },
  {
    "description": "Publish Assessment",
    "name": "contactcenterinsights.assessments.publish",
    "stage": "BETA",
    "title": "Publish Assessment"
  },
  {
    "description": "Create AuthorizedView Analyses",
    "name": "contactcenterinsights.authorizedAnalyses.create",
    "stage": "BETA",
    "title": "Create AuthorizedView Analyses"
  },
  {
    "description": "Delete AuthorizedView Analyses",
    "name": "contactcenterinsights.authorizedAnalyses.delete",
    "stage": "BETA",
    "title": "Delete AuthorizedView Analyses"
  },
  {
    "description": "Get AuthorizedView Analyses",
    "name": "contactcenterinsights.authorizedAnalyses.get",
    "stage": "BETA",
    "title": "Get AuthorizedView Analyses"
  },
  {
    "description": "List AuthorizedView Analyses",
    "name": "contactcenterinsights.authorizedAnalyses.list",
    "stage": "BETA",
    "title": "List AuthorizedView Analyses"
  },
  {
    "description": "Create Authorized View Conversations",
    "name": "contactcenterinsights.authorizedConversations.create",
    "stage": "BETA",
    "title": "Create Authorized View Conversations"
  },
  {
    "description": "Delete Authorized View Conversations",
    "name": "contactcenterinsights.authorizedConversations.delete",
    "stage": "BETA",
    "title": "Delete Authorized View Conversations"
  },
  {
    "description": "Get Authorized View Conversations",
    "name": "contactcenterinsights.authorizedConversations.get",
    "stage": "BETA",
    "title": "Get Authorized View Conversations"
  },
  {
    "description": "List Authorized View Conversations",
    "name": "contactcenterinsights.authorizedConversations.list",
    "stage": "BETA",
    "title": "List Authorized View Conversations"
  },
  {
    "description": "Update Authorized View Conversations",
    "name": "contactcenterinsights.authorizedConversations.update",
    "stage": "BETA",
    "title": "Update Authorized View Conversations"
  },
  {
    "description": "Upload Authorized View Conversations",
    "name": "contactcenterinsights.authorizedConversations.upload",
    "stage": "BETA",
    "title": "Upload Authorized View Conversations"
  },
  {
    "description": "Create Authorized View Feedback Label",
    "name": "contactcenterinsights.authorizedFeedbackLabels.create",
    "stage": "BETA",
    "title": "Create Authorized View Feedback Label"
  },
  {
    "description": "Delete Authorized View Feedback Label",
    "name": "contactcenterinsights.authorizedFeedbackLabels.delete",
    "stage": "BETA",
    "title": "Delete Authorized View Feedback Label"
  },
  {
    "description": "Download Authorized View Feedback Label",
    "name": "contactcenterinsights.authorizedFeedbackLabels.download",
    "stage": "BETA",
    "title": "Download Authorized View Feedback Label"
  },
  {
    "description": "Get Authorized View Feedback Label",
    "name": "contactcenterinsights.authorizedFeedbackLabels.get",
    "stage": "BETA",
    "title": "Get Authorized View Feedback Label"
  },
  {
    "description": "List Authorized View Feedback Labels",
    "name": "contactcenterinsights.authorizedFeedbackLabels.list",
    "stage": "BETA",
    "title": "List Authorized View Feedback Labels"
  },
  {
    "description": "Update Authorized View Feedback Label",
    "name": "contactcenterinsights.authorizedFeedbackLabels.update",
    "stage": "BETA",
    "title": "Update Authorized View Feedback Label"
  },
  {
    "description": "Upload Authorized View Feedback Label",
    "name": "contactcenterinsights.authorizedFeedbackLabels.upload",
    "stage": "BETA",
    "title": "Upload Authorized View Feedback Label"
  },
  {
    "description": "Get Operations",
    "name": "contactcenterinsights.authorizedOperations.get",
    "stage": "BETA",
    "title": "Get AuthorizedView Operations"
  },
  {
    "description": "List AuthorizedView Operations",
    "name": "contactcenterinsights.authorizedOperations.list",
    "stage": "BETA",
    "title": "List AuthorizedView Operations"
  },
  {
    "description": "Create an Authorized View Set",
    "name": "contactcenterinsights.authorizedViewSets.create",
    "stage": "BETA",
    "title": "Create an Authorized View Set"
  },
  {
    "description": "Delete an Authorized View Set",
    "name": "contactcenterinsights.authorizedViewSets.delete",
    "stage": "BETA",
    "title": "Delete an Authorized View Set"
  },
  {
    "description": "Get an Authorized View Set",
    "name": "contactcenterinsights.authorizedViewSets.get",
    "stage": "BETA",
    "title": "Get an Authorized View Set"
  },
  {
    "description": "List Authorized View Sets",
    "name": "contactcenterinsights.authorizedViewSets.list",
    "stage": "BETA",
    "title": "List Authorized View Sets"
  },
  {
    "description": "Update an Authorized View Set",
    "name": "contactcenterinsights.authorizedViewSets.update",
    "stage": "BETA",
    "title": "Update an Authorized View Set"
  },
  {
    "description": "Create an Authorized View",
    "name": "contactcenterinsights.authorizedViews.create",
    "stage": "BETA",
    "title": "Create an Authorized View"
  },
  {
    "description": "Delete an Authorized View",
    "name": "contactcenterinsights.authorizedViews.delete",
    "stage": "BETA",
    "title": "Delete an Authorized View"
  },
  {
    "description": "Get an Authorized View",
    "name": "contactcenterinsights.authorizedViews.get",
    "stage": "BETA",
    "title": "Get an Authorized View"
  },
  {
    "description": "Get access control policy for Authorized Views",
    "name": "contactcenterinsights.authorizedViews.getIamPolicy",
    "stage": "BETA",
    "title": "Get access control policy for Authorized Views"
  },
  {
    "description": "List Authorized Views",
    "name": "contactcenterinsights.authorizedViews.list",
    "stage": "BETA",
    "title": "List Authorized Views"
  },
  {
    "description": "Set access control policy for Authorized Views",
    "name": "contactcenterinsights.authorizedViews.setIamPolicy",
    "stage": "BETA",
    "title": "Set access control policy for Authorized Views"
  },
  {
    "description": "Update an Authorized View",
    "name": "contactcenterinsights.authorizedViews.update",
    "stage": "BETA",
    "title": "Update an Authorized View"
  },
  {
    "apiDisabled": true,
    "description": "Create Conversations",
    "name": "contactcenterinsights.conversations.create",
    "stage": "GA",
    "title": "Create Conversations"
  },
  {
    "apiDisabled": true,
    "description": "Delete Conversations",
    "name": "contactcenterinsights.conversations.delete",
    "stage": "GA",
    "title": "Delete Conversations"
  },
  {
    "apiDisabled": true,
    "description": "Export Conversation Data",
    "name": "contactcenterinsights.conversations.export",
    "stage": "GA",
    "title": "Export Conversation Data"
  },
  {
    "apiDisabled": true,
    "description": "Get Conversations",
    "name": "contactcenterinsights.conversations.get",
    "stage": "GA",
    "title": "Get Conversations"
  },
  {
    "apiDisabled": true,
    "description": "List Conversations",
    "name": "contactcenterinsights.conversations.list",
    "stage": "GA",
    "title": "List Conversations"
  },
  {
    "apiDisabled": true,
    "description": "Update Conversations",
    "name": "contactcenterinsights.conversations.update",
    "stage": "GA",
    "title": "Update Conversations"
  },
  {
    "apiDisabled": true,
    "description": "Upload Conversations",
    "name": "contactcenterinsights.conversations.upload",
    "stage": "GA",
    "title": "Upload Conversations"
  },
  {
    "description": "Create Analyses for a conversation in a Dataset",
    "name": "contactcenterinsights.datasetAnalyses.create",
    "stage": "BETA",
    "title": "Create Analyses for a conversation in a Dataset"
  },
  {
    "description": "Delete Analyses for a conversation in a Dataset",
    "name": "contactcenterinsights.datasetAnalyses.delete",
    "stage": "BETA",
    "title": "Delete Analyses for a conversation in a Dataset"
  },
  {
    "description": "Get Analyses for a conversation in a Dataset",
    "name": "contactcenterinsights.datasetAnalyses.get",
    "stage": "BETA",
    "title": "Get Analyses for a conversation in a Dataset"
  },
  {
    "description": "List Analyses for a conversation in a Dataset",
    "name": "contactcenterinsights.datasetAnalyses.list",
    "stage": "BETA",
    "title": "List Analyses for a conversation in a Dataset"
  },
  {
    "description": "Create Conversations in Dataset",
    "name": "contactcenterinsights.datasetConversations.create",
    "stage": "BETA",
    "title": "Create Conversations in Dataset"
  },
  {
    "description": "Delete Conversations in a Dataset",
    "name": "contactcenterinsights.datasetConversations.delete",
    "stage": "BETA",
    "title": "Delete Conversations in a Dataset"
  },
  {
    "description": "Export Conversation Data from a Dataset",
    "name": "contactcenterinsights.datasetConversations.export",
    "stage": "BETA",
    "title": "Export Conversation Data from a Dataset"
  },
  {
    "description": "Get Conversations in a Dataset",
    "name": "contactcenterinsights.datasetConversations.get",
    "stage": "BETA",
    "title": "Get Conversations in a Dataset"
  },
  {
    "description": "List Conversations in a Dataset",
    "name": "contactcenterinsights.datasetConversations.list",
    "stage": "BETA",
    "title": "List Conversations in a Dataset"
  },
  {
    "description": "Update Conversations in a Dataset",
    "name": "contactcenterinsights.datasetConversations.update",
    "stage": "BETA",
    "title": "Update Conversations in a Dataset"
  },
  {
    "description": "Upload Conversations to a Dataset",
    "name": "contactcenterinsights.datasetConversations.upload",
    "stage": "BETA",
    "title": "Upload Conversations to a Dataset"
  },
  {
    "description": "Create Feedback Label",
    "name": "contactcenterinsights.datasetFeedbackLabels.create",
    "stage": "BETA",
    "title": "Create Feedback Label"
  },
  {
    "description": "Delete Feedback Label",
    "name": "contactcenterinsights.datasetFeedbackLabels.delete",
    "stage": "BETA",
    "title": "Delete Feedback Label"
  },
  {
    "description": "Download Feedback Labels",
    "name": "contactcenterinsights.datasetFeedbackLabels.download",
    "stage": "BETA",
    "title": "Download Feedback Labels"
  },
  {
    "description": "Get Feedback Label",
    "name": "contactcenterinsights.datasetFeedbackLabels.get",
    "stage": "BETA",
    "title": "Get Feedback Label"
  },
  {
    "description": "List Feedback Labels",
    "name": "contactcenterinsights.datasetFeedbackLabels.list",
    "stage": "BETA",
    "title": "List Feedback Labels"
  },
  {
    "description": "Update Feedback Label",
    "name": "contactcenterinsights.datasetFeedbackLabels.update",
    "stage": "BETA",
    "title": "Update Feedback Label"
  },
  {
    "description": "Upload Feedback Labels",
    "name": "contactcenterinsights.datasetFeedbackLabels.upload",
    "stage": "BETA",
    "title": "Upload Feedback Labels"
  },
  {
    "apiDisabled": true,
    "description": "Create Dataset",
    "name": "contactcenterinsights.datasets.create",
    "stage": "GA",
    "title": "Create Dataset"
  },
  {
    "apiDisabled": true,
    "description": "Delete Datasets",
    "name": "contactcenterinsights.datasets.delete",
    "stage": "GA",
    "title": "Delete Datasets"
  },
  {
    "apiDisabled": true,
    "description": "Get Dataset",
    "name": "contactcenterinsights.datasets.get",
    "stage": "GA",
    "title": "Get Dataset"
  },
  {
    "apiDisabled": true,
    "description": "List Datasets",
    "name": "contactcenterinsights.datasets.list",
    "stage": "GA",
    "title": "List Datasets"
  },
  {
    "apiDisabled": true,
    "description": "Update Datasets",
    "name": "contactcenterinsights.datasets.update",
    "stage": "GA",
    "title": "Update Datasets"
  },
  {
    "description": "Delete Discovery",
    "name": "contactcenterinsights.discoveries.delete",
    "stage": "BETA",
    "title": "Delete Discovery"
  },
  {
    "description": "Generate Discovery",
    "name": "contactcenterinsights.discoveries.generate",
    "stage": "BETA",
    "title": "Generate Discovery"
  },
  {
    "description": "Get Discovery",
    "name": "contactcenterinsights.discoveries.get",
    "stage": "BETA",
    "title": "Get Discovery"
  },
  {
    "description": "List Discoveries",
    "name": "contactcenterinsights.discoveries.list",
    "stage": "BETA",
    "title": "List Discoveries"
  },
  {
    "description": "Update Discovery",
    "name": "contactcenterinsights.discoveries.update",
    "stage": "BETA",
    "title": "Update Discovery"
  },
  {
    "description": "Get DiscoveryResult",
    "name": "contactcenterinsights.discoveryResults.get",
    "stage": "BETA",
    "title": "Get DiscoveryResult"
  },
  {
    "description": "List DiscoveryResults",
    "name": "contactcenterinsights.discoveryResults.list",
    "stage": "BETA",
    "title": "List DiscoveryResults"
  },
  {
    "description": "Create DiscoveryRevision",
    "name": "contactcenterinsights.discoveryRevisions.create",
    "stage": "BETA",
    "title": "Create DiscoveryRevision"
  },
  {
    "description": "Get DiscoveryRevision",
    "name": "contactcenterinsights.discoveryRevisions.get",
    "stage": "BETA",
    "title": "Get DiscoveryRevision"
  },
  {
    "description": "List DiscoveryRevisions",
    "name": "contactcenterinsights.discoveryRevisions.list",
    "stage": "BETA",
    "title": "List DiscoveryRevisions"
  },
  {
    "description": "Delete DiscoveryWorkspace",
    "name": "contactcenterinsights.discoveryWorkspaces.delete",
    "stage": "BETA",
    "title": "Delete DiscoveryWorkspace"
  },
  {
    "description": "Deploy DiscoveryWorkspace",
    "name": "contactcenterinsights.discoveryWorkspaces.deploy",
    "stage": "BETA",
    "title": "Deploy DiscoveryWorkspace"
  },
  {
    "description": "Get DiscoveryWorkspace",
    "name": "contactcenterinsights.discoveryWorkspaces.get",
    "stage": "BETA",
    "title": "Get DiscoveryWorkspace"
  },
  {
    "description": "List DiscoveryWorkspaces",
    "name": "contactcenterinsights.discoveryWorkspaces.list",
    "stage": "BETA",
    "title": "List DiscoveryWorkspaces"
  },
  {
    "description": "Undeploy DiscoveryWorkspace",
    "name": "contactcenterinsights.discoveryWorkspaces.undeploy",
    "stage": "BETA",
    "title": "Undeploy DiscoveryWorkspace"
  },
  {
    "apiDisabled": true,
    "description": "Get encryption specification",
    "name": "contactcenterinsights.encryptionSpecs.get",
    "stage": "GA",
    "title": "Get EncryptionSpec"
  },
  {
    "apiDisabled": true,
    "description": "Initialize encryption specification",
    "name": "contactcenterinsights.encryptionSpecs.initialize",
    "stage": "GA",
    "title": "Initialize EncryptionSpec"
  },
  {
    "apiDisabled": true,
    "description": "Delete FAQ Entries",
    "name": "contactcenterinsights.faqEntries.delete",
    "stage": "GA",
    "title": "Delete FAQ Entries"
  },
  {
    "apiDisabled": true,
    "description": "Get FAQ Entries",
    "name": "contactcenterinsights.faqEntries.get",
    "stage": "GA",
    "title": "Get FAQ Entries"
  },
  {
    "apiDisabled": true,
    "description": "List FAQ Entries",
    "name": "contactcenterinsights.faqEntries.list",
    "stage": "GA",
    "title": "List FAQ Entries"
  },
  {
    "apiDisabled": true,
    "description": "Update FAQ Entries",
    "name": "contactcenterinsights.faqEntries.update",
    "stage": "GA",
    "title": "Update FAQ Entries"
  },
  {
    "apiDisabled": true,
    "description": "Create FAQ Models",
    "name": "contactcenterinsights.faqModels.create",
    "stage": "GA",
    "title": "Create FAQ Models"
  },
  {
    "apiDisabled": true,
    "description": "Delete FAQ Models",
    "name": "contactcenterinsights.faqModels.delete",
    "stage": "GA",
    "title": "Delete FAQ Models"
  },
  {
    "apiDisabled": true,
    "description": "Get FAQ Models",
    "name": "contactcenterinsights.faqModels.get",
    "stage": "GA",
    "title": "Get FAQ Models"
  },
  {
    "apiDisabled": true,
    "description": "List FAQ Models",
    "name": "contactcenterinsights.faqModels.list",
    "stage": "GA",
    "title": "List FAQ Models"
  },
  {
    "apiDisabled": true,
    "description": "Update FAQ Models",
    "name": "contactcenterinsights.faqModels.update",
    "stage": "GA",
    "title": "Update FAQ Models"
  },
  {
    "apiDisabled": true,
    "description": "Create Feedback Label",
    "name": "contactcenterinsights.feedbackLabels.create",
    "stage": "GA",
    "title": "Create Feedback Label"
  },
  {
    "apiDisabled": true,
    "description": "Delete Feedback Label",
    "name": "contactcenterinsights.feedbackLabels.delete",
    "stage": "GA",
    "title": "Delete Feedback Label"
  },
  {
    "apiDisabled": true,
    "description": "Download Feedback Labels",
    "name": "contactcenterinsights.feedbackLabels.download",
    "stage": "GA",
    "title": "Download Feedback Labels"
  },
  {
    "apiDisabled": true,
    "description": "Get Feedback Label",
    "name": "contactcenterinsights.feedbackLabels.get",
    "stage": "GA",
    "title": "Get Feedback Label"
  },
  {
    "apiDisabled": true,
    "description": "List Feedback Labels",
    "name": "contactcenterinsights.feedbackLabels.list",
    "stage": "GA",
    "title": "List Feedback Labels"
  },
  {
    "apiDisabled": true,
    "description": "Update Feedback Label",
    "name": "contactcenterinsights.feedbackLabels.update",
    "stage": "GA",
    "title": "Update Feedback Label"
  },
  {
    "apiDisabled": true,
    "description": "Upload Feedback Labels",
    "name": "contactcenterinsights.feedbackLabels.upload",
    "stage": "GA",
    "title": "Upload Feedback Labels"
  },
  {
    "apiDisabled": true,
    "description": "Create Issue Models",
    "name": "contactcenterinsights.issueModels.create",
    "stage": "GA",
    "title": "Create Issue Models"
  },
  {
    "apiDisabled": true,
    "description": "Delete Issue Models",
    "name": "contactcenterinsights.issueModels.delete",
    "stage": "GA",
    "title": "Delete Issue Models"
  },
  {
    "apiDisabled": true,
    "description": "Deploy Issue Models",
    "name": "contactcenterinsights.issueModels.deploy",
    "stage": "GA",
    "title": "Deploy Issue Models"
  },
  {
    "apiDisabled": true,
    "description": "Export Issue Models",
    "name": "contactcenterinsights.issueModels.export",
    "stage": "GA",
    "title": "Export Issue Models"
  },
  {
    "apiDisabled": true,
    "description": "Get Issue Models",
    "name": "contactcenterinsights.issueModels.get",
    "stage": "GA",
    "title": "Get Issue Models"
  },
  {
    "apiDisabled": true,
    "description": "Import Issue Models",
    "name": "contactcenterinsights.issueModels.import",
    "stage": "GA",
    "title": "Import Issue Models"
  },
  {
    "apiDisabled": true,
    "description": "List Issue Models",
    "name": "contactcenterinsights.issueModels.list",
    "stage": "GA",
    "title": "List Issue Models"
  },
  {
    "apiDisabled": true,
    "description": "Undeploy Issue Models",
    "name": "contactcenterinsights.issueModels.undeploy",
    "stage": "GA",
    "title": "Undeploy Issue Models"
  },
  {
    "apiDisabled": true,
    "description": "Update Issue Models",
    "name": "contactcenterinsights.issueModels.update",
    "stage": "GA",
    "title": "Update Issue Models"
  },
  {
    "apiDisabled": true,
    "description": "Create Issues",
    "name": "contactcenterinsights.issues.create",
    "stage": "GA",
    "title": "Create Issues"
  },
  {
    "apiDisabled": true,
    "description": "Delete Issue",
    "name": "contactcenterinsights.issues.delete",
    "stage": "GA",
    "title": "Delete Issue"
  },
  {
    "apiDisabled": true,
    "description": "Get Issues",
    "name": "contactcenterinsights.issues.get",
    "stage": "GA",
    "title": "Get Issues"
  },
  {
    "apiDisabled": true,
    "description": "List Issues",
    "name": "contactcenterinsights.issues.list",
    "stage": "GA",
    "title": "List Issues"
  },
  {
    "apiDisabled": true,
    "description": "Update Issues",
    "name": "contactcenterinsights.issues.update",
    "stage": "GA",
    "title": "Update Issues"
  },
  {
    "description": "Create Note",
    "name": "contactcenterinsights.notes.create",
    "stage": "BETA",
    "title": "Create Note"
  },
  {
    "description": "Delete Note",
    "name": "contactcenterinsights.notes.delete",
    "stage": "BETA",
    "title": "Delete Note"
  },
  {
    "description": "List Notes",
    "name": "contactcenterinsights.notes.list",
    "stage": "BETA",
    "title": "List Notes"
  },
  {
    "description": "Update Note",
    "name": "contactcenterinsights.notes.update",
    "stage": "BETA",
    "title": "Update Note"
  },
  {
    "apiDisabled": true,
    "description": "Cancel an Operation",
    "name": "contactcenterinsights.operations.cancel",
    "stage": "GA",
    "title": "Cancel an Operation"
  },
  {
    "apiDisabled": true,
    "description": "Get Operations",
    "name": "contactcenterinsights.operations.get",
    "stage": "GA",
    "title": "Get Operations"
  },
  {
    "apiDisabled": true,
    "description": "List Operations",
    "name": "contactcenterinsights.operations.list",
    "stage": "GA",
    "title": "List Operations"
  },
  {
    "apiDisabled": true,
    "description": "Create Phrase Matchers",
    "name": "contactcenterinsights.phraseMatchers.create",
    "stage": "GA",
    "title": "Create Phrase Matchers"
  },
  {
    "apiDisabled": true,
    "description": "Delete Phrase Matchers",
    "name": "contactcenterinsights.phraseMatchers.delete",
    "stage": "GA",
    "title": "Delete Phrase Matchers"
  },
  {
    "apiDisabled": true,
    "description": "Get Phrase Matchers",
    "name": "contactcenterinsights.phraseMatchers.get",
    "stage": "GA",
    "title": "Get Phrase Matchers"
  },
  {
    "apiDisabled": true,
    "description": "List Phrase Matchers",
    "name": "contactcenterinsights.phraseMatchers.list",
    "stage": "GA",
    "title": "List Phrase Matchers"
  },
  {
    "apiDisabled": true,
    "description": "Update Phrase Matchers",
    "name": "contactcenterinsights.phraseMatchers.update",
    "stage": "GA",
    "title": "Update Phrase Matchers"
  },
  {
    "description": "Create QA Question Tag",
    "name": "contactcenterinsights.qaQuestionTags.create",
    "stage": "BETA",
    "title": "Create QA Question Tag"
  },
  {
    "description": "Delete QA Question Tag",
    "name": "contactcenterinsights.qaQuestionTags.delete",
    "stage": "BETA",
    "title": "Delete QA Question Tag"
  },
  {
    "description": "Get QA Question Tag",
    "name": "contactcenterinsights.qaQuestionTags.get",
    "stage": "BETA",
    "title": "Get QA Question Tag"
  },
  {
    "description": "List QA Questions Tags",
    "name": "contactcenterinsights.qaQuestionTags.list",
    "stage": "BETA",
    "title": "List QA Question Tags"
  },
  {
    "description": "Update QA Question Tag",
    "name": "contactcenterinsights.qaQuestionTags.update",
    "stage": "BETA",
    "title": "Update QA Question Tag"
  },
  {
    "apiDisabled": true,
    "description": "Create QA Question",
    "name": "contactcenterinsights.qaQuestions.create",
    "stage": "GA",
    "title": "Create QA Question"
  },
  {
    "apiDisabled": true,
    "description": "Delete QA Question",
    "name": "contactcenterinsights.qaQuestions.delete",
    "stage": "GA",
    "title": "Delete QA Question"
  },
  {
    "apiDisabled": true,
    "description": "Get QA Questions",
    "name": "contactcenterinsights.qaQuestions.get",
    "stage": "GA",
    "title": "Get QA Questions"
  },
  {
    "apiDisabled": true,
    "description": "List QA Questions",
    "name": "contactcenterinsights.qaQuestions.list",
    "stage": "GA",
    "title": "List QA Questions"
  },
  {
    "apiDisabled": true,
    "description": "Update QA Question",
    "name": "contactcenterinsights.qaQuestions.update",
    "stage": "GA",
    "title": "Update QA Question"
  },
  {
    "apiDisabled": true,
    "description": "Create QA Scorecard Revision",
    "name": "contactcenterinsights.qaScorecardRevisions.create",
    "stage": "GA",
    "title": "Create QA Scorecard Revision"
  },
  {
    "apiDisabled": true,
    "description": "Delete QA Scorecard Revisions",
    "name": "contactcenterinsights.qaScorecardRevisions.delete",
    "stage": "GA",
    "title": "Delete QA Scorecard Revisions"
  },
  {
    "apiDisabled": true,
    "description": "Deploy QA Scorecard Revision",
    "name": "contactcenterinsights.qaScorecardRevisions.deploy",
    "stage": "GA",
    "title": "Deploy QA Scorecard Revision"
  },
  {
    "apiDisabled": true,
    "description": "Get QA Scorecard Revisions",
    "name": "contactcenterinsights.qaScorecardRevisions.get",
    "stage": "GA",
    "title": "Get QA Scorecard Revisions"
  },
  {
    "apiDisabled": true,
    "description": "List QA Scorecard Revisions",
    "name": "contactcenterinsights.qaScorecardRevisions.list",
    "stage": "GA",
    "title": "List QA Scorecard Revisions"
  },
  {
    "apiDisabled": true,
    "description": "Fine Tune QA Scorecard Revision",
    "name": "contactcenterinsights.qaScorecardRevisions.tune",
    "stage": "GA",
    "title": "Fine Tune QA Scorecard Revision"
  },
  {
    "description": "Undeploy QA Scorecard Revision",
    "name": "contactcenterinsights.qaScorecardRevisions.undeploy",
    "stage": "BETA",
    "title": "Undeploy QA Scorecard Revision"
  },
  {
    "apiDisabled": true,
    "description": "Create QA Scorecard",
    "name": "contactcenterinsights.qaScorecards.create",
    "stage": "GA",
    "title": "Create QA Scorecard"
  },
  {
    "apiDisabled": true,
    "description": "Delete QA Scorecard",
    "name": "contactcenterinsights.qaScorecards.delete",
    "stage": "GA",
    "title": "Delete QA Scorecard"
  },
  {
    "apiDisabled": true,
    "description": "Get QA Scorecards",
    "name": "contactcenterinsights.qaScorecards.get",
    "stage": "GA",
    "title": "Get QA Scorecards"
  },
  {
    "apiDisabled": true,
    "description": "List QA Scorecards",
    "name": "contactcenterinsights.qaScorecards.list",
    "stage": "GA",
    "title": "List QA Scorecards"
  },
  {
    "apiDisabled": true,
    "description": "Update QA Scorecard",
    "name": "contactcenterinsights.qaScorecards.update",
    "stage": "GA",
    "title": "Update QA Scorecard"
  },
  {
    "apiDisabled": true,
    "description": "Get settings",
    "name": "contactcenterinsights.settings.get",
    "stage": "GA",
    "title": "Get Settings"
  },
  {
    "apiDisabled": true,
    "description": "Update settings",
    "name": "contactcenterinsights.settings.update",
    "stage": "GA",
    "title": "Update Settings"
  },
  {
    "apiDisabled": true,
    "description": "Create View",
    "name": "contactcenterinsights.views.create",
    "stage": "GA",
    "title": "Create View"
  },
  {
    "apiDisabled": true,
    "description": "Delete Views",
    "name": "contactcenterinsights.views.delete",
    "stage": "GA",
    "title": "Delete Views"
  },
  {
    "apiDisabled": true,
    "description": "Get View",
    "name": "contactcenterinsights.views.get",
    "stage": "GA",
    "title": "Get View"
  },
  {
    "apiDisabled": true,
    "description": "List Views",
    "name": "contactcenterinsights.views.list",
    "stage": "GA",
    "title": "List Views"
  },
  {
    "apiDisabled": true,
    "description": "Update Views",
    "name": "contactcenterinsights.views.update",
    "stage": "GA",
    "title": "Update Views"
  },
  {
    "apiDisabled": true,
    "description": "List Visibility Labels",
    "name": "contactcenterinsights.visibilityLabels.list",
    "stage": "GA",
    "title": "List Visibility Labels"
  },
  {
    "apiDisabled": true,
    "name": "container.apiServices.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.apiServices.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.apiServices.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.apiServices.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.apiServices.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.apiServices.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.apiServices.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.auditSinks.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.auditSinks.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.auditSinks.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.auditSinks.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.auditSinks.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.backendConfigs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.backendConfigs.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.backendConfigs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.backendConfigs.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.backendConfigs.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.bindings.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.bindings.delete",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.bindings.get",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.bindings.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.bindings.update",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "container.certificateSigningRequests.approve",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.certificateSigningRequests.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.certificateSigningRequests.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.certificateSigningRequests.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.certificateSigningRequests.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.certificateSigningRequests.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.certificateSigningRequests.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.certificateSigningRequests.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusterRoleBindings.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusterRoleBindings.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusterRoleBindings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusterRoleBindings.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusterRoleBindings.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusterRoles.bind",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusterRoles.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusterRoles.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.clusterRoles.escalate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusterRoles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusterRoles.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusterRoles.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusters.connect",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusters.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusters.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusters.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusters.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusters.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusters.getCredentials",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.clusters.impersonate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusters.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusters.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusters.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.clusters.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.componentStatuses.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.componentStatuses.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.configMaps.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.configMaps.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.configMaps.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.configMaps.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.configMaps.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.controllerRevisions.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.controllerRevisions.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.controllerRevisions.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.controllerRevisions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.controllerRevisions.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.cronJobs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.cronJobs.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.cronJobs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.cronJobs.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.cronJobs.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.cronJobs.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.cronJobs.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiDrivers.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiDrivers.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiDrivers.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiDrivers.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiDrivers.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiNodeInfos.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiNodeInfos.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiNodeInfos.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiNodeInfos.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiNodeInfos.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiNodes.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiNodes.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiNodes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiNodes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.csiNodes.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.customResourceDefinitions.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.customResourceDefinitions.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.customResourceDefinitions.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.customResourceDefinitions.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.customResourceDefinitions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.customResourceDefinitions.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.customResourceDefinitions.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.daemonSets.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.daemonSets.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.daemonSets.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.daemonSets.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.daemonSets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.daemonSets.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.daemonSets.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.deployments.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.deployments.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.deployments.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.deployments.getScale",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.deployments.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.deployments.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.deployments.rollback",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.deployments.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.deployments.updateScale",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.deployments.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.endpointSlices.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.endpointSlices.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.endpointSlices.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.endpointSlices.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.endpointSlices.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.endpoints.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.endpoints.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.endpoints.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.endpoints.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.endpoints.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.events.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.events.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.events.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.events.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.events.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.frontendConfigs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.frontendConfigs.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.frontendConfigs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.frontendConfigs.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.frontendConfigs.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.horizontalPodAutoscalers.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.horizontalPodAutoscalers.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.horizontalPodAutoscalers.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.horizontalPodAutoscalers.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.horizontalPodAutoscalers.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.horizontalPodAutoscalers.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.horizontalPodAutoscalers.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.hostServiceAgent.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.ingresses.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.ingresses.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.ingresses.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.ingresses.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.ingresses.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.ingresses.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.ingresses.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.initializerConfigurations.create",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.initializerConfigurations.delete",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.initializerConfigurations.get",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.initializerConfigurations.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.initializerConfigurations.update",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "container.jobs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.jobs.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.jobs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.jobs.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.jobs.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.jobs.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.jobs.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.leases.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.leases.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.leases.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.leases.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.leases.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.limitRanges.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.limitRanges.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.limitRanges.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.limitRanges.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.limitRanges.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.localSubjectAccessReviews.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.localSubjectAccessReviews.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "container.managedCertificates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.managedCertificates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.managedCertificates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.managedCertificates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.managedCertificates.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.mutatingWebhookConfigurations.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.mutatingWebhookConfigurations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.mutatingWebhookConfigurations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.mutatingWebhookConfigurations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.mutatingWebhookConfigurations.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.namespaces.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.namespaces.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.namespaces.finalize",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "container.namespaces.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.namespaces.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.namespaces.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.namespaces.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.namespaces.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.networkPolicies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.networkPolicies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.networkPolicies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.networkPolicies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.networkPolicies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.nodes.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.nodes.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.nodes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.nodes.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.nodes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.nodes.proxy",
    "stage": "GA",
    "title": "Proxy Requests to a Node"
  },
  {
    "apiDisabled": true,
    "name": "container.nodes.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.nodes.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumeClaims.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumeClaims.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumeClaims.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumeClaims.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumeClaims.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumeClaims.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumeClaims.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumes.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumes.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumes.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumes.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.persistentVolumes.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.petSets.create",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.petSets.delete",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.petSets.get",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.petSets.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.petSets.update",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.petSets.updateStatus",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "container.podDisruptionBudgets.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podDisruptionBudgets.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podDisruptionBudgets.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podDisruptionBudgets.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podDisruptionBudgets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podDisruptionBudgets.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podDisruptionBudgets.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.podPresets.create",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.podPresets.delete",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.podPresets.get",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.podPresets.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.podPresets.update",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "container.podSecurityPolicies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podSecurityPolicies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podSecurityPolicies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podSecurityPolicies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podSecurityPolicies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.podSecurityPolicies.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podTemplates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podTemplates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podTemplates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podTemplates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.podTemplates.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.pods.attach",
    "stage": "GA",
    "title": "Attach to a Running Container in a Pod"
  },
  {
    "apiDisabled": true,
    "name": "container.pods.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.pods.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.pods.evict",
    "stage": "GA",
    "title": "Evict a Pod"
  },
  {
    "apiDisabled": true,
    "name": "container.pods.exec",
    "stage": "GA",
    "title": "Execute Commands in a Pod"
  },
  {
    "apiDisabled": true,
    "name": "container.pods.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.pods.getLogs",
    "stage": "GA",
    "title": "Get Logs from a Pod"
  },
  {
    "apiDisabled": true,
    "name": "container.pods.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.pods.initialize",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "container.pods.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.pods.portForward",
    "stage": "GA",
    "title": "Forward Port(s) to a Pod"
  },
  {
    "apiDisabled": true,
    "name": "container.pods.proxy",
    "stage": "GA",
    "title": "Proxy Requests to a Pod"
  },
  {
    "apiDisabled": true,
    "name": "container.pods.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.pods.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.priorityClasses.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.priorityClasses.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.priorityClasses.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.priorityClasses.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.priorityClasses.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicaSets.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicaSets.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicaSets.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicaSets.getScale",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicaSets.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicaSets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicaSets.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicaSets.updateScale",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicaSets.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicationControllers.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicationControllers.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicationControllers.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicationControllers.getScale",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicationControllers.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicationControllers.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicationControllers.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicationControllers.updateScale",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.replicationControllers.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.resourceQuotas.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.resourceQuotas.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.resourceQuotas.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.resourceQuotas.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.resourceQuotas.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.resourceQuotas.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.resourceQuotas.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.roleBindings.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.roleBindings.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.roleBindings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.roleBindings.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.roleBindings.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.roles.bind",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.roles.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.roles.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.roles.escalate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "container.roles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.roles.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.roles.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.runtimeClasses.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.runtimeClasses.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.runtimeClasses.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.runtimeClasses.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.runtimeClasses.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.scheduledJobs.create",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.scheduledJobs.delete",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.scheduledJobs.get",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.scheduledJobs.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.scheduledJobs.update",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.scheduledJobs.updateStatus",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "container.secrets.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.secrets.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.secrets.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.secrets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.secrets.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.selfSubjectAccessReviews.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.selfSubjectAccessReviews.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "container.selfSubjectRulesReviews.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.serviceAccounts.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.serviceAccounts.createToken",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.serviceAccounts.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.serviceAccounts.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.serviceAccounts.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.serviceAccounts.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.services.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.services.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.services.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.services.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.services.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.services.proxy",
    "stage": "GA",
    "title": "Proxy Requests to a Service"
  },
  {
    "apiDisabled": true,
    "name": "container.services.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.services.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.statefulSets.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.statefulSets.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.statefulSets.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.statefulSets.getScale",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.statefulSets.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.statefulSets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.statefulSets.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.statefulSets.updateScale",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.statefulSets.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageClasses.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageClasses.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageClasses.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageClasses.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageClasses.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageStates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageStates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageStates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageStates.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageStates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageStates.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageStates.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageVersionMigrations.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageVersionMigrations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageVersionMigrations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageVersionMigrations.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageVersionMigrations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageVersionMigrations.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.storageVersionMigrations.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.subjectAccessReviews.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.subjectAccessReviews.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "container.thirdPartyObjects.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.thirdPartyObjects.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.thirdPartyObjects.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.thirdPartyObjects.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.thirdPartyObjects.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.thirdPartyResources.create",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.thirdPartyResources.delete",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.thirdPartyResources.get",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.thirdPartyResources.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "container.thirdPartyResources.update",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "container.tokenReviews.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.updateInfos.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.updateInfos.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.updateInfos.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.updateInfos.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.updateInfos.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.validatingWebhookConfigurations.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.validatingWebhookConfigurations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.validatingWebhookConfigurations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.validatingWebhookConfigurations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.validatingWebhookConfigurations.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeAttachments.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeAttachments.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeAttachments.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeAttachments.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeAttachments.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeAttachments.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeAttachments.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshotClasses.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshotClasses.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshotClasses.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshotClasses.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshotClasses.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshotContents.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshotContents.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshotContents.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshotContents.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshotContents.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshotContents.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshotContents.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshots.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshots.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshots.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshots.getStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshots.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshots.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "container.volumeSnapshots.updateStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.notes.attachOccurrence",
    "stage": "GA",
    "title": "Attach Container Analysis Note to Occurrence"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.notes.create",
    "stage": "GA",
    "title": "Create Container Analysis Note"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.notes.delete",
    "stage": "GA",
    "title": "Delete Container Analysis Note"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.notes.get",
    "stage": "GA",
    "title": "Read Container Analysis Note"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.notes.getIamPolicy",
    "stage": "GA",
    "title": "Get Container Analysis Note IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.notes.list",
    "stage": "GA",
    "title": "List Notes"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.notes.listOccurrences",
    "stage": "GA",
    "title": "List Occurrences for a Container Analysis Note"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.notes.setIamPolicy",
    "stage": "GA",
    "title": "Set Container Analysis Note IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.notes.update",
    "stage": "GA",
    "title": "Update Container Analysis Note"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.occurrences.create",
    "stage": "GA",
    "title": "Create Container Analysis Occurrence"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.occurrences.delete",
    "stage": "GA",
    "title": "Delete Container Analysis Occurrence"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.occurrences.get",
    "stage": "GA",
    "title": "Read Occurrence"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.occurrences.getIamPolicy",
    "stage": "GA",
    "title": "Get Container Analysis Occurrence IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.occurrences.list",
    "stage": "GA",
    "title": "List Container Analysis Occurrences"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.occurrences.setIamPolicy",
    "stage": "GA",
    "title": "Set Container Analysis Occurrence IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "containeranalysis.occurrences.update",
    "stage": "GA",
    "title": "Update Container Analysis Occurrence"
  },
  {
    "apiDisabled": true,
    "name": "containersecurity.clusterSummaries.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "containersecurity.findings.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "containersecurity.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "containersecurity.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.corpora.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.corpora.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.corpora.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.corpora.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.corpora.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.dataExportJobs.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.dataExportJobs.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.documentSchemas.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.documentSchemas.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.documentSchemas.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.documentSchemas.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.documentSchemas.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.documents.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.documents.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.documents.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.documents.getIamPolicy",
    "stage": "GA",
    "title": "GetIamPolicy"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.documents.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.documents.setIamPolicy",
    "stage": "GA",
    "title": "SetIamPolicy"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.documents.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.links.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.links.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.links.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.links.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.locations.getStatus",
    "stage": "GA",
    "title": "GetStatus"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.locations.initialize",
    "stage": "GA",
    "title": "Initialize"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.operations.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.rawDocuments.download",
    "stage": "GA",
    "title": "Download"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.rawDocuments.upload",
    "stage": "GA",
    "title": "Upload"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.ruleSets.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.ruleSets.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.ruleSets.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.ruleSets.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.ruleSets.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.synonymSets.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.synonymSets.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.synonymSets.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.synonymSets.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "contentwarehouse.synonymSets.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "description": "List database resource groups",
    "name": "databasecenter.databaseGroups.list",
    "stage": "GA",
    "title": "List database resource groups"
  },
  {
    "apiDisabled": true,
    "description": "Database resource fleet invehealthntory stats",
    "name": "databasecenter.fleetHealthStats.list",
    "stage": "GA",
    "title": "Database resource fleet health stats"
  },
  {
    "apiDisabled": true,
    "description": "Database resource fleet inventory stats",
    "name": "databasecenter.fleetStats.list",
    "stage": "GA",
    "title": "Database resource fleet inventory stats"
  },
  {
    "apiDisabled": true,
    "description": "List locations associated with database resources",
    "name": "databasecenter.locations.list",
    "stage": "GA",
    "title": "List locations supported by database center"
  },
  {
    "apiDisabled": true,
    "description": "List products supported by database center",
    "name": "databasecenter.products.list",
    "stage": "GA",
    "title": "List products supported by database center"
  },
  {
    "apiDisabled": true,
    "description": "List user labels associated with database resources",
    "name": "databasecenter.userLabels.list",
    "stage": "GA",
    "title": "List user labels associated with database resources"
  },
  {
    "apiDisabled": true,
    "description": "List user tags associated with database resources",
    "name": "databasecenter.userTags.list",
    "stage": "GA",
    "title": "List user tags associated with database resources"
  },
  {
    "apiDisabled": true,
    "description": "Active Queries",
    "name": "databaseinsights.activeQueries.fetch",
    "stage": "BETA",
    "title": "Active Queries"
  },
  {
    "apiDisabled": true,
    "description": "Terminates the active query running in the database",
    "name": "databaseinsights.activeQuery.terminate",
    "stage": "BETA",
    "title": "Terminate Active Queries"
  },
  {
    "apiDisabled": true,
    "description": "Activity Summary",
    "name": "databaseinsights.activitySummary.fetch",
    "stage": "BETA",
    "title": "Activity Summary"
  },
  {
    "apiDisabled": true,
    "description": "Aggregated Events",
    "name": "databaseinsights.aggregatedEvents.query",
    "stage": "BETA",
    "title": "Aggregated Events"
  },
  {
    "apiDisabled": true,
    "description": "Query Aggregated Stats",
    "name": "databaseinsights.aggregatedStats.query",
    "stage": "BETA",
    "title": "Query Aggregated Stats"
  },
  {
    "apiDisabled": true,
    "description": "Cluster Events",
    "name": "databaseinsights.clusterEvents.query",
    "stage": "BETA",
    "title": "Cluster Events"
  },
  {
    "apiDisabled": true,
    "description": "Instance Events",
    "name": "databaseinsights.instanceEvents.query",
    "stage": "BETA",
    "title": "Instance Events"
  },
  {
    "apiDisabled": true,
    "description": "Get locations",
    "name": "databaseinsights.locations.get",
    "stage": "BETA",
    "title": "Get locations"
  },
  {
    "apiDisabled": true,
    "description": "List locations",
    "name": "databaseinsights.locations.list",
    "stage": "BETA",
    "title": "List locations"
  },
  {
    "apiDisabled": true,
    "description": "Detect performance issues for all supported databases",
    "name": "databaseinsights.performanceIssues.detect",
    "stage": "BETA",
    "title": "Detect Performance Issues"
  },
  {
    "apiDisabled": true,
    "description": "Investigate performance issues for all supported databases",
    "name": "databaseinsights.performanceIssues.investigate",
    "stage": "BETA",
    "title": "Investigate Performance Issues"
  },
  {
    "apiDisabled": true,
    "description": "Query Recommendations",
    "name": "databaseinsights.recommendations.query",
    "stage": "BETA",
    "title": "Query Recommendations"
  },
  {
    "apiDisabled": true,
    "description": "Query Resource Recommendations",
    "name": "databaseinsights.resourceRecommendations.query",
    "stage": "BETA",
    "title": "Query Resource Recommendations"
  },
  {
    "apiDisabled": true,
    "description": "Query Time Series",
    "name": "databaseinsights.timeSeries.query",
    "stage": "BETA",
    "title": "Query Time Series"
  },
  {
    "apiDisabled": true,
    "description": "Fetch CSQL Workload Recommendations",
    "name": "databaseinsights.workloadRecommendations.fetch",
    "stage": "BETA",
    "title": "Fetch CSQL Workload Recommendations"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.databaseCenterViews.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.databaseCenterViews.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.databaseCenterViews.search",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.databaseCenterViews.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.studioQueries.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.studioQueries.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.studioQueries.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.studioQueries.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.studioQueries.search",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "databasesconsole.studioQueries.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.catalogs.searchAll",
    "stage": "DEPRECATED",
    "title": "Search all entries under a organization/project"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.categories.fineGrainedGet",
    "stage": "GA",
    "title": "Read the sub-resources tagged by this policy tag"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.categories.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.categories.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.create",
    "stage": "DEPRECATED",
    "title": "Create entry"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.createGlossary",
    "stage": "BETA",
    "title": "Create glossary"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.createGlossaryCategory",
    "stage": "BETA",
    "title": "Create glossary category"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.createGlossaryTerm",
    "stage": "BETA",
    "title": "Create glossary term"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.delete",
    "stage": "DEPRECATED",
    "title": "Delete entries"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.deleteGlossary",
    "stage": "BETA",
    "title": "Delete glossary"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.deleteGlossaryCategory",
    "stage": "BETA",
    "title": "Delete glossary category"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.deleteGlossaryTerm",
    "stage": "BETA",
    "title": "Delete glossary term"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.get",
    "stage": "DEPRECATED",
    "title": "Read entries"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.getIamPolicy",
    "stage": "DEPRECATED",
    "title": "Get ACL of the entry"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.list",
    "stage": "DEPRECATED",
    "title": "List entries of an entry group"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.setIamPolicy",
    "stage": "DEPRECATED",
    "title": "Set ACL of the entry"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.update",
    "stage": "DEPRECATED",
    "title": "Update entries"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.updateContacts",
    "stage": "DEPRECATED",
    "title": "Update Business contacts for the entry"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.updateGlossary",
    "stage": "BETA",
    "title": "Update glossary"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.updateGlossaryCategory",
    "stage": "BETA",
    "title": "Update glossary category"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.updateGlossaryTerm",
    "stage": "BETA",
    "title": "Update glossary term"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.updateOverview",
    "stage": "DEPRECATED",
    "title": "Update overview on entries"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entries.updateTag",
    "stage": "DEPRECATED",
    "title": "Update tags on entries"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.create",
    "stage": "DEPRECATED",
    "title": "Create entryGroup"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.delete",
    "stage": "DEPRECATED",
    "title": "Delete entryGroup"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.get",
    "stage": "DEPRECATED",
    "title": "Read entryGroup"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.getIamPolicy",
    "stage": "DEPRECATED",
    "title": "Get ACL of the entryGroup"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.list",
    "stage": "DEPRECATED",
    "title": "List entryGroups"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.setIamPolicy",
    "stage": "DEPRECATED",
    "title": "Set ACL of the entryGroup"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.update",
    "stage": "DEPRECATED",
    "title": "Update entryGroup"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.entryGroups.updateTag",
    "stage": "DEPRECATED",
    "title": "Update tags on entryGroups"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.migrationConfig.get",
    "stage": "GA",
    "title": "Get Migration configuration."
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.migrationConfig.set",
    "stage": "GA",
    "title": "Set Migration configuration."
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.relationships.create",
    "stage": "BETA",
    "title": "Create relationship"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.relationships.createBelongsTo",
    "stage": "BETA",
    "title": "Create a relationship of type belongs_to"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.relationships.createIsDescribedBy",
    "stage": "BETA",
    "title": "Create a relationship of type is_described_by"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.relationships.createIsRelatedTo",
    "stage": "BETA",
    "title": "Create a relationship of type is_related_to"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.relationships.createIsSynonymousTo",
    "stage": "BETA",
    "title": "Create a relationship of type is_synonymous_to"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.relationships.delete",
    "stage": "BETA",
    "title": "Delete relationships"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.relationships.deleteBelongsTo",
    "stage": "BETA",
    "title": "Delete a relationship of type belongs_to"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.relationships.deleteIsDescribedBy",
    "stage": "BETA",
    "title": "Delete a relationship of type is_described_by"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.relationships.deleteIsRelatedTo",
    "stage": "BETA",
    "title": "Delete a relationship of type is_related_to"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.relationships.deleteIsSynonymousTo",
    "stage": "BETA",
    "title": "Delete a relationship of type is_synonymous_to"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.relationships.list",
    "stage": "BETA",
    "title": "List relationships"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.create",
    "stage": "DEPRECATED",
    "title": "Create tag template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.delete",
    "stage": "DEPRECATED",
    "title": "Delete tag template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.get",
    "stage": "DEPRECATED",
    "title": "Read tag template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.getIamPolicy",
    "stage": "DEPRECATED",
    "title": "Get ACL of the tag template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.getTag",
    "stage": "DEPRECATED",
    "title": "Read tags that were created using the template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.setIamPolicy",
    "stage": "DEPRECATED",
    "title": "Set ACL of the tag template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.update",
    "stage": "DEPRECATED",
    "title": "Update tag template"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.tagTemplates.use",
    "stage": "DEPRECATED",
    "title": "Use the template to tag resources"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.taxonomies.create",
    "stage": "GA",
    "title": "Create taxonomies"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.taxonomies.delete",
    "stage": "GA",
    "title": "Delete taxonomies"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.taxonomies.get",
    "stage": "GA",
    "title": "Read taxonomies"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.taxonomies.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.taxonomies.list",
    "stage": "GA",
    "title": "List taxonomies"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.taxonomies.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "datacatalog.taxonomies.update",
    "stage": "GA",
    "title": "Update taxonomies"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.connectors.create",
    "stage": "BETA",
    "title": "Create Connector"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.connectors.delete",
    "stage": "BETA",
    "title": "Delete Connector"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.connectors.get",
    "stage": "BETA",
    "title": "Get Connector"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.connectors.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Connector"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.connectors.list",
    "stage": "BETA",
    "title": "List Connectors"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.connectors.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Connector"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.connectors.update",
    "stage": "BETA",
    "title": "Update Connector"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.connectors.use",
    "stage": "BETA",
    "title": "Use Connector"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "dataconnectors.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.jobs.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.jobs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.jobs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.jobs.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.jobs.snapshot",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.jobs.updateContents",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.messages.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.metrics.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.shuffle.read",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.shuffle.write",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.snapshots.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.snapshots.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.snapshots.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.streamingWorkItems.ImportState",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.streamingWorkItems.commitWork",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.streamingWorkItems.getData",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.streamingWorkItems.getWork",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.streamingWorkItems.getWorkerMetadata",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.workItems.lease",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.workItems.sendMessage",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataflow.workItems.update",
    "stage": "GA"
  },
  {
    "name": "dataform.commentThreads.create",
    "stage": "BETA",
    "title": "Create CommentThread"
  },
  {
    "name": "dataform.commentThreads.delete",
    "stage": "BETA",
    "title": "Delete CommentThread"
  },
  {
    "name": "dataform.commentThreads.get",
    "stage": "BETA",
    "title": "Get CommentThread"
  },
  {
    "name": "dataform.commentThreads.list",
    "stage": "BETA",
    "title": "List CommentThreads"
  },
  {
    "name": "dataform.commentThreads.update",
    "stage": "BETA",
    "title": "Update CommentThread"
  },
  {
    "name": "dataform.comments.create",
    "stage": "BETA",
    "title": "Create Comment"
  },
  {
    "name": "dataform.comments.delete",
    "stage": "BETA",
    "title": "Delete Comment"
  },
  {
    "name": "dataform.comments.get",
    "stage": "BETA",
    "title": "Get Comment"
  },
  {
    "name": "dataform.comments.list",
    "stage": "BETA",
    "title": "List Comments"
  },
  {
    "name": "dataform.comments.update",
    "stage": "BETA",
    "title": "Update Comment"
  },
  {
    "name": "dataform.compilationResults.create",
    "stage": "GA",
    "title": "Create CompilationResult"
  },
  {
    "name": "dataform.compilationResults.get",
    "stage": "GA",
    "title": "Get CompilationResult"
  },
  {
    "name": "dataform.compilationResults.list",
    "stage": "GA",
    "title": "List CompilationResults"
  },
  {
    "name": "dataform.compilationResults.query",
    "stage": "GA",
    "title": "Query CompilationResultActions"
  },
  {
    "name": "dataform.config.get",
    "stage": "GA",
    "title": "Get config"
  },
  {
    "name": "dataform.config.update",
    "stage": "GA",
    "title": "Update config"
  },
  {
    "name": "dataform.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "name": "dataform.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "name": "dataform.releaseConfigs.create",
    "stage": "GA",
    "title": "Create ReleaseConfig"
  },
  {
    "name": "dataform.releaseConfigs.delete",
    "stage": "GA",
    "title": "Delete ReleaseConfig"
  },
  {
    "name": "dataform.releaseConfigs.get",
    "stage": "GA",
    "title": "Get ReleaseConfig"
  },
  {
    "name": "dataform.releaseConfigs.list",
    "stage": "GA",
    "title": "List ReleaseConfigs"
  },
  {
    "name": "dataform.releaseConfigs.update",
    "stage": "GA",
    "title": "Update ReleaseConfig"
  },
  {
    "name": "dataform.repositories.commit",
    "stage": "GA",
    "title": "Git commit Repository changes"
  },
  {
    "name": "dataform.repositories.computeAccessTokenStatus",
    "stage": "GA",
    "title": "Computes a Repository Git access token status"
  },
  {
    "name": "dataform.repositories.create",
    "stage": "GA",
    "title": "Create Repository"
  },
  {
    "name": "dataform.repositories.delete",
    "stage": "GA",
    "title": "Delete Repository"
  },
  {
    "name": "dataform.repositories.fetchHistory",
    "stage": "GA",
    "title": "Fetch Repository history of commits"
  },
  {
    "name": "dataform.repositories.fetchRemoteBranches",
    "stage": "GA",
    "title": "Fetch Repository remote branches"
  },
  {
    "name": "dataform.repositories.get",
    "stage": "GA",
    "title": "Get Repository"
  },
  {
    "name": "dataform.repositories.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Repository"
  },
  {
    "name": "dataform.repositories.list",
    "stage": "GA",
    "title": "List Repositories"
  },
  {
    "name": "dataform.repositories.queryDirectoryContents",
    "stage": "GA",
    "title": "Query Repository directory contents"
  },
  {
    "name": "dataform.repositories.readFile",
    "stage": "GA",
    "title": "Read Repository file"
  },
  {
    "name": "dataform.repositories.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Repository"
  },
  {
    "name": "dataform.repositories.update",
    "stage": "GA",
    "title": "Update Repository"
  },
  {
    "name": "dataform.workflowConfigs.create",
    "stage": "GA",
    "title": "Create WorkflowConfig"
  },
  {
    "name": "dataform.workflowConfigs.delete",
    "stage": "GA",
    "title": "Delete WorkflowConfig"
  },
  {
    "name": "dataform.workflowConfigs.get",
    "stage": "GA",
    "title": "Get WorkflowConfig"
  },
  {
    "name": "dataform.workflowConfigs.list",
    "stage": "GA",
    "title": "List WorkflowConfigs"
  },
  {
    "name": "dataform.workflowConfigs.update",
    "stage": "GA",
    "title": "Update WorkflowConfig"
  },
  {
    "name": "dataform.workflowInvocations.cancel",
    "stage": "GA",
    "title": "Cancel WorkflowInvocation"
  },
  {
    "name": "dataform.workflowInvocations.create",
    "stage": "GA",
    "title": "Create WorkflowInvocation"
  },
  {
    "name": "dataform.workflowInvocations.delete",
    "stage": "GA",
    "title": "Delete WorkflowInvocation"
  },
  {
    "name": "dataform.workflowInvocations.get",
    "stage": "GA",
    "title": "Get WorkflowInvocation"
  },
  {
    "name": "dataform.workflowInvocations.list",
    "stage": "GA",
    "title": "List WorkflowInvocations"
  },
  {
    "name": "dataform.workflowInvocations.query",
    "stage": "GA",
    "title": "Query WorkflowInvocationActions"
  },
  {
    "name": "dataform.workspaces.commit",
    "stage": "GA",
    "title": "Git commit Workspace changes"
  },
  {
    "name": "dataform.workspaces.create",
    "stage": "GA",
    "title": "Create Workspace"
  },
  {
    "name": "dataform.workspaces.delete",
    "stage": "GA",
    "title": "Delete Workspace"
  },
  {
    "name": "dataform.workspaces.fetchFileDiff",
    "stage": "GA",
    "title": "Fetch Git Workspace file diff"
  },
  {
    "name": "dataform.workspaces.fetchFileGitStatuses",
    "stage": "GA",
    "title": "Fetch Workspace file statuses"
  },
  {
    "name": "dataform.workspaces.fetchGitAheadBehind",
    "stage": "GA",
    "title": "Fetch Workspace Git ahead behind"
  },
  {
    "name": "dataform.workspaces.get",
    "stage": "GA",
    "title": "Get Workspace"
  },
  {
    "name": "dataform.workspaces.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Workspace"
  },
  {
    "name": "dataform.workspaces.installNpmPackages",
    "stage": "GA",
    "title": "Install Npm Packages"
  },
  {
    "name": "dataform.workspaces.list",
    "stage": "GA",
    "title": "List Workspaces"
  },
  {
    "name": "dataform.workspaces.makeDirectory",
    "stage": "GA",
    "title": "Create Workspace directory"
  },
  {
    "name": "dataform.workspaces.moveDirectory",
    "stage": "GA",
    "title": "Move Workspace directory"
  },
  {
    "name": "dataform.workspaces.moveFile",
    "stage": "GA",
    "title": "Move Workspace file"
  },
  {
    "name": "dataform.workspaces.pull",
    "stage": "GA",
    "title": "Pull Git commits into Workspace"
  },
  {
    "name": "dataform.workspaces.push",
    "stage": "GA",
    "title": "Push Workspace Git commits"
  },
  {
    "name": "dataform.workspaces.queryDirectoryContents",
    "stage": "GA",
    "title": "Query Workspace directory contents"
  },
  {
    "name": "dataform.workspaces.readFile",
    "stage": "GA",
    "title": "Read Workspace file"
  },
  {
    "name": "dataform.workspaces.removeDirectory",
    "stage": "GA",
    "title": "Delete Workspace directory"
  },
  {
    "name": "dataform.workspaces.removeFile",
    "stage": "GA",
    "title": "Delete Workspace file"
  },
  {
    "name": "dataform.workspaces.reset",
    "stage": "GA",
    "title": "Git reset Workspace changes"
  },
  {
    "name": "dataform.workspaces.searchFiles",
    "stage": "GA",
    "title": "Finds the contents of a given Workspace"
  },
  {
    "name": "dataform.workspaces.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Workspace"
  },
  {
    "name": "dataform.workspaces.writeFile",
    "stage": "GA",
    "title": "Write Workspace file"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.artifacts.create",
    "stage": "BETA",
    "title": "Create Artifact"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.artifacts.delete",
    "stage": "BETA",
    "title": "Delete Artifact"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.artifacts.get",
    "stage": "BETA",
    "title": "Get Artifact"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.artifacts.list",
    "stage": "BETA",
    "title": "List Artifacts"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.artifacts.update",
    "stage": "BETA",
    "title": "Update Artifact"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.create",
    "stage": "GA",
    "title": "Create Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on Data Fusion Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.delete",
    "stage": "GA",
    "title": "Delete Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on Data Fusion Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.get",
    "stage": "GA",
    "title": "Get Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.list",
    "stage": "GA",
    "title": "List Instances"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on Data Fusion Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on Data Fusion Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.restart",
    "stage": "GA",
    "title": "Restart Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.runtime",
    "stage": "GA",
    "title": "Data Fusion Runtime Access"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.update",
    "stage": "GA",
    "title": "Update Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.instances.upgrade",
    "stage": "GA",
    "title": "Upgrade Instance"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.namespaces.create",
    "stage": "BETA",
    "title": "Create Namespace"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.namespaces.delete",
    "stage": "BETA",
    "title": "Delete Namespace"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.namespaces.get",
    "stage": "BETA",
    "title": "Get Namespace"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.namespaces.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Namespace"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.namespaces.list",
    "stage": "BETA",
    "title": "List Namespaces"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.namespaces.provisionCredential",
    "stage": "BETA",
    "title": "Provision Credential using Service Account of Namespace"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.namespaces.readRepository",
    "stage": "BETA",
    "title": "Read Repository Data of Namespace"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.namespaces.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Namespace"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.namespaces.setServiceAccount",
    "stage": "BETA",
    "title": "Set Service Account of Namespace"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.namespaces.unsetServiceAccount",
    "stage": "BETA",
    "title": "Unset Service Account of Namespace"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.namespaces.update",
    "stage": "BETA",
    "title": "Update Namespace"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.namespaces.updateRepositoryMetadata",
    "stage": "BETA",
    "title": "Update Repository Metadata of Namespace"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.namespaces.writeRepository",
    "stage": "BETA",
    "title": "Update Repository Data of Namespace"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.pipelineConnections.create",
    "stage": "BETA",
    "title": "Create Pipeline Connection"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.pipelineConnections.delete",
    "stage": "BETA",
    "title": "Delete Pipeline Connection"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.pipelineConnections.get",
    "stage": "BETA",
    "title": "Get Pipeline Connection"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.pipelineConnections.list",
    "stage": "BETA",
    "title": "List Pipeline Connections"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.pipelineConnections.update",
    "stage": "BETA",
    "title": "Update Pipeline Connection"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.pipelineConnections.use",
    "stage": "BETA",
    "title": "Use Pipeline Connection"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.pipelines.create",
    "stage": "BETA",
    "title": "Create Pipeline"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.pipelines.delete",
    "stage": "BETA",
    "title": "Delete Pipeline"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.pipelines.execute",
    "stage": "BETA",
    "title": "Execute Pipeline"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.pipelines.get",
    "stage": "BETA",
    "title": "Get Pipeline"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.pipelines.list",
    "stage": "BETA",
    "title": "List Pipelines"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.pipelines.preview",
    "stage": "BETA",
    "title": "Preview Pipeline"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.pipelines.update",
    "stage": "BETA",
    "title": "Update Pipeline"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.profiles.create",
    "stage": "BETA",
    "title": "Create Compute Profile"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.profiles.delete",
    "stage": "BETA",
    "title": "Delete Compute Profile"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.profiles.get",
    "stage": "BETA",
    "title": "Get Compute Profile"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.profiles.list",
    "stage": "BETA",
    "title": "List Compute Profiles"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.profiles.update",
    "stage": "BETA",
    "title": "Update Compute Profile"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.secureKeys.create",
    "stage": "BETA",
    "title": "Create Secure Key"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.secureKeys.delete",
    "stage": "BETA",
    "title": "Delete Secure Key"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.secureKeys.getSecret",
    "stage": "BETA",
    "title": "Get Secure Key"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.secureKeys.list",
    "stage": "BETA",
    "title": "List Secure Keys"
  },
  {
    "apiDisabled": true,
    "name": "datafusion.secureKeys.update",
    "stage": "BETA",
    "title": "Update Secure Key"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotateddatasets.delete",
    "stage": "BETA",
    "title": "Delete AnnotatedDataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotateddatasets.get",
    "stage": "BETA",
    "title": "Get AnnotatedDataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotateddatasets.label",
    "stage": "BETA",
    "title": "Label Dataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotateddatasets.list",
    "stage": "BETA",
    "title": "List AnnotatedDatasets"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotationspecsets.create",
    "stage": "BETA",
    "title": "Create AnnotationSpecSet"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotationspecsets.delete",
    "stage": "BETA",
    "title": "Delete AnnotationSpecSet"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotationspecsets.get",
    "stage": "BETA",
    "title": "Get AnnotationSpecSet"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.annotationspecsets.list",
    "stage": "BETA",
    "title": "List AnnotationSpecSets"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.dataitems.get",
    "stage": "BETA",
    "title": "Get DataItem"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.dataitems.list",
    "stage": "BETA",
    "title": "List DataItems"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.datasets.create",
    "stage": "BETA",
    "title": "Create Datadset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.datasets.delete",
    "stage": "BETA",
    "title": "Delete Dataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.datasets.export",
    "stage": "BETA",
    "title": "Export Dataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.datasets.get",
    "stage": "BETA",
    "title": "Get Dataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.datasets.import",
    "stage": "BETA",
    "title": "Import dataset"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.datasets.list",
    "stage": "BETA",
    "title": "List Datasets"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.examples.get",
    "stage": "BETA",
    "title": "Get Example"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.examples.list",
    "stage": "BETA",
    "title": "List Examples"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.instructions.create",
    "stage": "BETA",
    "title": "Create Instruction"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.instructions.delete",
    "stage": "BETA",
    "title": "Delete Instruction"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.instructions.get",
    "stage": "BETA",
    "title": "Get Instruction"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.instructions.list",
    "stage": "BETA",
    "title": "List Instructions"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "datalabeling.operations.list",
    "stage": "BETA",
    "title": "List Operations"
  },
  {
    "apiDisabled": true,
    "description": "Get Config",
    "name": "datalineage.configs.get",
    "stage": "GA",
    "title": "Get Config"
  },
  {
    "apiDisabled": true,
    "description": "Update Config",
    "name": "datalineage.configs.update",
    "stage": "GA",
    "title": "Update Config"
  },
  {
    "apiDisabled": true,
    "description": "Create Lineage Events",
    "name": "datalineage.events.create",
    "stage": "GA",
    "title": "Create Lineage Events"
  },
  {
    "apiDisabled": true,
    "description": "Delete Lineage Events",
    "name": "datalineage.events.delete",
    "stage": "GA",
    "title": "Delete Lineage Events"
  },
  {
    "apiDisabled": true,
    "description": "Get Lineage Events",
    "name": "datalineage.events.get",
    "stage": "GA",
    "title": "Get Lineage Events"
  },
  {
    "apiDisabled": true,
    "description": "List Lineage Events",
    "name": "datalineage.events.list",
    "stage": "GA",
    "title": "List Lineage Events"
  },
  {
    "apiDisabled": true,
    "description": "Process Open Lineage Message",
    "name": "datalineage.locations.processOpenLineageMessage",
    "stage": "GA",
    "title": "Process Open Lineage Message"
  },
  {
    "apiDisabled": true,
    "description": "Search Links",
    "name": "datalineage.locations.searchLinks",
    "stage": "GA",
    "title": "Search Links"
  },
  {
    "apiDisabled": true,
    "description": "Get Operations",
    "name": "datalineage.operations.get",
    "stage": "GA",
    "title": "Get Operations"
  },
  {
    "apiDisabled": true,
    "description": "Create Processes",
    "name": "datalineage.processes.create",
    "stage": "GA",
    "title": "Create Processes"
  },
  {
    "apiDisabled": true,
    "description": "Delete Processes",
    "name": "datalineage.processes.delete",
    "stage": "GA",
    "title": "Delete Processes"
  },
  {
    "apiDisabled": true,
    "description": "Get Processes",
    "name": "datalineage.processes.get",
    "stage": "GA",
    "title": "Get Processes"
  },
  {
    "apiDisabled": true,
    "description": "List Processes",
    "name": "datalineage.processes.list",
    "stage": "GA",
    "title": "List Processes"
  },
  {
    "apiDisabled": true,
    "description": "Update Processes",
    "name": "datalineage.processes.update",
    "stage": "GA",
    "title": "Update Processes"
  },
  {
    "apiDisabled": true,
    "description": "Create Runs",
    "name": "datalineage.runs.create",
    "stage": "GA",
    "title": "Create Runs"
  },
  {
    "apiDisabled": true,
    "description": "Delete Runs",
    "name": "datalineage.runs.delete",
    "stage": "GA",
    "title": "Delete Runs"
  },
  {
    "apiDisabled": true,
    "description": "Get Runs",
    "name": "datalineage.runs.get",
    "stage": "GA",
    "title": "Get Runs"
  },
  {
    "apiDisabled": true,
    "description": "List Runs",
    "name": "datalineage.runs.list",
    "stage": "GA",
    "title": "List Runs"
  },
  {
    "apiDisabled": true,
    "description": "Update Runs",
    "name": "datalineage.runs.update",
    "stage": "GA",
    "title": "Update Runs"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.connectionprofiles.create",
    "stage": "GA",
    "title": "Create Connection Profile"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.connectionprofiles.delete",
    "stage": "GA",
    "title": "Delete Connection Profile"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.connectionprofiles.get",
    "stage": "GA",
    "title": "Get Connection Profile"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.connectionprofiles.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Connection Profile"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.connectionprofiles.list",
    "stage": "GA",
    "title": "List Connection Profiles"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.connectionprofiles.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Connection Profile"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.connectionprofiles.update",
    "stage": "GA",
    "title": "Update Connection Profile"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.conversionworkspaces.apply",
    "stage": "GA",
    "title": "Apply Conversion Workspace"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.conversionworkspaces.commit",
    "stage": "GA",
    "title": "Commit Conversion Workspace"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.conversionworkspaces.convert",
    "stage": "GA",
    "title": "Convert Conversion Workspace"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.conversionworkspaces.create",
    "stage": "GA",
    "title": "Create Conversion Workspace"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.conversionworkspaces.delete",
    "stage": "GA",
    "title": "Delete Conversion Workspace"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.conversionworkspaces.get",
    "stage": "GA",
    "title": "Get Conversion Workspace"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.conversionworkspaces.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Conversion Workspace"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.conversionworkspaces.list",
    "stage": "GA",
    "title": "List Conversion Workspaces"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.conversionworkspaces.rollback",
    "stage": "GA",
    "title": "Rollback Conversion Workspace"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.conversionworkspaces.seed",
    "stage": "GA",
    "title": "Seed Conversion Workspace"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.conversionworkspaces.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Conversion Workspace"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.conversionworkspaces.update",
    "stage": "GA",
    "title": "Update Conversion Workspace"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.locations.fetchStaticIps",
    "stage": "GA",
    "title": "Fetch static service IP addresses"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.mappingrules.getIamPolicy",
    "stage": "DEPRECATED",
    "title": "Get IAM Policy on Mapping Rule"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.mappingrules.import",
    "stage": "DEPRECATED",
    "title": "Import Mapping Rules"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.mappingrules.setIamPolicy",
    "stage": "DEPRECATED",
    "title": "Set IAM Policy on Mapping Rule"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.create",
    "stage": "GA",
    "title": "Create Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.delete",
    "stage": "GA",
    "title": "Delete Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.demoteDestination",
    "stage": "GA",
    "title": "Demote Migration Job's Destination"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.fetchSourceObjects",
    "stage": "GA",
    "title": "Fetch source objects from the Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.generateSshScript",
    "stage": "GA",
    "title": "Generate an SSH script for the Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.generateTcpProxyScript",
    "stage": "GA",
    "title": "Generate a TCP Proxy script for the Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.get",
    "stage": "GA",
    "title": "Get Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.list",
    "stage": "GA",
    "title": "List Migration Jobs"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.promote",
    "stage": "GA",
    "title": "Promote Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.restart",
    "stage": "GA",
    "title": "Restart Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.resume",
    "stage": "GA",
    "title": "Resume Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.start",
    "stage": "GA",
    "title": "Start Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.stop",
    "stage": "GA",
    "title": "Stop Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.update",
    "stage": "GA",
    "title": "Update Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.migrationjobs.verify",
    "stage": "GA",
    "title": "Verify Migration Job"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.objects.get",
    "stage": "GA",
    "title": "Get migration job object"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.objects.list",
    "stage": "GA",
    "title": "List migration job objects"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.privateconnections.create",
    "stage": "GA",
    "title": "Create Private Connection"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.privateconnections.delete",
    "stage": "GA",
    "title": "Delete Private Connection"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.privateconnections.get",
    "stage": "GA",
    "title": "Get Private Connection"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.privateconnections.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Private Connection"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.privateconnections.list",
    "stage": "GA",
    "title": "List Private Connections"
  },
  {
    "apiDisabled": true,
    "name": "datamigration.privateconnections.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Private Connection"
  },
  {
    "apiDisabled": true,
    "description": "List all the jobs for a pipeline",
    "name": "datapipelines.jobs.list",
    "stage": "GA",
    "title": "list"
  },
  {
    "apiDisabled": true,
    "description": "Create Pipeline",
    "name": "datapipelines.pipelines.create",
    "stage": "GA",
    "title": "create"
  },
  {
    "apiDisabled": true,
    "description": "Delete Pipeline",
    "name": "datapipelines.pipelines.delete",
    "stage": "GA",
    "title": "delete"
  },
  {
    "apiDisabled": true,
    "description": "Get Pipeline",
    "name": "datapipelines.pipelines.get",
    "stage": "GA",
    "title": "get"
  },
  {
    "apiDisabled": true,
    "description": "List all Pipelines",
    "name": "datapipelines.pipelines.list",
    "stage": "GA",
    "title": "list"
  },
  {
    "apiDisabled": true,
    "description": "Run a Pipeline instance",
    "name": "datapipelines.pipelines.run",
    "stage": "GA",
    "title": "run"
  },
  {
    "apiDisabled": true,
    "description": "Stop a Pipeline instance",
    "name": "datapipelines.pipelines.stop",
    "stage": "GA",
    "title": "stop"
  },
  {
    "apiDisabled": true,
    "description": "Update Pipeline",
    "name": "datapipelines.pipelines.update",
    "stage": "GA",
    "title": "update"
  },
  {
    "name": "dataplex.aspectTypes.create",
    "stage": "GA",
    "title": "Create an Aspect Type"
  },
  {
    "name": "dataplex.aspectTypes.delete",
    "stage": "GA",
    "title": "Delete an Aspect Type"
  },
  {
    "name": "dataplex.aspectTypes.get",
    "stage": "GA",
    "title": "Read an Aspect Type"
  },
  {
    "name": "dataplex.aspectTypes.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on AspectType"
  },
  {
    "name": "dataplex.aspectTypes.list",
    "stage": "GA",
    "title": "List Aspect Types"
  },
  {
    "name": "dataplex.aspectTypes.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on AspectType"
  },
  {
    "name": "dataplex.aspectTypes.update",
    "stage": "GA",
    "title": "Update an Aspect Type"
  },
  {
    "name": "dataplex.aspectTypes.use",
    "stage": "GA",
    "title": "Use an Aspect Type for creating entries"
  },
  {
    "name": "dataplex.assetActions.list",
    "stage": "GA",
    "title": "List Asset Actions"
  },
  {
    "name": "dataplex.assets.create",
    "stage": "GA",
    "title": "Create Asset"
  },
  {
    "name": "dataplex.assets.delete",
    "stage": "GA",
    "title": "Delete Asset"
  },
  {
    "name": "dataplex.assets.get",
    "stage": "GA",
    "title": "Get Asset"
  },
  {
    "name": "dataplex.assets.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Asset"
  },
  {
    "name": "dataplex.assets.list",
    "stage": "GA",
    "title": "List Assets"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "dataplex.assets.ownData",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Asset Data Owner"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "dataplex.assets.readData",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Asset Data Reader"
  },
  {
    "name": "dataplex.assets.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Asset"
  },
  {
    "name": "dataplex.assets.update",
    "stage": "GA",
    "title": "Update Asset"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "dataplex.assets.writeData",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Asset Data Writer"
  },
  {
    "name": "dataplex.content.create",
    "stage": "GA",
    "title": "Create Content"
  },
  {
    "name": "dataplex.content.delete",
    "stage": "GA",
    "title": "Delete Content"
  },
  {
    "name": "dataplex.content.get",
    "stage": "GA",
    "title": "Get Content"
  },
  {
    "name": "dataplex.content.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Content"
  },
  {
    "name": "dataplex.content.list",
    "stage": "GA",
    "title": "List Content"
  },
  {
    "name": "dataplex.content.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Content"
  },
  {
    "name": "dataplex.content.update",
    "stage": "GA",
    "title": "Update Content"
  },
  {
    "name": "dataplex.dataAttributeBindings.create",
    "stage": "GA",
    "title": "Create DataAttributeBinding"
  },
  {
    "name": "dataplex.dataAttributeBindings.delete",
    "stage": "GA",
    "title": "Delete DataAttributeBinding"
  },
  {
    "name": "dataplex.dataAttributeBindings.get",
    "stage": "GA",
    "title": "Get DataAttributeBinding"
  },
  {
    "name": "dataplex.dataAttributeBindings.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on DataAttributeBinding"
  },
  {
    "name": "dataplex.dataAttributeBindings.list",
    "stage": "GA",
    "title": "List DataAttributeBindings"
  },
  {
    "name": "dataplex.dataAttributeBindings.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on DataAttributeBinding"
  },
  {
    "name": "dataplex.dataAttributeBindings.update",
    "stage": "GA",
    "title": "Update DataAttributeBinding"
  },
  {
    "name": "dataplex.dataAttributes.bind",
    "stage": "GA",
    "title": "Use DataAttribute in a binding"
  },
  {
    "name": "dataplex.dataAttributes.create",
    "stage": "GA",
    "title": "Create DataAttribute"
  },
  {
    "name": "dataplex.dataAttributes.delete",
    "stage": "GA",
    "title": "Delete DataAttribute"
  },
  {
    "name": "dataplex.dataAttributes.get",
    "stage": "GA",
    "title": "Get DataAttribute"
  },
  {
    "name": "dataplex.dataAttributes.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on DataAttribute"
  },
  {
    "name": "dataplex.dataAttributes.list",
    "stage": "GA",
    "title": "List Data Attributes"
  },
  {
    "name": "dataplex.dataAttributes.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on DataAttribute"
  },
  {
    "name": "dataplex.dataAttributes.update",
    "stage": "GA",
    "title": "Update DataAttribute"
  },
  {
    "name": "dataplex.dataTaxonomies.configureDataAccess",
    "stage": "GA",
    "title": "Configure Data Access in DataTaxonomy"
  },
  {
    "name": "dataplex.dataTaxonomies.configureResourceAccess",
    "stage": "GA",
    "title": "Configure Resource Access in DataTaxonomy"
  },
  {
    "name": "dataplex.dataTaxonomies.create",
    "stage": "GA",
    "title": "Create DataTaxonomy"
  },
  {
    "name": "dataplex.dataTaxonomies.delete",
    "stage": "GA",
    "title": "Delete DataTaxonomy"
  },
  {
    "name": "dataplex.dataTaxonomies.get",
    "stage": "GA",
    "title": "Get DataTaxonomy"
  },
  {
    "name": "dataplex.dataTaxonomies.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on DataTaxonomy"
  },
  {
    "name": "dataplex.dataTaxonomies.list",
    "stage": "GA",
    "title": "List DataTaxonomies"
  },
  {
    "name": "dataplex.dataTaxonomies.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on DataTaxonomy"
  },
  {
    "name": "dataplex.dataTaxonomies.update",
    "stage": "GA",
    "title": "Update DataTaxonomy"
  },
  {
    "name": "dataplex.datascans.create",
    "stage": "GA",
    "title": "Create DataScan"
  },
  {
    "name": "dataplex.datascans.delete",
    "stage": "GA",
    "title": "Delete DataScan"
  },
  {
    "name": "dataplex.datascans.get",
    "stage": "GA",
    "title": "Get DataScan"
  },
  {
    "name": "dataplex.datascans.getData",
    "stage": "GA",
    "title": "Get DataScan and additional contents"
  },
  {
    "name": "dataplex.datascans.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on DataScan"
  },
  {
    "name": "dataplex.datascans.list",
    "stage": "GA",
    "title": "List DataScans"
  },
  {
    "name": "dataplex.datascans.run",
    "stage": "GA",
    "title": "Trigger DataScan Run"
  },
  {
    "name": "dataplex.datascans.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on DataScan"
  },
  {
    "name": "dataplex.datascans.update",
    "stage": "GA",
    "title": "Update DataScan"
  },
  {
    "name": "dataplex.entities.create",
    "stage": "GA",
    "title": "Create Metadata Entities"
  },
  {
    "name": "dataplex.entities.delete",
    "stage": "GA",
    "title": "Delete Metadata Entities"
  },
  {
    "name": "dataplex.entities.get",
    "stage": "GA",
    "title": "Get Metadata Entities"
  },
  {
    "name": "dataplex.entities.list",
    "stage": "GA",
    "title": "List Metadata Entities"
  },
  {
    "name": "dataplex.entities.update",
    "stage": "GA",
    "title": "Update Metadata Entities"
  },
  {
    "name": "dataplex.entries.create",
    "stage": "GA",
    "title": "Create an Entry"
  },
  {
    "name": "dataplex.entries.delete",
    "stage": "GA",
    "title": "Delete an Entry"
  },
  {
    "name": "dataplex.entries.get",
    "stage": "GA",
    "title": "Read an Entry"
  },
  {
    "name": "dataplex.entries.link",
    "stage": "GA",
    "title": "Link an Entry through an Entry Link"
  },
  {
    "name": "dataplex.entries.list",
    "stage": "GA",
    "title": "List Entries"
  },
  {
    "name": "dataplex.entries.update",
    "stage": "GA",
    "title": "Update an Entry"
  },
  {
    "name": "dataplex.entryGroups.create",
    "stage": "GA",
    "title": "Create an Entry Group"
  },
  {
    "name": "dataplex.entryGroups.delete",
    "stage": "GA",
    "title": "Delete an Entry Group"
  },
  {
    "name": "dataplex.entryGroups.export",
    "stage": "GA",
    "title": "Allows export of an EntryGroup. Grants permissions to export entries in the EntryGroup."
  },
  {
    "name": "dataplex.entryGroups.get",
    "stage": "GA",
    "title": "Read an Entry Group"
  },
  {
    "name": "dataplex.entryGroups.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on EntryGroup"
  },
  {
    "name": "dataplex.entryGroups.import",
    "stage": "GA",
    "title": "Allows import of an EntryGroup. Grants permissions to create/modify entries in the EntryGroup."
  },
  {
    "name": "dataplex.entryGroups.list",
    "stage": "GA",
    "title": "List Entry Groups"
  },
  {
    "name": "dataplex.entryGroups.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on EntryGroup"
  },
  {
    "name": "dataplex.entryGroups.update",
    "stage": "GA",
    "title": "Update an Entry Group"
  },
  {
    "name": "dataplex.entryGroups.useContactsAspect",
    "stage": "GA",
    "title": "Use Contacts Aspect Type"
  },
  {
    "name": "dataplex.entryGroups.useDataQualityScorecardAspect",
    "stage": "GA",
    "title": "Use Data Quality Scorecard Aspect Type"
  },
  {
    "name": "dataplex.entryGroups.useDefinitionEntryLink",
    "stage": "GA",
    "title": "Use Definition Entry Link Type"
  },
  {
    "name": "dataplex.entryGroups.useGenericAspect",
    "stage": "GA",
    "title": "Use Generic Aspect Type"
  },
  {
    "name": "dataplex.entryGroups.useGenericEntry",
    "stage": "GA",
    "title": "Use Generic Entry Type"
  },
  {
    "name": "dataplex.entryGroups.useOverviewAspect",
    "stage": "GA",
    "title": "Use Overview Aspect Type"
  },
  {
    "name": "dataplex.entryGroups.useRelatedEntryLink",
    "stage": "GA",
    "title": "Use Related Entry Link Type"
  },
  {
    "name": "dataplex.entryGroups.useSchemaAspect",
    "stage": "GA",
    "title": "Use Schema Aspect Type"
  },
  {
    "name": "dataplex.entryGroups.useSynonymEntryLink",
    "stage": "GA",
    "title": "Use Synonym Entry Link Type"
  },
  {
    "name": "dataplex.entryLinks.create",
    "stage": "GA",
    "title": "Create an Entry Link"
  },
  {
    "name": "dataplex.entryLinks.delete",
    "stage": "GA",
    "title": "Delete an Entry Link"
  },
  {
    "name": "dataplex.entryLinks.get",
    "stage": "GA",
    "title": "Read an Entry Link"
  },
  {
    "name": "dataplex.entryLinks.reference",
    "stage": "GA",
    "title": "Allows referencing entries through entry links"
  },
  {
    "name": "dataplex.entryTypes.create",
    "stage": "GA",
    "title": "Create an Entry Type"
  },
  {
    "name": "dataplex.entryTypes.delete",
    "stage": "GA",
    "title": "Delete an Entry Type"
  },
  {
    "name": "dataplex.entryTypes.get",
    "stage": "GA",
    "title": "Read an Entry Type"
  },
  {
    "name": "dataplex.entryTypes.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on EntryType"
  },
  {
    "name": "dataplex.entryTypes.list",
    "stage": "GA",
    "title": "List Entry Types"
  },
  {
    "name": "dataplex.entryTypes.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on EntryType"
  },
  {
    "name": "dataplex.entryTypes.update",
    "stage": "GA",
    "title": "Update an Entry Type"
  },
  {
    "name": "dataplex.entryTypes.use",
    "stage": "GA",
    "title": "Use an Entry Type for creating entries"
  },
  {
    "name": "dataplex.environments.create",
    "stage": "GA",
    "title": "Create Environment"
  },
  {
    "name": "dataplex.environments.delete",
    "stage": "GA",
    "title": "Delete Environment"
  },
  {
    "name": "dataplex.environments.execute",
    "stage": "GA",
    "title": "Execute code and queries using the environment"
  },
  {
    "name": "dataplex.environments.get",
    "stage": "GA",
    "title": "Get Environment"
  },
  {
    "name": "dataplex.environments.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Environment"
  },
  {
    "name": "dataplex.environments.list",
    "stage": "GA",
    "title": "List Environments"
  },
  {
    "name": "dataplex.environments.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Environment"
  },
  {
    "name": "dataplex.environments.update",
    "stage": "GA",
    "title": "Update Environment"
  },
  {
    "name": "dataplex.glossaries.create",
    "stage": "GA",
    "title": "Create a Glossary"
  },
  {
    "name": "dataplex.glossaries.delete",
    "stage": "GA",
    "title": "Delete a Glossary"
  },
  {
    "name": "dataplex.glossaries.get",
    "stage": "GA",
    "title": "Read a Glossary"
  },
  {
    "name": "dataplex.glossaries.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Glossary"
  },
  {
    "name": "dataplex.glossaries.import",
    "stage": "GA",
    "title": "Import Glossary"
  },
  {
    "name": "dataplex.glossaries.list",
    "stage": "GA",
    "title": "List Glossaries"
  },
  {
    "name": "dataplex.glossaries.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Glossary"
  },
  {
    "name": "dataplex.glossaries.update",
    "stage": "GA",
    "title": "Update a Glossary"
  },
  {
    "name": "dataplex.glossaryCategories.create",
    "stage": "GA",
    "title": "Create a Glossary Category"
  },
  {
    "name": "dataplex.glossaryCategories.delete",
    "stage": "GA",
    "title": "Delete a Glossary Category"
  },
  {
    "name": "dataplex.glossaryCategories.get",
    "stage": "GA",
    "title": "Read a Glossary Category"
  },
  {
    "name": "dataplex.glossaryCategories.list",
    "stage": "GA",
    "title": "List Glossary Categories"
  },
  {
    "name": "dataplex.glossaryCategories.update",
    "stage": "GA",
    "title": "Update a Glossary Category"
  },
  {
    "name": "dataplex.glossaryTerms.create",
    "stage": "GA",
    "title": "Create a Glossary Term"
  },
  {
    "name": "dataplex.glossaryTerms.delete",
    "stage": "GA",
    "title": "Delete a Glossary Term"
  },
  {
    "name": "dataplex.glossaryTerms.get",
    "stage": "GA",
    "title": "Read a Glossary Term"
  },
  {
    "name": "dataplex.glossaryTerms.list",
    "stage": "GA",
    "title": "List Glossary Terms"
  },
  {
    "name": "dataplex.glossaryTerms.update",
    "stage": "GA",
    "title": "Update a Glossary Term"
  },
  {
    "name": "dataplex.glossaryTerms.use",
    "stage": "GA",
    "title": "Use a Glossary Term for creating entry links"
  },
  {
    "name": "dataplex.lakeActions.list",
    "stage": "GA",
    "title": "List Lake Actions"
  },
  {
    "name": "dataplex.lakes.create",
    "stage": "GA",
    "title": "Create Lake"
  },
  {
    "name": "dataplex.lakes.delete",
    "stage": "GA",
    "title": "Delete Lake"
  },
  {
    "name": "dataplex.lakes.get",
    "stage": "GA",
    "title": "Get Lake"
  },
  {
    "name": "dataplex.lakes.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Lake"
  },
  {
    "name": "dataplex.lakes.list",
    "stage": "GA",
    "title": "List Lakes"
  },
  {
    "name": "dataplex.lakes.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Lake"
  },
  {
    "name": "dataplex.lakes.update",
    "stage": "GA",
    "title": "Update Lake"
  },
  {
    "name": "dataplex.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "name": "dataplex.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "name": "dataplex.metadataJobs.cancel",
    "stage": "GA",
    "title": "Cancel a MetadataJob"
  },
  {
    "name": "dataplex.metadataJobs.create",
    "stage": "GA",
    "title": "Create a Metadata Job"
  },
  {
    "name": "dataplex.metadataJobs.get",
    "stage": "GA",
    "title": "Read a Metadata Job"
  },
  {
    "name": "dataplex.metadataJobs.list",
    "stage": "GA",
    "title": "List Metadata Jobs"
  },
  {
    "name": "dataplex.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "name": "dataplex.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "name": "dataplex.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "name": "dataplex.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "name": "dataplex.partitions.create",
    "stage": "GA",
    "title": "Create Partitions"
  },
  {
    "name": "dataplex.partitions.delete",
    "stage": "GA",
    "title": "Delete Partitions"
  },
  {
    "name": "dataplex.partitions.get",
    "stage": "GA",
    "title": "Get Partition"
  },
  {
    "name": "dataplex.partitions.list",
    "stage": "GA",
    "title": "List Partitions"
  },
  {
    "name": "dataplex.partitions.update",
    "stage": "GA",
    "title": "Update Partitions"
  },
  {
    "name": "dataplex.projects.search",
    "stage": "GA",
    "title": "Consume billing and quota for search operations in the project."
  },
  {
    "name": "dataplex.tasks.cancel",
    "stage": "GA",
    "title": "Cancel Task Job"
  },
  {
    "name": "dataplex.tasks.create",
    "stage": "GA",
    "title": "Create Task"
  },
  {
    "name": "dataplex.tasks.delete",
    "stage": "GA",
    "title": "Delete Task"
  },
  {
    "name": "dataplex.tasks.get",
    "stage": "GA",
    "title": "Get Task"
  },
  {
    "name": "dataplex.tasks.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Task"
  },
  {
    "name": "dataplex.tasks.list",
    "stage": "GA",
    "title": "List Tasks"
  },
  {
    "name": "dataplex.tasks.run",
    "stage": "GA",
    "title": "Trigger Task Run"
  },
  {
    "name": "dataplex.tasks.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Task"
  },
  {
    "name": "dataplex.tasks.update",
    "stage": "GA",
    "title": "Update Task"
  },
  {
    "name": "dataplex.zoneActions.list",
    "stage": "GA",
    "title": "List Zone Actions"
  },
  {
    "name": "dataplex.zones.create",
    "stage": "GA",
    "title": "Create Zone"
  },
  {
    "name": "dataplex.zones.delete",
    "stage": "GA",
    "title": "Delete Zone"
  },
  {
    "name": "dataplex.zones.get",
    "stage": "GA",
    "title": "Get Zone"
  },
  {
    "name": "dataplex.zones.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Zone"
  },
  {
    "name": "dataplex.zones.list",
    "stage": "GA",
    "title": "List Zones"
  },
  {
    "name": "dataplex.zones.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Zone"
  },
  {
    "name": "dataplex.zones.update",
    "stage": "GA",
    "title": "Update Zone"
  },
  {
    "apiDisabled": true,
    "name": "dataprep.projects.use",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.agents.create",
    "stage": "GA",
    "title": "Create Dataproc Agents"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.agents.delete",
    "stage": "GA",
    "title": "Delete Dataproc Agents"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.agents.get",
    "stage": "GA",
    "title": "Read Dataproc Agents"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.agents.list",
    "stage": "GA",
    "title": "List Dataproc Agents"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.agents.update",
    "stage": "GA",
    "title": "Update Dataproc Agents"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.autoscalingPolicies.create",
    "stage": "GA",
    "title": "Create Dataproc Autoscaling Policies"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.autoscalingPolicies.delete",
    "stage": "GA",
    "title": "Delete Dataproc Autoscaling Policies"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.autoscalingPolicies.get",
    "stage": "GA",
    "title": "Get Dataproc Autoscaling Policies"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.autoscalingPolicies.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM policy for Dataproc Workflow Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.autoscalingPolicies.list",
    "stage": "GA",
    "title": "List Dataproc Autoscaling Policies"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.autoscalingPolicies.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM policy for Dataproc Workflow Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.autoscalingPolicies.update",
    "stage": "GA",
    "title": "Update Dataproc Autoscaling Policies"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.autoscalingPolicies.use",
    "stage": "GA",
    "title": "Use Dataproc Autoscaling Policies"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.batches.analyze",
    "stage": "GA",
    "title": "Analyze Dataproc Batches"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.batches.cancel",
    "stage": "GA",
    "title": "Cancel Dataproc Batches"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.batches.create",
    "stage": "GA",
    "title": "Create Dataproc Batches"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.batches.delete",
    "stage": "GA",
    "title": "Delete Dataproc Batches"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.batches.get",
    "stage": "GA",
    "title": "Get Dataproc Batches"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.batches.list",
    "stage": "GA",
    "title": "List Dataproc Batches"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.batches.sparkApplicationRead",
    "stage": "GA",
    "title": "Read Spark application data for Dataproc Batches"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.batches.sparkApplicationWrite",
    "stage": "GA",
    "title": "Write Spark application context for Dataproc Batches"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.clusters.create",
    "stage": "GA",
    "title": "Create Dataproc Clusters"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.clusters.delete",
    "stage": "GA",
    "title": "Delete Dataproc Clusters"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.clusters.get",
    "stage": "GA",
    "title": "Read Dataproc Clusters"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.clusters.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM policy for Dataproc Clusters"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.clusters.list",
    "stage": "GA",
    "title": "List Dataproc Clusters"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.clusters.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM policy for Dataproc Clusters"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.clusters.start",
    "stage": "GA",
    "title": "Start Dataproc Clusters"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.clusters.stop",
    "stage": "GA",
    "title": "Stop Dataproc Clusters"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.clusters.update",
    "stage": "GA",
    "title": "Update Dataproc Clusters"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.clusters.use",
    "stage": "GA",
    "title": "Use Dataproc Clusters"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.jobs.cancel",
    "stage": "GA",
    "title": "Cancel Dataproc Jobs"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.jobs.create",
    "stage": "GA",
    "title": "Create Dataproc Jobs"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.jobs.delete",
    "stage": "GA",
    "title": "Delete Dataproc Jobs"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.jobs.get",
    "stage": "GA",
    "title": "Read Dataproc Jobs"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.jobs.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM policy for Dataproc Jobs"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.jobs.list",
    "stage": "GA",
    "title": "List Dataproc Jobs"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.jobs.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM policy for Dataproc Jobs"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.jobs.update",
    "stage": "GA",
    "title": "Update Dataproc Jobs"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.nodeGroups.create",
    "stage": "GA",
    "title": "Create Dataproc Node Groups"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.nodeGroups.get",
    "stage": "GA",
    "title": "Get Dataproc Node Groups"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.nodeGroups.update",
    "stage": "GA",
    "title": "Update Dataproc Node Groups"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.operations.cancel",
    "stage": "GA",
    "title": "Cancel Dataproc Operations"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.operations.delete",
    "stage": "GA",
    "title": "Delete Dataproc Operations"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.operations.get",
    "stage": "GA",
    "title": "Read Dataproc Operations"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.operations.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM policy for Dataproc Operations"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.operations.list",
    "stage": "GA",
    "title": "List Dataproc Operations"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.operations.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM policy for Dataproc Operation"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.sessionTemplates.create",
    "stage": "GA",
    "title": "Create Dataproc Session Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.sessionTemplates.delete",
    "stage": "GA",
    "title": "Delete Dataproc Session Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.sessionTemplates.get",
    "stage": "GA",
    "title": "Get Dataproc Session Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.sessionTemplates.list",
    "stage": "GA",
    "title": "List Dataproc Session Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.sessionTemplates.update",
    "stage": "GA",
    "title": "Update Dataproc Session Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.sessions.create",
    "stage": "GA",
    "title": "Create Dataproc Sessions"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.sessions.delete",
    "stage": "GA",
    "title": "Delete Dataproc Sessions"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.sessions.get",
    "stage": "GA",
    "title": "Get Dataproc Sessions"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.sessions.list",
    "stage": "GA",
    "title": "List Dataproc Sessions"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.sessions.sparkApplicationRead",
    "stage": "GA",
    "title": "Read Spark application data for Dataproc Sessions"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.sessions.sparkApplicationWrite",
    "stage": "GA",
    "title": "Write Spark application context for Dataproc Sessions"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.sessions.terminate",
    "stage": "GA",
    "title": "Terminate Dataproc Sessions"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.tasks.lease",
    "stage": "GA",
    "title": "Lease Dataproc Tasks"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.tasks.listInvalidatedLeases",
    "stage": "GA",
    "title": "List Invalidated Dataproc Task Leases"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.tasks.reportStatus",
    "stage": "GA",
    "title": "Report Dataproc Task Status"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.workflowTemplates.create",
    "stage": "GA",
    "title": "Create Dataproc Workflow Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.workflowTemplates.delete",
    "stage": "GA",
    "title": "Delete Dataproc Workflow Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.workflowTemplates.get",
    "stage": "GA",
    "title": "Get Dataproc Workflow Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.workflowTemplates.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM policy for Dataproc Workflow Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.workflowTemplates.instantiate",
    "stage": "GA",
    "title": "Instantiate Dataproc Workflow Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.workflowTemplates.instantiateInline",
    "stage": "GA",
    "title": "Instantiate Dataproc Workflow Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.workflowTemplates.list",
    "stage": "GA",
    "title": "List Dataproc Workflow Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.workflowTemplates.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM policy for Dataproc Workflow Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataproc.workflowTemplates.update",
    "stage": "GA",
    "title": "Update Dataproc Workflow Templates"
  },
  {
    "apiDisabled": true,
    "name": "dataprocessing.datasources.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocessing.datasources.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocessing.datasources.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocessing.featurecontrols.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocessing.featurecontrols.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocessing.groupcontrols.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocessing.groupcontrols.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocessing.groupcontrols.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.nodePools.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.nodePools.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.nodePools.deleteNodes",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.nodePools.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.nodePools.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.nodePools.resize",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.nodes.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.nodes.heartbeat",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.nodes.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.nodes.mintOAuthToken",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.nodes.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.workloads.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.workloads.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.workloads.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.workloads.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dataprocrm.workloads.list",
    "stage": "BETA"
  },
  {
    "name": "datastore.backupSchedules.create",
    "stage": "GA"
  },
  {
    "name": "datastore.backupSchedules.delete",
    "stage": "GA"
  },
  {
    "name": "datastore.backupSchedules.get",
    "stage": "GA"
  },
  {
    "name": "datastore.backupSchedules.list",
    "stage": "GA"
  },
  {
    "name": "datastore.backupSchedules.update",
    "stage": "GA"
  },
  {
    "name": "datastore.backups.delete",
    "stage": "GA"
  },
  {
    "name": "datastore.backups.get",
    "stage": "GA"
  },
  {
    "name": "datastore.backups.list",
    "stage": "GA"
  },
  {
    "name": "datastore.backups.restoreDatabase",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.bulkDelete",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.clone",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.create",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.createTagBinding",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.delete",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.deleteTagBinding",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.export",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.get",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.getMetadata",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.import",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.list",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.listEffectiveTags",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.listTagBindings",
    "stage": "GA"
  },
  {
    "name": "datastore.databases.update",
    "stage": "GA"
  },
  {
    "name": "datastore.entities.allocateIds",
    "stage": "GA"
  },
  {
    "name": "datastore.entities.create",
    "stage": "GA"
  },
  {
    "name": "datastore.entities.delete",
    "stage": "GA"
  },
  {
    "name": "datastore.entities.get",
    "stage": "GA"
  },
  {
    "name": "datastore.entities.list",
    "stage": "GA"
  },
  {
    "name": "datastore.entities.update",
    "stage": "GA"
  },
  {
    "name": "datastore.indexes.create",
    "stage": "GA"
  },
  {
    "name": "datastore.indexes.delete",
    "stage": "GA"
  },
  {
    "name": "datastore.indexes.get",
    "stage": "GA"
  },
  {
    "name": "datastore.indexes.list",
    "stage": "GA"
  },
  {
    "name": "datastore.indexes.update",
    "stage": "GA"
  },
  {
    "name": "datastore.insights.get",
    "stage": "GA"
  },
  {
    "name": "datastore.keyVisualizerScans.get",
    "stage": "GA"
  },
  {
    "name": "datastore.keyVisualizerScans.list",
    "stage": "GA"
  },
  {
    "name": "datastore.locations.get",
    "stage": "GA"
  },
  {
    "name": "datastore.locations.list",
    "stage": "GA"
  },
  {
    "name": "datastore.namespaces.get",
    "stage": "GA"
  },
  {
    "name": "datastore.namespaces.list",
    "stage": "GA"
  },
  {
    "name": "datastore.operations.cancel",
    "stage": "GA"
  },
  {
    "name": "datastore.operations.delete",
    "stage": "GA"
  },
  {
    "name": "datastore.operations.get",
    "stage": "GA"
  },
  {
    "name": "datastore.operations.list",
    "stage": "GA"
  },
  {
    "name": "datastore.statistics.get",
    "stage": "GA"
  },
  {
    "name": "datastore.statistics.list",
    "stage": "GA"
  },
  {
    "name": "datastore.userCreds.create",
    "stage": "GA"
  },
  {
    "name": "datastore.userCreds.delete",
    "stage": "GA"
  },
  {
    "name": "datastore.userCreds.get",
    "stage": "GA"
  },
  {
    "name": "datastore.userCreds.list",
    "stage": "GA"
  },
  {
    "name": "datastore.userCreds.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.create",
    "stage": "GA",
    "title": "Create connectionProfile"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.createTagBinding",
    "stage": "GA",
    "title": "Attach Tag to a Connection Profile"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.delete",
    "stage": "GA",
    "title": "Delete connectionProfile"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.deleteTagBinding",
    "stage": "GA",
    "title": "Detach Tag from a Connection Profile"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.destinationTypes",
    "stage": "DEPRECATED",
    "title": "List destination types"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.discover",
    "stage": "GA",
    "title": "Discover connectionProfile"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.get",
    "stage": "GA",
    "title": "Get connectionProfile"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.getIamPolicy",
    "stage": "DEPRECATED",
    "title": "Get IAM Policy on a connectionProfile"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.list",
    "stage": "GA",
    "title": "List connectionProfile"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on a Connection Profile"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.listStaticServiceIps",
    "stage": "DEPRECATED",
    "title": "List static service IP addresses"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on a Connection Profile"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.setIamPolicy",
    "stage": "DEPRECATED",
    "title": "Set IAM Policy on a connectionProfile"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.sourceTypes",
    "stage": "DEPRECATED",
    "title": "List source types"
  },
  {
    "apiDisabled": true,
    "name": "datastream.connectionProfiles.update",
    "stage": "GA",
    "title": "Update connectionProfile"
  },
  {
    "apiDisabled": true,
    "name": "datastream.locations.fetchStaticIps",
    "stage": "GA",
    "title": "Fetch static service IP addresses"
  },
  {
    "apiDisabled": true,
    "name": "datastream.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "datastream.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "datastream.objects.get",
    "stage": "GA",
    "title": "Get stream object"
  },
  {
    "apiDisabled": true,
    "name": "datastream.objects.list",
    "stage": "GA",
    "title": "List stream objects"
  },
  {
    "apiDisabled": true,
    "name": "datastream.objects.startBackfillJob",
    "stage": "GA",
    "title": "Start backfill job"
  },
  {
    "apiDisabled": true,
    "name": "datastream.objects.stopBackfillJob",
    "stage": "GA",
    "title": "Stop backfill job"
  },
  {
    "apiDisabled": true,
    "name": "datastream.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "datastream.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "datastream.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "datastream.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "datastream.privateConnections.create",
    "stage": "GA",
    "title": "Create Private Connection"
  },
  {
    "apiDisabled": true,
    "name": "datastream.privateConnections.createTagBinding",
    "stage": "GA",
    "title": "Attach Tag to a Private Connection"
  },
  {
    "apiDisabled": true,
    "name": "datastream.privateConnections.delete",
    "stage": "GA",
    "title": "Delete Private Connection"
  },
  {
    "apiDisabled": true,
    "name": "datastream.privateConnections.deleteTagBinding",
    "stage": "GA",
    "title": "Detach Tag from a Private Connection"
  },
  {
    "apiDisabled": true,
    "name": "datastream.privateConnections.get",
    "stage": "GA",
    "title": "Get Private Connection"
  },
  {
    "apiDisabled": true,
    "name": "datastream.privateConnections.getIamPolicy",
    "stage": "DEPRECATED",
    "title": "Get IAM Policy on a Private Connection"
  },
  {
    "apiDisabled": true,
    "name": "datastream.privateConnections.list",
    "stage": "GA",
    "title": "List Private Connections"
  },
  {
    "apiDisabled": true,
    "name": "datastream.privateConnections.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on a Private Connection"
  },
  {
    "apiDisabled": true,
    "name": "datastream.privateConnections.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on a Private Connection"
  },
  {
    "apiDisabled": true,
    "name": "datastream.privateConnections.setIamPolicy",
    "stage": "DEPRECATED",
    "title": "Set IAM Policy on a Private Connection"
  },
  {
    "apiDisabled": true,
    "name": "datastream.routes.create",
    "stage": "GA",
    "title": "Create Routes"
  },
  {
    "apiDisabled": true,
    "name": "datastream.routes.delete",
    "stage": "GA",
    "title": "Delete Routes"
  },
  {
    "apiDisabled": true,
    "name": "datastream.routes.get",
    "stage": "GA",
    "title": "Get Routes"
  },
  {
    "apiDisabled": true,
    "name": "datastream.routes.getIamPolicy",
    "stage": "DEPRECATED",
    "title": "Get IAM Policy on a Routes"
  },
  {
    "apiDisabled": true,
    "name": "datastream.routes.list",
    "stage": "GA",
    "title": "List Routes"
  },
  {
    "apiDisabled": true,
    "name": "datastream.routes.setIamPolicy",
    "stage": "DEPRECATED",
    "title": "Set IAM Policy on a Routes"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.computeState",
    "stage": "DEPRECATED",
    "title": "Compute state of stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.create",
    "stage": "GA",
    "title": "Create stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.createTagBinding",
    "stage": "GA",
    "title": "Attach Tag to a Stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.delete",
    "stage": "GA",
    "title": "Delete stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.deleteTagBinding",
    "stage": "GA",
    "title": "Detach Tag from a Stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.fetchErrors",
    "stage": "GA",
    "title": "Fetch any errors on a stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.get",
    "stage": "GA",
    "title": "Get stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.getIamPolicy",
    "stage": "DEPRECATED",
    "title": "Get IAM Policy on stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.list",
    "stage": "GA",
    "title": "List stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on a Stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on a Stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.pause",
    "stage": "DEPRECATED",
    "title": "Pause stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.resume",
    "stage": "DEPRECATED",
    "title": "Resume stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.setIamPolicy",
    "stage": "DEPRECATED",
    "title": "Set IAM Policy on stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.start",
    "stage": "DEPRECATED",
    "title": "Start stream"
  },
  {
    "apiDisabled": true,
    "name": "datastream.streams.update",
    "stage": "GA",
    "title": "Update stream"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.datasources.delete",
    "stage": "BETA",
    "title": "Delete data source"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.datasources.get",
    "stage": "BETA",
    "title": "Read data source"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.datasources.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.datasources.move",
    "stage": "BETA",
    "title": "Move the datasource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.datasources.restoreTrash",
    "stage": "BETA",
    "title": "Restore from trash the datasource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.datasources.search",
    "stage": "BETA",
    "title": "Show data source in search"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.datasources.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.datasources.settingsShare",
    "stage": "BETA",
    "title": "Change the datasource sharing setting"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.datasources.share",
    "stage": "BETA",
    "title": "Share the datasource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.datasources.trash",
    "stage": "BETA",
    "title": "Trash the datasource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.datasources.update",
    "stage": "BETA",
    "title": "Update data source"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.reports.delete",
    "stage": "BETA",
    "title": "Delete report"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.reports.get",
    "stage": "BETA",
    "title": "Read report"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.reports.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.reports.move",
    "stage": "BETA",
    "title": "Move the report"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.reports.restoreTrash",
    "stage": "BETA",
    "title": "Restore from trash the report"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.reports.search",
    "stage": "BETA",
    "title": "Show report in search"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.reports.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.reports.settingsShare",
    "stage": "BETA",
    "title": "Change the report sharing setting"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.reports.share",
    "stage": "BETA",
    "title": "Share the report"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.reports.trash",
    "stage": "BETA",
    "title": "Trash the report"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.reports.update",
    "stage": "BETA",
    "title": "Update report"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.workspaces.createUnder",
    "stage": "BETA",
    "title": "Create under the workspace"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.workspaces.delete",
    "stage": "BETA",
    "title": "Delete workspace"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.workspaces.get",
    "stage": "BETA",
    "title": "Read workspace"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.workspaces.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.workspaces.moveIn",
    "stage": "BETA",
    "title": "Move into the workspace"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.workspaces.moveOut",
    "stage": "BETA",
    "title": "Move out of the workspace"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.workspaces.restoreTrash",
    "stage": "BETA",
    "title": "Restore from trash the workspace"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.workspaces.search",
    "stage": "BETA",
    "title": "Show workspace in search"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.workspaces.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.workspaces.trash",
    "stage": "BETA",
    "title": "Trash the workspace"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "datastudio.workspaces.update",
    "stage": "BETA",
    "title": "Update workspace"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.compositeTypes.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.compositeTypes.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.compositeTypes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.compositeTypes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.compositeTypes.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.deployments.cancelPreview",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.deployments.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.deployments.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.deployments.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.deployments.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.deployments.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.deployments.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.deployments.stop",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.deployments.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.manifests.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.manifests.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.resources.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.resources.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.typeProviders.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.typeProviders.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.typeProviders.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "deploymentmanager.typeProviders.getType",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.typeProviders.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "deploymentmanager.typeProviders.listTypes",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.typeProviders.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "deploymentmanager.types.create",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "deploymentmanager.types.delete",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "deploymentmanager.types.get",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "deploymentmanager.types.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "deploymentmanager.types.update",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.applicationTemplateRevisions.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.applicationTemplateRevisions.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.applicationTemplateRevisions.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.applicationTemplates.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.applicationTemplates.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.applicationTemplates.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.applicationTemplates.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.applicationTemplates.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.applications.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.applications.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.applications.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.applications.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.applications.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogTemplateRevisions.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogTemplateRevisions.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogTemplateRevisions.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogTemplateRevisions.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogTemplates.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogTemplates.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogTemplates.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogTemplates.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogTemplates.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogs.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogs.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogs.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogs.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.catalogs.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.components.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.components.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.components.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.components.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.components.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.connections.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.connections.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.connections.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.connections.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.connections.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.sharedTemplateRevisions.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.sharedTemplateRevisions.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.sharedTemplates.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.sharedTemplates.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.shares.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.shares.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.shares.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.shares.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.spaces.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.spaces.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.spaces.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.spaces.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.spaces.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.spaces.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "designcenter.spaces.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.accountConnectors.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.accountConnectors.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.accountConnectors.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.accountConnectors.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.accountConnectors.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.connections.constructGitHubAppManifest",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.connections.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.connections.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.connections.fetchGitHubInstallations",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.connections.fetchLinkableGitRepositories",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.connections.generateGitHubStateToken",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.connections.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.connections.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.connections.processGitHubAppCreationCallback",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.connections.processGitHubOAuthCallback",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.connections.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.gitRepositoryLinks.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.gitRepositoryLinks.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.gitRepositoryLinks.fetchGitRefs",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.gitRepositoryLinks.fetchReadToken",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.gitRepositoryLinks.fetchReadWriteToken",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.gitRepositoryLinks.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.gitRepositoryLinks.gitProxyRead",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.gitRepositoryLinks.gitProxyWrite",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.gitRepositoryLinks.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.providers.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.users.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.users.deleteSelf",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.users.fetchAccessToken",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.users.finishOAuth",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.users.getSelf",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.users.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "developerconnect.users.startOAuth",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "devicestreaming.deviceSessions.cancel",
    "stage": "GA",
    "title": "Cancel a device session"
  },
  {
    "apiDisabled": true,
    "name": "devicestreaming.deviceSessions.create",
    "stage": "GA",
    "title": "Create a device session"
  },
  {
    "apiDisabled": true,
    "name": "devicestreaming.deviceSessions.get",
    "stage": "GA",
    "title": "Get a device session"
  },
  {
    "apiDisabled": true,
    "name": "devicestreaming.deviceSessions.list",
    "stage": "GA",
    "title": "List device sesssions"
  },
  {
    "apiDisabled": true,
    "name": "devicestreaming.deviceSessions.update",
    "stage": "GA",
    "title": "Extend a device session"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.create",
    "stage": "GA",
    "title": "Create Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.delete",
    "stage": "GA",
    "title": "Delete Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.export",
    "stage": "GA",
    "title": "Export Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.get",
    "stage": "GA",
    "title": "Get Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.import",
    "stage": "GA",
    "title": "Import Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.list",
    "stage": "GA",
    "title": "List Agents"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.restore",
    "stage": "GA",
    "title": "Restore Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.search",
    "stage": "GA",
    "title": "Search Agents"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.searchResources",
    "stage": "GA",
    "title": "Search Resources"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.train",
    "stage": "GA",
    "title": "Train Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.update",
    "stage": "GA",
    "title": "Update Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.agents.validate",
    "stage": "GA",
    "title": "Validate Agent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.answerrecords.delete",
    "stage": "GA",
    "title": "Delete Answer Record"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.answerrecords.get",
    "stage": "GA",
    "title": "Get Answer Record"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.answerrecords.list",
    "stage": "GA",
    "title": "List Answer Records"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.answerrecords.update",
    "stage": "GA",
    "title": "Update Answer Record"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.callMatchers.create",
    "stage": "GA",
    "title": "Create Conversation Call Matcher"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.callMatchers.delete",
    "stage": "GA",
    "title": "Delete Conversation Call Matcher"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.callMatchers.list",
    "stage": "GA",
    "title": "List Conversation Call Matchers"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.changelogs.get",
    "stage": "GA",
    "title": "Get Changelog"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.changelogs.list",
    "stage": "GA",
    "title": "List Changelogs"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.contexts.create",
    "stage": "GA",
    "title": "Create Context"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.contexts.delete",
    "stage": "GA",
    "title": "Delete Context"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.contexts.get",
    "stage": "GA",
    "title": "Get Context"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.contexts.list",
    "stage": "GA",
    "title": "List Contexts"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.contexts.update",
    "stage": "GA",
    "title": "Update Context"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationDatasets.create",
    "stage": "GA",
    "title": "Create Conversation Dataset"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationDatasets.delete",
    "stage": "GA",
    "title": "Delete Conversation Dataset"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationDatasets.get",
    "stage": "GA",
    "title": "Get Conversation Dataset"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationDatasets.import",
    "stage": "GA",
    "title": "Import Conversation Dataset"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationDatasets.list",
    "stage": "GA",
    "title": "List Conversation Datasets"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationModels.create",
    "stage": "GA",
    "title": "Create Conversation Model"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationModels.delete",
    "stage": "GA",
    "title": "Delete Conversation Model"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationModels.deploy",
    "stage": "GA",
    "title": "Deploy Conversation Model"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationModels.get",
    "stage": "GA",
    "title": "Get Conversation Model"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationModels.list",
    "stage": "GA",
    "title": "List Conversation Models"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationModels.undeploy",
    "stage": "GA",
    "title": "Undeploy Conversation Model"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationProfiles.create",
    "stage": "GA",
    "title": "Create Conversation Profile"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationProfiles.delete",
    "stage": "GA",
    "title": "Delete Conversation Profile"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationProfiles.get",
    "stage": "GA",
    "title": "Get Conversation Profile"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationProfiles.list",
    "stage": "GA",
    "title": "List Conversation Profiles"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversationProfiles.update",
    "stage": "GA",
    "title": "Update Conversation Profile"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversations.addPhoneNumber",
    "stage": "GA",
    "title": "Add Conversation Phone Number"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversations.complete",
    "stage": "GA",
    "title": "Complete Conversation"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversations.create",
    "stage": "GA",
    "title": "Create Conversation"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversations.get",
    "stage": "GA",
    "title": "Get Conversation"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversations.list",
    "stage": "GA",
    "title": "List Conversations"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.conversations.update",
    "stage": "GA",
    "title": "Update Conversation"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.deployments.get",
    "stage": "BETA",
    "title": "Get Deployment"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.deployments.list",
    "stage": "BETA",
    "title": "List Deployments"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.documents.create",
    "stage": "GA",
    "title": "Create Document"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.documents.delete",
    "stage": "GA",
    "title": "Delete Document"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.documents.get",
    "stage": "GA",
    "title": "Get Document"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.documents.list",
    "stage": "GA",
    "title": "List Documents"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.encryptionspec.get",
    "stage": "GA",
    "title": "Get Encryption Spec"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.encryptionspec.update",
    "stage": "GA",
    "title": "Update Encryption Spec"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.create",
    "stage": "GA",
    "title": "Create Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.createEntity",
    "stage": "GA",
    "title": "Create Entities in an Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.delete",
    "stage": "GA",
    "title": "Delete EntityType"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.deleteEntity",
    "stage": "GA",
    "title": "Delete Entities in an Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.get",
    "stage": "GA",
    "title": "Get Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.list",
    "stage": "GA",
    "title": "List Entity Types"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.update",
    "stage": "GA",
    "title": "Update Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.entityTypes.updateEntity",
    "stage": "GA",
    "title": "Update Entities in an Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.environments.create",
    "stage": "GA",
    "title": "Create Environment"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.environments.delete",
    "stage": "GA",
    "title": "Delete Environment"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.environments.get",
    "stage": "GA",
    "title": "Get Environment"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.environments.getHistory",
    "stage": "GA",
    "title": "Get Environment History"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.environments.list",
    "stage": "GA",
    "title": "List Environments"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.environments.lookupHistory",
    "stage": "GA",
    "title": "Lookup Environment History"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.environments.runContinuousTest",
    "stage": "BETA",
    "title": "Run Continuous Test"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.environments.update",
    "stage": "GA",
    "title": "Update Environment"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.examples.create",
    "stage": "GA",
    "title": "Create Example"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.examples.delete",
    "stage": "GA",
    "title": "Delete Example"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.examples.get",
    "stage": "GA",
    "title": "Get Example"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.examples.list",
    "stage": "GA",
    "title": "List Examples"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.examples.update",
    "stage": "GA",
    "title": "Update Example"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.experiments.create",
    "stage": "BETA",
    "title": "Create Experiment"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.experiments.delete",
    "stage": "BETA",
    "title": "Delete Experiment"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.experiments.get",
    "stage": "BETA",
    "title": "Get Experiment"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.experiments.list",
    "stage": "BETA",
    "title": "List Experiments"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.experiments.update",
    "stage": "BETA",
    "title": "Update Experiment"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.flows.create",
    "stage": "GA",
    "title": "Create Flow"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.flows.delete",
    "stage": "GA",
    "title": "Delete Flow"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.flows.get",
    "stage": "GA",
    "title": "Get Flow"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.flows.list",
    "stage": "GA",
    "title": "List Flows"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.flows.train",
    "stage": "GA",
    "title": "Train Flow"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.flows.update",
    "stage": "GA",
    "title": "Update Flow"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.flows.validate",
    "stage": "GA",
    "title": "Validate Flow"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.fulfillments.get",
    "stage": "GA",
    "title": "Get Fulfillments"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.fulfillments.update",
    "stage": "GA",
    "title": "Update Fulfillments"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.generators.create",
    "stage": "GA",
    "title": "Create Generator"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.generators.delete",
    "stage": "GA",
    "title": "Delete Generator"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.generators.get",
    "stage": "GA",
    "title": "Get Generator"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.generators.list",
    "stage": "GA",
    "title": "List Generators"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.generators.update",
    "stage": "GA",
    "title": "Update Generator"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.integrations.create",
    "stage": "GA",
    "title": "Create Integration"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.integrations.delete",
    "stage": "GA",
    "title": "Delete Integration"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.integrations.get",
    "stage": "GA",
    "title": "Get Integration"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.integrations.list",
    "stage": "GA",
    "title": "List Integrations"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.integrations.update",
    "stage": "GA",
    "title": "Update Integration"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.intents.create",
    "stage": "GA",
    "title": "Create Intent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.intents.delete",
    "stage": "GA",
    "title": "Delete Intent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.intents.get",
    "stage": "GA",
    "title": "Get Intent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.intents.list",
    "stage": "GA",
    "title": "List Intents"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.intents.update",
    "stage": "GA",
    "title": "Update Intent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.knowledgeBases.create",
    "stage": "GA",
    "title": "Create Knowledge Base"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.knowledgeBases.delete",
    "stage": "GA",
    "title": "Delete Knowledge Base"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.knowledgeBases.get",
    "stage": "GA",
    "title": "Get Knowledge Base"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.knowledgeBases.list",
    "stage": "GA",
    "title": "List Knowledge Bases"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.knowledgeBases.update",
    "stage": "GA",
    "title": "Update Knowledge Base"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.messages.list",
    "stage": "GA",
    "title": "List Conversation Messages"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.modelEvaluations.get",
    "stage": "GA",
    "title": "Get Conversation Model Evaluation"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.modelEvaluations.list",
    "stage": "GA",
    "title": "List Conversation Model Evaluations"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.pages.create",
    "stage": "GA",
    "title": "Create Page"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.pages.delete",
    "stage": "GA",
    "title": "Delete Page"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.pages.get",
    "stage": "GA",
    "title": "Get Page"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.pages.list",
    "stage": "GA",
    "title": "List Pages"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.pages.update",
    "stage": "GA",
    "title": "Update Page"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.participants.analyzeContent",
    "stage": "GA",
    "title": "Analyze Content Contributed by a Participant"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.participants.create",
    "stage": "GA",
    "title": "Create Conversation Participant"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.participants.get",
    "stage": "GA",
    "title": "Get Conversation Participant"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.participants.list",
    "stage": "GA",
    "title": "List Conversation Participants"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.participants.suggest",
    "stage": "GA",
    "title": "Generate Suggestion for a Participant"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.participants.update",
    "stage": "GA",
    "title": "Update Conversation Participant"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.phoneNumberOrders.cancel",
    "stage": "GA",
    "title": "Cancel Phone Number Order"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.phoneNumberOrders.create",
    "stage": "GA",
    "title": "Create Phone Number Order"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.phoneNumberOrders.get",
    "stage": "GA",
    "title": "Get Phone Number Order"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.phoneNumberOrders.list",
    "stage": "GA",
    "title": "List Phone Number Orders"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.phoneNumberOrders.update",
    "stage": "GA",
    "title": "Update Phone Number Order"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.phoneNumbers.delete",
    "stage": "GA",
    "title": "Delete Phone Number"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.phoneNumbers.list",
    "stage": "GA",
    "title": "List Phone Numbers"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.phoneNumbers.undelete",
    "stage": "GA",
    "title": "Undelete Phone Number"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.phoneNumbers.update",
    "stage": "GA",
    "title": "Update Phone Number"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.playbooks.create",
    "stage": "GA",
    "title": "Create Playbook"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.playbooks.delete",
    "stage": "GA",
    "title": "Delete Playbook"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.playbooks.get",
    "stage": "GA",
    "title": "Get Playbook"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.playbooks.list",
    "stage": "GA",
    "title": "List Playbooks"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.playbooks.update",
    "stage": "GA",
    "title": "Update Playbook"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.securitySettings.create",
    "stage": "GA",
    "title": "Create SecuritySettings"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.securitySettings.delete",
    "stage": "GA",
    "title": "Delete SecuritySettings"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.securitySettings.get",
    "stage": "GA",
    "title": "Get SecuritySettings"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.securitySettings.list",
    "stage": "GA",
    "title": "List SecuritySettings"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.securitySettings.update",
    "stage": "GA",
    "title": "Update SecuritySettings"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessionEntityTypes.create",
    "stage": "GA",
    "title": "Create Session Entity Types"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessionEntityTypes.delete",
    "stage": "GA",
    "title": "Delete Session Entity Type"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessionEntityTypes.get",
    "stage": "GA",
    "title": "Get Session Entity dialog engineType"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessionEntityTypes.list",
    "stage": "GA",
    "title": "List Session Entity Types"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessionEntityTypes.update",
    "stage": "GA",
    "title": "Update Session Entity Types"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessions.detectIntent",
    "stage": "GA",
    "title": "Detect Intent"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.sessions.streamingDetectIntent",
    "stage": "GA",
    "title": "Detect Intent with Streaming Audio"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.smartMessagingEntries.create",
    "stage": "GA",
    "title": "Create Smart Messaging Entry"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.smartMessagingEntries.delete",
    "stage": "GA",
    "title": "Delete Smart Messaging Entry"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.smartMessagingEntries.get",
    "stage": "GA",
    "title": "Get Smart Messaging Entry"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.smartMessagingEntries.list",
    "stage": "GA",
    "title": "List Smart Messaging Entries"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.testcases.calculateCoverage",
    "stage": "BETA",
    "title": "Calculate Test Coverage"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.testcases.create",
    "stage": "BETA",
    "title": "Create Test Case"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.testcases.delete",
    "stage": "BETA",
    "title": "Delete Test Cases"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.testcases.export",
    "stage": "BETA",
    "title": "Export Test Cases"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.testcases.get",
    "stage": "BETA",
    "title": "Get Test Case"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.testcases.import",
    "stage": "BETA",
    "title": "Import Test Cases"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.testcases.list",
    "stage": "BETA",
    "title": "List Test Cases"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.testcases.run",
    "stage": "BETA",
    "title": "Run Test Case"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.testcases.update",
    "stage": "BETA",
    "title": "Update Test Case"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.tools.create",
    "stage": "GA",
    "title": "Create Tool"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.tools.delete",
    "stage": "GA",
    "title": "Delete Tool"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.tools.get",
    "stage": "GA",
    "title": "Get Tool"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.tools.list",
    "stage": "GA",
    "title": "List Tools"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.tools.update",
    "stage": "GA",
    "title": "Update Tool"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.transitionRouteGroups.create",
    "stage": "GA",
    "title": "Create Transition Route Group"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.transitionRouteGroups.delete",
    "stage": "GA",
    "title": "Delete Transition Route Group"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.transitionRouteGroups.get",
    "stage": "GA",
    "title": "Get Transition Route Group"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.transitionRouteGroups.list",
    "stage": "GA",
    "title": "List Transition Route Groups"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.transitionRouteGroups.update",
    "stage": "GA",
    "title": "Update Transition Route Group"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.versions.create",
    "stage": "GA",
    "title": "Create Version"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.versions.delete",
    "stage": "GA",
    "title": "Delete Version"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.versions.get",
    "stage": "GA",
    "title": "Get Version"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.versions.list",
    "stage": "GA",
    "title": "List Versions"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.versions.load",
    "stage": "GA",
    "title": "Load Version to Draft"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.versions.update",
    "stage": "GA",
    "title": "Update Version"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.webhooks.create",
    "stage": "GA",
    "title": "Create Webhook"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.webhooks.delete",
    "stage": "GA",
    "title": "Delete Webhook"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.webhooks.get",
    "stage": "GA",
    "title": "Get Webhook"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.webhooks.list",
    "stage": "GA",
    "title": "List Webhooks"
  },
  {
    "apiDisabled": true,
    "name": "dialogflow.webhooks.update",
    "stage": "GA",
    "title": "Update Webhook"
  },
  {
    "description": "Create an account",
    "name": "discoveryengine.accounts.create",
    "stage": "BETA",
    "title": "Create account"
  },
  {
    "apiDisabled": true,
    "description": "Get a aclConfig",
    "name": "discoveryengine.aclConfigs.get",
    "stage": "GA",
    "title": "Get aclConfig"
  },
  {
    "apiDisabled": true,
    "description": "Update a aclConfig",
    "name": "discoveryengine.aclConfigs.update",
    "stage": "GA",
    "title": "Update aclConfig"
  },
  {
    "description": "Create an agent",
    "name": "discoveryengine.agents.create",
    "stage": "BETA",
    "title": "Create agent"
  },
  {
    "description": "Delete an agent",
    "name": "discoveryengine.agents.delete",
    "stage": "BETA",
    "title": "Delete agent"
  },
  {
    "description": "Get an agent",
    "name": "discoveryengine.agents.get",
    "stage": "BETA",
    "title": "Get agent"
  },
  {
    "description": "List agents",
    "name": "discoveryengine.agents.list",
    "stage": "BETA",
    "title": "List agents"
  },
  {
    "description": "Update an agent",
    "name": "discoveryengine.agents.update",
    "stage": "BETA",
    "title": "Update agent"
  },
  {
    "description": "Create an alert policy.",
    "name": "discoveryengine.alertPolicies.create",
    "stage": "BETA",
    "title": "Create alert policy"
  },
  {
    "description": "Get an alert policy.",
    "name": "discoveryengine.alertPolicies.get",
    "stage": "BETA",
    "title": "Get alert policy"
  },
  {
    "description": "Update an alert policy.",
    "name": "discoveryengine.alertPolicies.update",
    "stage": "BETA",
    "title": "Update alert policy"
  },
  {
    "description": "Acquire an analytics dashboard session to create embed iframe",
    "name": "discoveryengine.analytics.acquireDashboardSession",
    "stage": "BETA",
    "title": "Acquire an analytics dashboard session"
  },
  {
    "description": "Refresh an analytics dashboard session's tokens to continue the embed iframe",
    "name": "discoveryengine.analytics.refreshDashboardSessionTokens",
    "stage": "BETA",
    "title": "Refresh an analytics dashboard session's tokens"
  },
  {
    "apiDisabled": true,
    "description": "Get a answer",
    "name": "discoveryengine.answers.get",
    "stage": "GA",
    "title": "Get answer"
  },
  {
    "apiDisabled": true,
    "description": "Get an answer produced by an assist call on an assistant",
    "name": "discoveryengine.assistAnswers.get",
    "stage": "GA",
    "title": "Get assist answer"
  },
  {
    "apiDisabled": true,
    "description": "Query an assistant",
    "name": "discoveryengine.assistants.assist",
    "stage": "GA",
    "title": "Query assistant"
  },
  {
    "apiDisabled": true,
    "description": "Create an assistant",
    "name": "discoveryengine.assistants.create",
    "stage": "GA",
    "title": "Create assistant"
  },
  {
    "apiDisabled": true,
    "description": "Delete an assistant",
    "name": "discoveryengine.assistants.delete",
    "stage": "GA",
    "title": "Delete assistant"
  },
  {
    "apiDisabled": true,
    "description": "Get an assistant",
    "name": "discoveryengine.assistants.get",
    "stage": "GA",
    "title": "Get assistant"
  },
  {
    "apiDisabled": true,
    "description": "List assistants",
    "name": "discoveryengine.assistants.list",
    "stage": "GA",
    "title": "List assistants"
  },
  {
    "apiDisabled": true,
    "description": "Update an assistant",
    "name": "discoveryengine.assistants.update",
    "stage": "GA",
    "title": "Update assistant"
  },
  {
    "description": "Create an audio overview",
    "name": "discoveryengine.audioOverviews.create",
    "stage": "BETA",
    "title": "Create audio overview"
  },
  {
    "description": "Delete an audio overview",
    "name": "discoveryengine.audioOverviews.delete",
    "stage": "BETA",
    "title": "Delete audio overview"
  },
  {
    "description": "Get an audio overview",
    "name": "discoveryengine.audioOverviews.get",
    "stage": "BETA",
    "title": "Get audio overview"
  },
  {
    "description": "Get an ICE config",
    "name": "discoveryengine.audioOverviews.getIceConfig",
    "stage": "BETA",
    "title": "Get ICE config"
  },
  {
    "description": "Send an SDP offer",
    "name": "discoveryengine.audioOverviews.sendSdpOffer",
    "stage": "BETA",
    "title": "Send SDP offer"
  },
  {
    "description": "Get a branch",
    "name": "discoveryengine.branches.get",
    "stage": "BETA",
    "title": "Get branch"
  },
  {
    "description": "List branches",
    "name": "discoveryengine.branches.list",
    "stage": "BETA",
    "title": "List branches"
  },
  {
    "description": "Get a cmekConfig",
    "name": "discoveryengine.cmekConfigs.get",
    "stage": "BETA",
    "title": "Get cmekConfig"
  },
  {
    "description": "List CmekConfigs",
    "name": "discoveryengine.cmekConfigs.list",
    "stage": "BETA",
    "title": "List CmekConfigs"
  },
  {
    "description": "Update a cmekConfig",
    "name": "discoveryengine.cmekConfigs.update",
    "stage": "BETA",
    "title": "Update cmekConfig"
  },
  {
    "description": "Delete a collection",
    "name": "discoveryengine.collections.delete",
    "stage": "BETA",
    "title": "Delete a collection"
  },
  {
    "description": "Get a collection",
    "name": "discoveryengine.collections.get",
    "stage": "BETA",
    "title": "Get a collection"
  },
  {
    "description": "List collections",
    "name": "discoveryengine.collections.list",
    "stage": "BETA",
    "title": "List collections"
  },
  {
    "description": "Get suggestions within a data store or engine",
    "name": "discoveryengine.completionConfigs.completeQuery",
    "stage": "BETA",
    "title": "Get suggestions within data store or engine"
  },
  {
    "description": "Get a data store completion config",
    "name": "discoveryengine.completionConfigs.get",
    "stage": "BETA",
    "title": "Get data store completion config"
  },
  {
    "description": "Update a data store completion config",
    "name": "discoveryengine.completionConfigs.update",
    "stage": "BETA",
    "title": "Update data store completion config"
  },
  {
    "description": "Cancel a connector run",
    "name": "discoveryengine.connectorRuns.cancel",
    "stage": "BETA",
    "title": "Cancel a connector run"
  },
  {
    "description": "List connector runs under the data connector",
    "name": "discoveryengine.connectorRuns.list",
    "stage": "BETA",
    "title": "List connector runs under the data connector"
  },
  {
    "apiDisabled": true,
    "description": "Create a control",
    "name": "discoveryengine.controls.create",
    "stage": "GA",
    "title": "Create control"
  },
  {
    "apiDisabled": true,
    "description": "Delete a control",
    "name": "discoveryengine.controls.delete",
    "stage": "GA",
    "title": "Delete control"
  },
  {
    "apiDisabled": true,
    "description": "Get a control",
    "name": "discoveryengine.controls.get",
    "stage": "GA",
    "title": "Get control"
  },
  {
    "apiDisabled": true,
    "description": "List controls under a datastore",
    "name": "discoveryengine.controls.list",
    "stage": "GA",
    "title": "List controls under a datastore"
  },
  {
    "apiDisabled": true,
    "description": "Update a control",
    "name": "discoveryengine.controls.update",
    "stage": "GA",
    "title": "Update control"
  },
  {
    "apiDisabled": true,
    "description": "Converse a conversation",
    "name": "discoveryengine.conversations.converse",
    "stage": "GA",
    "title": "Converse conversation"
  },
  {
    "apiDisabled": true,
    "description": "Create a conversation",
    "name": "discoveryengine.conversations.create",
    "stage": "GA",
    "title": "Create conversation"
  },
  {
    "apiDisabled": true,
    "description": "Delete a conversation",
    "name": "discoveryengine.conversations.delete",
    "stage": "GA",
    "title": "Delete conversation"
  },
  {
    "apiDisabled": true,
    "description": "Get a conversation",
    "name": "discoveryengine.conversations.get",
    "stage": "GA",
    "title": "Get conversation"
  },
  {
    "apiDisabled": true,
    "description": "List conversations",
    "name": "discoveryengine.conversations.list",
    "stage": "GA",
    "title": "List conversations"
  },
  {
    "apiDisabled": true,
    "description": "Update a conversation",
    "name": "discoveryengine.conversations.update",
    "stage": "GA",
    "title": "Update conversation"
  },
  {
    "description": "Create access token",
    "name": "discoveryengine.dataConnectors.acquireAccessToken",
    "stage": "BETA",
    "title": "Create access token"
  },
  {
    "description": "Acquire and store refresh token",
    "name": "discoveryengine.dataConnectors.acquireAndStoreRefreshToken",
    "stage": "BETA",
    "title": "Acquire and store refresh token"
  },
  {
    "description": "Build an action invocation",
    "name": "discoveryengine.dataConnectors.buildActionInvocation",
    "stage": "BETA",
    "title": "Build action invocation"
  },
  {
    "description": "Check refresh token",
    "name": "discoveryengine.dataConnectors.checkRefreshToken",
    "stage": "BETA",
    "title": "Check refresh token"
  },
  {
    "description": "Execute an action",
    "name": "discoveryengine.dataConnectors.executeAction",
    "stage": "BETA",
    "title": "Execute action"
  },
  {
    "description": "Get data connector",
    "name": "discoveryengine.dataConnectors.get",
    "stage": "BETA",
    "title": "Get data connector"
  },
  {
    "description": "Query available actions for a data connector",
    "name": "discoveryengine.dataConnectors.queryAvailableActions",
    "stage": "BETA",
    "title": "Query available actions"
  },
  {
    "description": "Starts an immediate synchronization process for a Data Connector singleton resource",
    "name": "discoveryengine.dataConnectors.startConnectorRun",
    "stage": "BETA",
    "title": "Starts an immediate synchronization process for a Data Connector singleton resource"
  },
  {
    "description": "Update a Data Connector",
    "name": "discoveryengine.dataConnectors.update",
    "stage": "BETA",
    "title": "Update Data Connector"
  },
  {
    "description": "Get suggestions within a data store",
    "name": "discoveryengine.dataStores.completeQuery",
    "stage": "BETA",
    "title": "Get suggestions within data store"
  },
  {
    "apiDisabled": true,
    "description": "Create a data store",
    "name": "discoveryengine.dataStores.create",
    "stage": "GA",
    "title": "Create data store"
  },
  {
    "apiDisabled": true,
    "description": "Delete a data store",
    "name": "discoveryengine.dataStores.delete",
    "stage": "GA",
    "title": "Delete data store"
  },
  {
    "description": "Enroll a data store to solutions",
    "name": "discoveryengine.dataStores.enrollSolutions",
    "stage": "BETA",
    "title": "Enroll data store to solutions"
  },
  {
    "apiDisabled": true,
    "description": "Get a data store",
    "name": "discoveryengine.dataStores.get",
    "stage": "GA",
    "title": "Get data store"
  },
  {
    "apiDisabled": true,
    "description": "List data stores",
    "name": "discoveryengine.dataStores.list",
    "stage": "GA",
    "title": "List data stores"
  },
  {
    "apiDisabled": true,
    "description": "List custom models within a data store",
    "name": "discoveryengine.dataStores.listCustomModels",
    "stage": "GA",
    "title": "List custom models within a data store"
  },
  {
    "apiDisabled": true,
    "description": "Train custom model",
    "name": "discoveryengine.dataStores.trainCustomModel",
    "stage": "GA",
    "title": "Train custom model"
  },
  {
    "apiDisabled": true,
    "description": "Update a data store",
    "name": "discoveryengine.dataStores.update",
    "stage": "GA",
    "title": "Update data store"
  },
  {
    "description": "Get a data store document processing config",
    "name": "discoveryengine.documentProcessingConfigs.get",
    "stage": "BETA",
    "title": "Get data store document processing config"
  },
  {
    "description": "Update a data store document processing config",
    "name": "discoveryengine.documentProcessingConfigs.update",
    "stage": "BETA",
    "title": "Update data store document processing config"
  },
  {
    "description": "Batch get documents metadata under a branch",
    "name": "discoveryengine.documents.batchGetDocumentsMetadata",
    "stage": "BETA",
    "title": "Batch get documents metadata"
  },
  {
    "apiDisabled": true,
    "description": "Create a document",
    "name": "discoveryengine.documents.create",
    "stage": "GA",
    "title": "Create document"
  },
  {
    "apiDisabled": true,
    "description": "Delete a document",
    "name": "discoveryengine.documents.delete",
    "stage": "GA",
    "title": "Delete document"
  },
  {
    "apiDisabled": true,
    "description": "Get a document",
    "name": "discoveryengine.documents.get",
    "stage": "GA",
    "title": "Get document"
  },
  {
    "apiDisabled": true,
    "description": "Import document under a branch",
    "name": "discoveryengine.documents.import",
    "stage": "GA",
    "title": "Import document"
  },
  {
    "apiDisabled": true,
    "description": "List documents",
    "name": "discoveryengine.documents.list",
    "stage": "GA",
    "title": "List documents"
  },
  {
    "apiDisabled": true,
    "description": "Purge documents under a branch",
    "name": "discoveryengine.documents.purge",
    "stage": "GA",
    "title": "Purge documents"
  },
  {
    "apiDisabled": true,
    "description": "Update a document",
    "name": "discoveryengine.documents.update",
    "stage": "GA",
    "title": "Update document"
  },
  {
    "apiDisabled": true,
    "description": "Create an engine",
    "name": "discoveryengine.engines.create",
    "stage": "GA",
    "title": "Create engine"
  },
  {
    "apiDisabled": true,
    "description": "Delete an engine",
    "name": "discoveryengine.engines.delete",
    "stage": "GA",
    "title": "Delete engine"
  },
  {
    "apiDisabled": true,
    "description": "Get a engine under a collection",
    "name": "discoveryengine.engines.get",
    "stage": "GA",
    "title": "Get engine"
  },
  {
    "apiDisabled": true,
    "description": "List engines under a collection",
    "name": "discoveryengine.engines.list",
    "stage": "GA",
    "title": "List engines"
  },
  {
    "apiDisabled": true,
    "description": "Pause a recommendation engine under a collection",
    "name": "discoveryengine.engines.pause",
    "stage": "GA",
    "title": "Pause recommendation Engine"
  },
  {
    "apiDisabled": true,
    "description": "Resume an engine serving config under a collection",
    "name": "discoveryengine.engines.resume",
    "stage": "GA",
    "title": "Resume recommendation engine"
  },
  {
    "apiDisabled": true,
    "description": "Tune an engine under a collection",
    "name": "discoveryengine.engines.tune",
    "stage": "GA",
    "title": "Tune recommendation engine"
  },
  {
    "apiDisabled": true,
    "description": "Update an engine",
    "name": "discoveryengine.engines.update",
    "stage": "GA",
    "title": "Update engine"
  },
  {
    "description": "Create a evaluation",
    "name": "discoveryengine.evaluations.create",
    "stage": "BETA",
    "title": "Create evaluation"
  },
  {
    "description": "Get a evaluation",
    "name": "discoveryengine.evaluations.get",
    "stage": "BETA",
    "title": "Get evaluation"
  },
  {
    "description": "List evaluations under a location",
    "name": "discoveryengine.evaluations.list",
    "stage": "BETA",
    "title": "List evaluations under a location"
  },
  {
    "description": "Check grounding based on the grounding config",
    "name": "discoveryengine.groundingConfigs.check",
    "stage": "BETA",
    "title": "Check grounding based on the grounding config"
  },
  {
    "apiDisabled": true,
    "description": "Create an identityMappingStore",
    "name": "discoveryengine.identityMappingStores.create",
    "stage": "GA",
    "title": "Create identityMappingStore"
  },
  {
    "apiDisabled": true,
    "description": "Delete an identityMappingStore",
    "name": "discoveryengine.identityMappingStores.delete",
    "stage": "GA",
    "title": "Delete identityMappingStore"
  },
  {
    "apiDisabled": true,
    "description": "Get an identityMappingStore",
    "name": "discoveryengine.identityMappingStores.get",
    "stage": "GA",
    "title": "Get identityMappingStore"
  },
  {
    "apiDisabled": true,
    "description": "Import identity mappings to an identityMappingStore",
    "name": "discoveryengine.identityMappingStores.importIdentityMappings",
    "stage": "GA",
    "title": "Import identity mappings"
  },
  {
    "apiDisabled": true,
    "description": "List identityMappingStores for a given project and location",
    "name": "discoveryengine.identityMappingStores.list",
    "stage": "GA",
    "title": "List identityMappingStores"
  },
  {
    "apiDisabled": true,
    "description": "List identity mappings in an identityMappingStore",
    "name": "discoveryengine.identityMappingStores.listIdentityMappings",
    "stage": "GA",
    "title": "List identity mappings"
  },
  {
    "apiDisabled": true,
    "description": "Purge identity mappings in an identityMappingStore",
    "name": "discoveryengine.identityMappingStores.purgeIdentityMappings",
    "stage": "GA",
    "title": "Purge identity mappings"
  },
  {
    "description": "Estimate data size to be used by a costumer.",
    "name": "discoveryengine.locations.estimateDataSize",
    "stage": "BETA",
    "title": "Estimate data size for billing"
  },
  {
    "description": "Exchange auth credentials with an OAuth endpoint",
    "name": "discoveryengine.locations.exchangeAuthCredentials",
    "stage": "BETA",
    "title": "Exchange auth credentials with an OAuth endpoint"
  },
  {
    "description": "Get the connector source",
    "name": "discoveryengine.locations.getConnectorSource",
    "stage": "BETA",
    "title": "Get the connector source"
  },
  {
    "description": "List connector sources",
    "name": "discoveryengine.locations.listConnectorSources",
    "stage": "BETA",
    "title": "List connector sources"
  },
  {
    "description": "Set up a Collection and the Data Connector singleton resource in Collection",
    "name": "discoveryengine.locations.setUpDataConnector",
    "stage": "BETA",
    "title": "Set up a Collection and the Data Connector singleton resource in Collection"
  },
  {
    "description": "Create a model under a dataStore",
    "name": "discoveryengine.models.create",
    "stage": "BETA",
    "title": "Create recommendation model"
  },
  {
    "description": "Delete a model under a dataStore",
    "name": "discoveryengine.models.delete",
    "stage": "BETA",
    "title": "Delete recommendation model"
  },
  {
    "description": "Get a model under a dataStore",
    "name": "discoveryengine.models.get",
    "stage": "BETA",
    "title": "Get recommendation model"
  },
  {
    "description": "List models under a dataStore",
    "name": "discoveryengine.models.list",
    "stage": "BETA",
    "title": "List recommendation models"
  },
  {
    "description": "Pause a recommendation model under a dataStore",
    "name": "discoveryengine.models.pause",
    "stage": "BETA",
    "title": "Pause recommendation model"
  },
  {
    "description": "Resume a model serving config under a dataStore",
    "name": "discoveryengine.models.resume",
    "stage": "BETA",
    "title": "Resume recommendation model"
  },
  {
    "description": "Tune a model under a dataStore",
    "name": "discoveryengine.models.tune",
    "stage": "BETA",
    "title": "Tune model"
  },
  {
    "description": "Update a model under a dataStore",
    "name": "discoveryengine.models.update",
    "stage": "BETA",
    "title": "Update recommendation model"
  },
  {
    "description": "Create a notebook",
    "name": "discoveryengine.notebooks.create",
    "stage": "BETA",
    "title": "Create notebook"
  },
  {
    "description": "Generate a notebook guide",
    "name": "discoveryengine.notebooks.generateGuide",
    "stage": "BETA",
    "title": "Generate notebook guide"
  },
  {
    "description": "Get a notebook",
    "name": "discoveryengine.notebooks.get",
    "stage": "BETA",
    "title": "Get notebook"
  },
  {
    "description": "Get notebook analytics",
    "name": "discoveryengine.notebooks.getAnalytics",
    "stage": "BETA",
    "title": "Get notebook analytics"
  },
  {
    "description": "Get a notebook IAM policy",
    "name": "discoveryengine.notebooks.getIamPolicy",
    "stage": "BETA",
    "title": "Get notebook IAM policy"
  },
  {
    "description": "Interact with notebook sources",
    "name": "discoveryengine.notebooks.interactSources",
    "stage": "BETA",
    "title": "Interact with notebook sources"
  },
  {
    "description": "List notebooks",
    "name": "discoveryengine.notebooks.list",
    "stage": "BETA",
    "title": "List notebooks"
  },
  {
    "description": "Remove self from a notebook",
    "name": "discoveryengine.notebooks.removeSelf",
    "stage": "BETA",
    "title": "Remove self from notebook"
  },
  {
    "description": "Set a notebook IAM policy",
    "name": "discoveryengine.notebooks.setIamPolicy",
    "stage": "BETA",
    "title": "Set notebook IAM policy"
  },
  {
    "description": "Update a notebook",
    "name": "discoveryengine.notebooks.update",
    "stage": "BETA",
    "title": "Update notebook"
  },
  {
    "description": "Create a note",
    "name": "discoveryengine.notes.create",
    "stage": "BETA",
    "title": "Create note"
  },
  {
    "description": "Update a note",
    "name": "discoveryengine.notes.delete",
    "stage": "BETA",
    "title": "Update note"
  },
  {
    "description": "Get a note",
    "name": "discoveryengine.notes.get",
    "stage": "BETA",
    "title": "Get note"
  },
  {
    "description": "Update a note",
    "name": "discoveryengine.notes.update",
    "stage": "BETA",
    "title": "Update note"
  },
  {
    "apiDisabled": true,
    "description": "Get an operation",
    "name": "discoveryengine.operations.get",
    "stage": "GA",
    "title": "Get operation"
  },
  {
    "apiDisabled": true,
    "description": "List Operations under a project",
    "name": "discoveryengine.operations.list",
    "stage": "GA",
    "title": "List Operations under a project"
  },
  {
    "description": "Get a Project of Discovery Engine Service",
    "name": "discoveryengine.projects.get",
    "stage": "BETA",
    "title": "Get Discovery Engine Project"
  },
  {
    "description": "Provision a Project for Discovery Engine Service",
    "name": "discoveryengine.projects.provision",
    "stage": "BETA",
    "title": "Provision Discovery Engine Project"
  },
  {
    "description": "Update the status of consent terms",
    "name": "discoveryengine.projects.reportConsentChange",
    "stage": "BETA",
    "title": "Update the Consent Terms of Discovery Engine Project"
  },
  {
    "description": "Ranks a list of text records based on the given input query",
    "name": "discoveryengine.rankingConfigs.rank",
    "stage": "BETA",
    "title": "Ranks a list of text records based on the given input query"
  },
  {
    "description": "Create a sample query",
    "name": "discoveryengine.sampleQueries.create",
    "stage": "BETA",
    "title": "Create sample query"
  },
  {
    "description": "Delete a sample query",
    "name": "discoveryengine.sampleQueries.delete",
    "stage": "BETA",
    "title": "Delete sample query"
  },
  {
    "description": "Get a sample query",
    "name": "discoveryengine.sampleQueries.get",
    "stage": "BETA",
    "title": "Get sample query"
  },
  {
    "description": "Import sample queries under a sample query set",
    "name": "discoveryengine.sampleQueries.import",
    "stage": "BETA",
    "title": "Import sample queries"
  },
  {
    "description": "List sample query under a query set",
    "name": "discoveryengine.sampleQueries.list",
    "stage": "BETA",
    "title": "List sample query under a sample query set"
  },
  {
    "description": "Update a sample query",
    "name": "discoveryengine.sampleQueries.update",
    "stage": "BETA",
    "title": "Update sample query"
  },
  {
    "description": "Create a sample query set",
    "name": "discoveryengine.sampleQuerySets.create",
    "stage": "BETA",
    "title": "Create sample query set"
  },
  {
    "description": "Delete a sample query set",
    "name": "discoveryengine.sampleQuerySets.delete",
    "stage": "BETA",
    "title": "Delete sample query set"
  },
  {
    "description": "Get a sample query set",
    "name": "discoveryengine.sampleQuerySets.get",
    "stage": "BETA",
    "title": "Get sample query set"
  },
  {
    "description": "List sample query sets under a location",
    "name": "discoveryengine.sampleQuerySets.list",
    "stage": "BETA",
    "title": "List sample query sets under a location"
  },
  {
    "description": "Update an sample query set",
    "name": "discoveryengine.sampleQuerySets.update",
    "stage": "BETA",
    "title": "Update sample query set"
  },
  {
    "apiDisabled": true,
    "description": "Create a Schema",
    "name": "discoveryengine.schemas.create",
    "stage": "GA",
    "title": "Create schema"
  },
  {
    "apiDisabled": true,
    "description": "Delete a Schema",
    "name": "discoveryengine.schemas.delete",
    "stage": "GA",
    "title": "Delete schema"
  },
  {
    "apiDisabled": true,
    "description": "Get a schema",
    "name": "discoveryengine.schemas.get",
    "stage": "GA",
    "title": "Get schema"
  },
  {
    "apiDisabled": true,
    "description": "List Schemas",
    "name": "discoveryengine.schemas.list",
    "stage": "GA",
    "title": "List schemas"
  },
  {
    "description": "Preview a schema",
    "name": "discoveryengine.schemas.preview",
    "stage": "BETA",
    "title": "Preview schema"
  },
  {
    "apiDisabled": true,
    "description": "Update a Schema",
    "name": "discoveryengine.schemas.update",
    "stage": "GA",
    "title": "Update schema"
  },
  {
    "description": "Validate a schema",
    "name": "discoveryengine.schemas.validate",
    "stage": "BETA",
    "title": "Validate schema"
  },
  {
    "apiDisabled": true,
    "description": "Get an answer",
    "name": "discoveryengine.servingConfigs.answer",
    "stage": "GA",
    "title": "Get answer"
  },
  {
    "description": "Create a serving config",
    "name": "discoveryengine.servingConfigs.create",
    "stage": "BETA",
    "title": "Create serving config"
  },
  {
    "description": "Delete a serving config",
    "name": "discoveryengine.servingConfigs.delete",
    "stage": "BETA",
    "title": "Delete serving config"
  },
  {
    "description": "Get a serving config",
    "name": "discoveryengine.servingConfigs.get",
    "stage": "BETA",
    "title": "Get serving config"
  },
  {
    "description": "List serving configs under a data store",
    "name": "discoveryengine.servingConfigs.list",
    "stage": "BETA",
    "title": "List serving configs under a data store"
  },
  {
    "apiDisabled": true,
    "description": "Get recommendation results for a ServingConfig",
    "name": "discoveryengine.servingConfigs.recommend",
    "stage": "GA",
    "title": "Get recommendation results"
  },
  {
    "apiDisabled": true,
    "description": "Get search results for a ServingConfig",
    "name": "discoveryengine.servingConfigs.search",
    "stage": "GA",
    "title": "Get search results"
  },
  {
    "apiDisabled": true,
    "description": "Update a serving config",
    "name": "discoveryengine.servingConfigs.update",
    "stage": "GA",
    "title": "Update serving config"
  },
  {
    "apiDisabled": true,
    "description": "Add a context file to a session",
    "name": "discoveryengine.sessions.addContextFile",
    "stage": "GA",
    "title": "Add session context file"
  },
  {
    "apiDisabled": true,
    "description": "Create a session",
    "name": "discoveryengine.sessions.create",
    "stage": "GA",
    "title": "Create session"
  },
  {
    "apiDisabled": true,
    "description": "Delete a session",
    "name": "discoveryengine.sessions.delete",
    "stage": "GA",
    "title": "Delete session"
  },
  {
    "description": "Download a file from a session",
    "name": "discoveryengine.sessions.downloadFile",
    "stage": "BETA",
    "title": "Download session file"
  },
  {
    "apiDisabled": true,
    "description": "Get a session",
    "name": "discoveryengine.sessions.get",
    "stage": "GA",
    "title": "Get session"
  },
  {
    "apiDisabled": true,
    "description": "List sessions",
    "name": "discoveryengine.sessions.list",
    "stage": "GA",
    "title": "List sessions"
  },
  {
    "description": "List metadata for files in a session.",
    "name": "discoveryengine.sessions.listSessionFileMetadata",
    "stage": "BETA",
    "title": "List metadata for session file"
  },
  {
    "description": "Provide recommended questions for a session",
    "name": "discoveryengine.sessions.recommendQuestions",
    "stage": "BETA",
    "title": "Provide recommended questions"
  },
  {
    "description": "Remove a context file from a session",
    "name": "discoveryengine.sessions.removeContextFile",
    "stage": "BETA",
    "title": "Remove session context file"
  },
  {
    "description": "Select/deselect context files to be used in a session",
    "name": "discoveryengine.sessions.selectContextFiles",
    "stage": "BETA",
    "title": "Select/deselect session context files"
  },
  {
    "apiDisabled": true,
    "description": "Update a session",
    "name": "discoveryengine.sessions.update",
    "stage": "GA",
    "title": "Update session"
  },
  {
    "description": "Upload a file to a session",
    "name": "discoveryengine.sessions.uploadFile",
    "stage": "BETA",
    "title": "Upload session file"
  },
  {
    "description": "Verify target sites in a batch.",
    "name": "discoveryengine.siteSearchEngines.batchVerifyTargetSites",
    "stage": "BETA",
    "title": "Batch verify target sites"
  },
  {
    "description": "Downgrade from advanced site search to basic site search",
    "name": "discoveryengine.siteSearchEngines.disableAdvancedSiteSearch",
    "stage": "BETA",
    "title": "Disable advanced site search"
  },
  {
    "description": "Upgrade from basic site search to advanced site search",
    "name": "discoveryengine.siteSearchEngines.enableAdvancedSiteSearch",
    "stage": "BETA",
    "title": "Enable advanced site search"
  },
  {
    "description": "Fetch target sites with domain verification status for basic site search.",
    "name": "discoveryengine.siteSearchEngines.fetchDomainVerificationStatus",
    "stage": "BETA",
    "title": "Fetch target sites with domain verification status"
  },
  {
    "description": "Get the site search engine under a data store",
    "name": "discoveryengine.siteSearchEngines.get",
    "stage": "BETA",
    "title": "Get site search engine"
  },
  {
    "description": "Request immediate crawling and indexing for a list of URIs.",
    "name": "discoveryengine.siteSearchEngines.recrawlUris",
    "stage": "BETA",
    "title": "Recrawl URIs"
  },
  {
    "apiDisabled": true,
    "description": "Create a sitemap under the search engine",
    "name": "discoveryengine.sitemaps.create",
    "stage": "GA",
    "title": "Create sitemap"
  },
  {
    "apiDisabled": true,
    "description": "Delete a sitemap under the search engine",
    "name": "discoveryengine.sitemaps.delete",
    "stage": "GA",
    "title": "Delete sitemap"
  },
  {
    "apiDisabled": true,
    "description": "Fetch sitemaps under the search engine",
    "name": "discoveryengine.sitemaps.fetch",
    "stage": "GA",
    "title": "Fetch sitemaps"
  },
  {
    "description": "Check the freshness of a source",
    "name": "discoveryengine.sources.checkFreshness",
    "stage": "BETA",
    "title": "Check source freshness"
  },
  {
    "description": "Create a source",
    "name": "discoveryengine.sources.create",
    "stage": "BETA",
    "title": "Create source"
  },
  {
    "description": "Delete a source",
    "name": "discoveryengine.sources.delete",
    "stage": "BETA",
    "title": "Delete source"
  },
  {
    "description": "Generate document guides for a source",
    "name": "discoveryengine.sources.generateDocumentGuide",
    "stage": "BETA",
    "title": "Generate source document guides"
  },
  {
    "description": "Get a source",
    "name": "discoveryengine.sources.get",
    "stage": "BETA",
    "title": "Get source"
  },
  {
    "description": "Refresh a source",
    "name": "discoveryengine.sources.refresh",
    "stage": "BETA",
    "title": "Refresh source"
  },
  {
    "description": "Update a source",
    "name": "discoveryengine.sources.update",
    "stage": "BETA",
    "title": "Update source"
  },
  {
    "apiDisabled": true,
    "description": "Import suggestion denylist entries for a data store",
    "name": "discoveryengine.suggestionDenyListEntries.import",
    "stage": "GA",
    "title": "Import suggestion denylist entries for a data store"
  },
  {
    "apiDisabled": true,
    "description": "Purge all suggestion denylist entries for a data store",
    "name": "discoveryengine.suggestionDenyListEntries.purge",
    "stage": "GA",
    "title": "Purge all suggestion denylist entries for a data store"
  },
  {
    "description": "Batch create target sites under the search engine",
    "name": "discoveryengine.targetSites.batchCreate",
    "stage": "BETA",
    "title": "Batch create target site"
  },
  {
    "description": "Create a target site under the search engine",
    "name": "discoveryengine.targetSites.create",
    "stage": "BETA",
    "title": "Create target site"
  },
  {
    "description": "Delete a target site",
    "name": "discoveryengine.targetSites.delete",
    "stage": "BETA",
    "title": "Delete target site"
  },
  {
    "description": "Get a target site",
    "name": "discoveryengine.targetSites.get",
    "stage": "BETA",
    "title": "Get target site"
  },
  {
    "description": "List target sites under the search engine",
    "name": "discoveryengine.targetSites.list",
    "stage": "BETA",
    "title": "List target sites under the search engine"
  },
  {
    "description": "Update a target site",
    "name": "discoveryengine.targetSites.update",
    "stage": "BETA",
    "title": "Update target site"
  },
  {
    "apiDisabled": true,
    "description": "Creates a user event under a dataStore",
    "name": "discoveryengine.userEvents.create",
    "stage": "GA",
    "title": "Creates a user event"
  },
  {
    "description": "Fetch user events stats under a dataStore",
    "name": "discoveryengine.userEvents.fetchStats",
    "stage": "BETA",
    "title": "Fetch user events stats"
  },
  {
    "apiDisabled": true,
    "description": "Import user events under a dataStore",
    "name": "discoveryengine.userEvents.import",
    "stage": "GA",
    "title": "Import user events"
  },
  {
    "apiDisabled": true,
    "description": "Purge user events under a dataStore",
    "name": "discoveryengine.userEvents.purge",
    "stage": "GA",
    "title": "Purge user events"
  },
  {
    "apiDisabled": true,
    "description": "Batch update user licenses",
    "name": "discoveryengine.userStores.batchUpdateUserLicenses",
    "stage": "GA",
    "title": "Batch update user licenses"
  },
  {
    "apiDisabled": true,
    "description": "List user licenses",
    "name": "discoveryengine.userStores.listUserLicenses",
    "stage": "GA",
    "title": "List user licenses"
  },
  {
    "description": "Get a widget config",
    "name": "discoveryengine.widgetConfigs.get",
    "stage": "BETA",
    "title": "Get widget config"
  },
  {
    "description": "Update a widget config",
    "name": "discoveryengine.widgetConfigs.update",
    "stage": "BETA",
    "title": "Update widget config"
  },
  {
    "name": "dlp.analyzeRiskTemplates.create",
    "stage": "DEPRECATED"
  },
  {
    "name": "dlp.analyzeRiskTemplates.delete",
    "stage": "DEPRECATED"
  },
  {
    "name": "dlp.analyzeRiskTemplates.get",
    "stage": "DEPRECATED"
  },
  {
    "name": "dlp.analyzeRiskTemplates.list",
    "stage": "DEPRECATED"
  },
  {
    "name": "dlp.analyzeRiskTemplates.update",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "dlp.charts.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.columnDataProfiles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.columnDataProfiles.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.connections.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.connections.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.connections.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.connections.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.connections.search",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.connections.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.deidentifyTemplates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.deidentifyTemplates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.deidentifyTemplates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.deidentifyTemplates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.deidentifyTemplates.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.estimates.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.estimates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.estimates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.estimates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.estimates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.fileStoreProfiles.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.fileStoreProfiles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.fileStoreProfiles.list",
    "stage": "GA"
  },
  {
    "name": "dlp.inspectFindings.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "dlp.inspectTemplates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.inspectTemplates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.inspectTemplates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.inspectTemplates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.inspectTemplates.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobTriggers.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobTriggers.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobTriggers.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobTriggers.hybridInspect",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobTriggers.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobTriggers.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobs.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobs.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobs.hybridInspect",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.jobs.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.kms.encrypt",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.locations.get",
    "stage": "GA",
    "title": "Read Cloud DLP Location"
  },
  {
    "apiDisabled": true,
    "name": "dlp.locations.list",
    "stage": "GA",
    "title": "List Cloud DLP Locations"
  },
  {
    "apiDisabled": true,
    "name": "dlp.projectDataProfiles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.projectDataProfiles.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.storedInfoTypes.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.storedInfoTypes.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.storedInfoTypes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.storedInfoTypes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.storedInfoTypes.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.subscriptions.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.subscriptions.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.subscriptions.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.subscriptions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.subscriptions.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.tableDataProfiles.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.tableDataProfiles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dlp.tableDataProfiles.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.changes.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.changes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.changes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.dnsKeys.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.dnsKeys.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.gkeClusters.bindDNSResponsePolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.gkeClusters.bindPrivateDNSZone",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.managedZoneOperations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.managedZoneOperations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.managedZones.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.managedZones.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.managedZones.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.managedZones.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.managedZones.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.managedZones.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.managedZones.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.networks.bindDNSResponsePolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.networks.bindPrivateDNSPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.networks.bindPrivateDNSZone",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.networks.targetWithPeeringZone",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.networks.useHealthSignals",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.policies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.policies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.policies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.policies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.policies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.projects.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.resourceRecordSets.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.resourceRecordSets.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.resourceRecordSets.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.resourceRecordSets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.resourceRecordSets.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.responsePolicies.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.responsePolicies.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.responsePolicies.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.responsePolicies.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.responsePolicies.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.responsePolicyRules.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.responsePolicyRules.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.responsePolicyRules.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.responsePolicyRules.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "dns.responsePolicyRules.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Cancel data labeling jobs.",
    "name": "documentai.dataLabelingJobs.cancel",
    "stage": "BETA",
    "title": "Cancel data labeling jobs."
  },
  {
    "apiDisabled": true,
    "description": "Create data labeling jobs.",
    "name": "documentai.dataLabelingJobs.create",
    "stage": "BETA",
    "title": "Create data labeling jobs."
  },
  {
    "apiDisabled": true,
    "description": "List data labeling jobs.",
    "name": "documentai.dataLabelingJobs.list",
    "stage": "BETA",
    "title": "List data labeling jobs."
  },
  {
    "apiDisabled": true,
    "description": "Get schemas of the datasets.",
    "name": "documentai.datasetSchemas.get",
    "stage": "BETA",
    "title": "Get schemas of the datasets."
  },
  {
    "apiDisabled": true,
    "description": "Update the schemas of datasets.",
    "name": "documentai.datasetSchemas.update",
    "stage": "BETA",
    "title": "Update the schemas of datasets."
  },
  {
    "apiDisabled": true,
    "description": "Create documents within the dataset.",
    "name": "documentai.datasets.createDocuments",
    "stage": "BETA",
    "title": "Create documents within the dataset."
  },
  {
    "apiDisabled": true,
    "description": "Delete documents within the dataset.",
    "name": "documentai.datasets.deleteDocuments",
    "stage": "BETA",
    "title": "Delete documents within the dataset."
  },
  {
    "apiDisabled": true,
    "description": "Get dataset metadata within the dataset.",
    "name": "documentai.datasets.get",
    "stage": "BETA",
    "title": "Get dataset metadata within the dataset."
  },
  {
    "apiDisabled": true,
    "description": "Get documents within the dataset.",
    "name": "documentai.datasets.getDocuments",
    "stage": "BETA",
    "title": "Get documents within the dataset."
  },
  {
    "apiDisabled": true,
    "description": "List documents within the dataset.",
    "name": "documentai.datasets.listDocuments",
    "stage": "BETA",
    "title": "List documents within the dataset."
  },
  {
    "apiDisabled": true,
    "description": "Update dataset metadata within the dataset.",
    "name": "documentai.datasets.update",
    "stage": "BETA",
    "title": "Update dataset metadata within the dataset."
  },
  {
    "apiDisabled": true,
    "description": "Update documents within the dataset.",
    "name": "documentai.datasets.updateDocuments",
    "stage": "BETA",
    "title": "Update documents within the dataset."
  },
  {
    "apiDisabled": true,
    "description": "Get evaluationDocuments",
    "name": "documentai.evaluationDocuments.get",
    "stage": "BETA",
    "title": "Get evaluationDocuments"
  },
  {
    "apiDisabled": true,
    "description": "Create processor version evaluations",
    "name": "documentai.evaluations.create",
    "stage": "BETA",
    "title": "Create processor version evaluations"
  },
  {
    "apiDisabled": true,
    "description": "Get processor version evaluations",
    "name": "documentai.evaluations.get",
    "stage": "BETA",
    "title": "Get processor version evaluations"
  },
  {
    "apiDisabled": true,
    "description": "List processor version evaluations",
    "name": "documentai.evaluations.list",
    "stage": "BETA",
    "title": "List processor version evaluations"
  },
  {
    "apiDisabled": true,
    "description": "Get human review configs",
    "name": "documentai.humanReviewConfigs.get",
    "stage": "BETA",
    "title": "Get human review configs"
  },
  {
    "apiDisabled": true,
    "description": "Review a document using human review configs",
    "name": "documentai.humanReviewConfigs.review",
    "stage": "BETA",
    "title": "Review a document using human review configs"
  },
  {
    "apiDisabled": true,
    "description": "Update human review configs",
    "name": "documentai.humanReviewConfigs.update",
    "stage": "BETA",
    "title": "Update human review configs"
  },
  {
    "apiDisabled": true,
    "description": "Create labeler pools",
    "name": "documentai.labelerPools.create",
    "stage": "BETA",
    "title": "Create labeler pools"
  },
  {
    "apiDisabled": true,
    "description": "Delete labeler pools",
    "name": "documentai.labelerPools.delete",
    "stage": "BETA",
    "title": "Delete labeler pools"
  },
  {
    "apiDisabled": true,
    "description": "Get labeler pools",
    "name": "documentai.labelerPools.get",
    "stage": "BETA",
    "title": "Get labeler pools"
  },
  {
    "apiDisabled": true,
    "description": "List labeler pools",
    "name": "documentai.labelerPools.list",
    "stage": "BETA",
    "title": "List labeler pools"
  },
  {
    "apiDisabled": true,
    "description": "Get locations",
    "name": "documentai.locations.get",
    "stage": "BETA",
    "title": "Get locations"
  },
  {
    "apiDisabled": true,
    "description": "List locations",
    "name": "documentai.locations.list",
    "stage": "BETA",
    "title": "List locations"
  },
  {
    "apiDisabled": true,
    "description": "Get longrunning operations for legacy operations (v1alpha1, v1beta2)",
    "name": "documentai.operations.getLegacy",
    "stage": "BETA",
    "title": "Get longrunning operations for legacy operations (v1alpha1, v1beta2)"
  },
  {
    "apiDisabled": true,
    "description": "Get dataset metadata within the dataset.",
    "name": "documentai.processedDocumentsSets.get",
    "stage": "BETA",
    "title": "Get dataset metadata within the dataset."
  },
  {
    "apiDisabled": true,
    "description": "Get documents within the set.",
    "name": "documentai.processedDocumentsSets.getDocuments",
    "stage": "BETA",
    "title": "Get documents within the set."
  },
  {
    "apiDisabled": true,
    "description": "List documents within the set.",
    "name": "documentai.processedDocumentsSets.listDocuments",
    "stage": "BETA",
    "title": "List documents within the set."
  },
  {
    "apiDisabled": true,
    "description": "Get processor types",
    "name": "documentai.processorTypes.get",
    "stage": "BETA",
    "title": "Get processor types"
  },
  {
    "apiDisabled": true,
    "description": "List processor types",
    "name": "documentai.processorTypes.list",
    "stage": "BETA",
    "title": "List processor types"
  },
  {
    "apiDisabled": true,
    "description": "Create processor versions",
    "name": "documentai.processorVersions.create",
    "stage": "BETA",
    "title": "Create processor versions"
  },
  {
    "apiDisabled": true,
    "description": "Delete processor versions",
    "name": "documentai.processorVersions.delete",
    "stage": "BETA",
    "title": "Delete processor versions"
  },
  {
    "apiDisabled": true,
    "description": "Get processor versions",
    "name": "documentai.processorVersions.get",
    "stage": "BETA",
    "title": "Get processor versions"
  },
  {
    "apiDisabled": true,
    "description": "List processor versions",
    "name": "documentai.processorVersions.list",
    "stage": "BETA",
    "title": "List processor versions"
  },
  {
    "apiDisabled": true,
    "description": "Process documents using processor versions in batch mode",
    "name": "documentai.processorVersions.processBatch",
    "stage": "BETA",
    "title": "Process documents using processor versions in batch mode"
  },
  {
    "apiDisabled": true,
    "description": "Process documents using processor versions in online mode",
    "name": "documentai.processorVersions.processOnline",
    "stage": "BETA",
    "title": "Process documents using processor versions in online mode"
  },
  {
    "apiDisabled": true,
    "description": "Update processor versions",
    "name": "documentai.processorVersions.update",
    "stage": "BETA",
    "title": "Update processor versions"
  },
  {
    "apiDisabled": true,
    "description": "Create processors",
    "name": "documentai.processors.create",
    "stage": "BETA",
    "title": "Create processors"
  },
  {
    "apiDisabled": true,
    "description": "Delete processors",
    "name": "documentai.processors.delete",
    "stage": "BETA",
    "title": "Delete processors"
  },
  {
    "apiDisabled": true,
    "description": "List all human review configs.",
    "name": "documentai.processors.fetchHumanReviewDetails",
    "stage": "BETA",
    "title": "List all human review configs."
  },
  {
    "apiDisabled": true,
    "description": "Get processors",
    "name": "documentai.processors.get",
    "stage": "BETA",
    "title": "Get processors"
  },
  {
    "apiDisabled": true,
    "description": "List processors",
    "name": "documentai.processors.list",
    "stage": "BETA",
    "title": "List processors"
  },
  {
    "apiDisabled": true,
    "description": "Process documents using processors in batch mode",
    "name": "documentai.processors.processBatch",
    "stage": "BETA",
    "title": "Process documents using processors in batch mode"
  },
  {
    "apiDisabled": true,
    "description": "Process documents using processors in online mode",
    "name": "documentai.processors.processOnline",
    "stage": "BETA",
    "title": "Process documents using processors in online mode"
  },
  {
    "apiDisabled": true,
    "description": "Update processors",
    "name": "documentai.processors.update",
    "stage": "BETA",
    "title": "Update processors"
  },
  {
    "apiDisabled": true,
    "name": "domains.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "domains.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "domains.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "domains.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "domains.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "domains.registrations.configureContact",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Configure Registration's Contact settings"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "domains.registrations.configureDns",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Configure Registration's DNS settings"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "domains.registrations.configureManagement",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Configure Registration's Management settings"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "domains.registrations.create",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Create Registrations"
  },
  {
    "apiDisabled": true,
    "name": "domains.registrations.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "domains.registrations.delete",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Delete Registration"
  },
  {
    "apiDisabled": true,
    "name": "domains.registrations.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "domains.registrations.get",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Get Registration"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "domains.registrations.getIamPolicy",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Get IAM Policy on Registration"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "domains.registrations.list",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "List Registrations"
  },
  {
    "apiDisabled": true,
    "name": "domains.registrations.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "domains.registrations.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "domains.registrations.setIamPolicy",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Set IAM Policy on Registration"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "domains.registrations.update",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Update Registration"
  },
  {
    "apiDisabled": true,
    "name": "dspm.locations.computeAggregation",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dspm.locations.fetchDspmGovernedProjects",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dspm.locations.fetchGovernedResourceMetrics",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dspm.locations.fetchLineageConnections",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dspm.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dspm.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dspm.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dspm.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dspm.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "dspm.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.assets.create",
    "stage": "BETA",
    "title": "Create Earth Engine Assets"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.assets.delete",
    "stage": "BETA",
    "title": "Delete Earth Engine Assets"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.assets.get",
    "stage": "BETA",
    "title": "Get Earth Engine Assets"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.assets.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy for Assets"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.assets.list",
    "stage": "BETA",
    "title": "List Earth Engine Assets"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.assets.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Assets"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.assets.update",
    "stage": "BETA",
    "title": "Update Earth Engine Assets"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.computations.create",
    "stage": "BETA",
    "title": "Execute Earth Engine Computations"
  },
  {
    "apiDisabled": true,
    "name": "earthengine.config.get",
    "stage": "BETA",
    "title": "Get Earth Engine Project Config"
  },
  {
    "apiDisabled": true,
    "name": "earthengine.config.update",
    "stage": "BETA",
    "title": "Update Earth Engine Project Config"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.exports.create",
    "stage": "BETA",
    "title": "Create Earth Engine Exports"
  },
  {
    "apiDisabled": true,
    "name": "earthengine.featureviews.create",
    "stage": "BETA",
    "title": "Create Earth Engine FeatureViews"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.filmstripthumbnails.create",
    "stage": "BETA",
    "title": "Create Earth Engine Filmstrip Thumbnails"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.filmstripthumbnails.get",
    "stage": "BETA",
    "title": "Get Earth Engine Filmstrip Thumbnails"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.imports.create",
    "stage": "BETA",
    "title": "Import Earth Engine Assets"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.maps.create",
    "stage": "BETA",
    "title": "Create Earth Engine Maps"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.maps.get",
    "stage": "BETA",
    "title": "Get Earth Engine Maps"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.operations.delete",
    "stage": "BETA",
    "title": "Delete Earth Engine Operations"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.operations.get",
    "stage": "BETA",
    "title": "Get Earth Engine Operations"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.operations.list",
    "stage": "BETA",
    "title": "List Earth Engine Operations"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.operations.update",
    "stage": "BETA",
    "title": "Cancel Earth Engine Operations"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.tables.create",
    "stage": "BETA",
    "title": "Create Earth Engine Tables"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.tables.get",
    "stage": "BETA",
    "title": "Get Earth Engine Tables"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.thumbnails.create",
    "stage": "BETA",
    "title": "Create Earth Engine Thumbnails"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.thumbnails.get",
    "stage": "BETA",
    "title": "Get Earth Engine Thumbnails"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.videothumbnails.create",
    "stage": "BETA",
    "title": "Create Earth Engine Video Thumbnails"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "earthengine.videothumbnails.get",
    "stage": "BETA",
    "title": "Get Earth Engine Video Thumbnails"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.clusters.create",
    "stage": "GA",
    "title": "Create Cluster"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.clusters.delete",
    "stage": "GA",
    "title": "Delete Cluster"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.clusters.generateAccessToken",
    "stage": "GA",
    "title": "Generate access token for Cluster"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.clusters.generateOfflineCredential",
    "stage": "GA",
    "title": "Generate offline credential for Cluster"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.clusters.get",
    "stage": "GA",
    "title": "Get Cluster"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.clusters.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Cluster"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.clusters.list",
    "stage": "GA",
    "title": "List Cluster"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.clusters.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Cluster"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.clusters.update",
    "stage": "GA",
    "title": "Update Cluster"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.clusters.upgrade",
    "stage": "GA",
    "title": "Upgrade Cluster"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.machines.create",
    "stage": "GA",
    "title": "Create Machine"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.machines.delete",
    "stage": "GA",
    "title": "Delete Machine"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.machines.get",
    "stage": "GA",
    "title": "Get Machine"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.machines.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Machine"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.machines.list",
    "stage": "GA",
    "title": "List Machine"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.machines.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Machine"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.machines.update",
    "stage": "GA",
    "title": "Update Machine"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.machines.use",
    "stage": "GA",
    "title": "Use Machine"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.nodePools.create",
    "stage": "GA",
    "title": "Create NodePool"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.nodePools.delete",
    "stage": "GA",
    "title": "Delete NodePool"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.nodePools.get",
    "stage": "GA",
    "title": "Get NodePool"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.nodePools.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on NodePool"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.nodePools.list",
    "stage": "GA",
    "title": "List NodePool"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.nodePools.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on NodePool"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.nodePools.update",
    "stage": "GA",
    "title": "Update NodePool"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.operations.list",
    "stage": "GA",
    "title": "List Operations"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.serverconfig.get",
    "stage": "GA",
    "title": "Get Server Config"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.serviceaccounts.create",
    "stage": "GA",
    "title": "Create Service Account"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.serviceaccounts.delete",
    "stage": "GA",
    "title": "Delete Service Account"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.serviceaccounts.generatekey",
    "stage": "GA",
    "title": "Generate Service Account Key"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.serviceaccounts.get",
    "stage": "GA",
    "title": "Get Service Account"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.serviceaccounts.list",
    "stage": "GA",
    "title": "List Service Accounts"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.vpnConnections.create",
    "stage": "GA",
    "title": "Create vpnConnection"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.vpnConnections.delete",
    "stage": "GA",
    "title": "Delete vpnConnection"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.vpnConnections.get",
    "stage": "GA",
    "title": "Get vpnConnection"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.vpnConnections.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on vpnConnection"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.vpnConnections.list",
    "stage": "GA",
    "title": "List vpnConnection"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.vpnConnections.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on vpnConnection"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.vpnConnections.update",
    "stage": "GA",
    "title": "Update vpnConnection"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.zonalservices.disable",
    "stage": "GA",
    "title": "Disable Zonal Service"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.zonalservices.enable",
    "stage": "GA",
    "title": "Enable Zonal Service"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.zonalservices.get",
    "stage": "GA",
    "title": "Get Zonal Service"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.zonalservices.list",
    "stage": "GA",
    "title": "List Zonal Services"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.zones.get",
    "stage": "GA",
    "title": "Get zone"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.zones.getZoneIamPolicy",
    "stage": "GA",
    "title": "Get Zone IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.zones.list",
    "stage": "GA",
    "title": "List Zones"
  },
  {
    "apiDisabled": true,
    "name": "edgecontainer.zones.setZoneIamPolicy",
    "stage": "GA",
    "title": "Set Zone IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.interconnectAttachments.create",
    "stage": "GA",
    "title": "Create InterconnectAttachment"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.interconnectAttachments.delete",
    "stage": "GA",
    "title": "Delete InterconnectAttachment"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.interconnectAttachments.get",
    "stage": "GA",
    "title": "Get InterconnectAttachment"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.interconnectAttachments.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on InterconnectAttachment"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.interconnectAttachments.list",
    "stage": "GA",
    "title": "List InterconnectAttachment"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.interconnectAttachments.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on InterconnectAttachment"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.interconnectAttachments.update",
    "stage": "GA",
    "title": "Update InterconnectAttachment"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.interconnects.get",
    "stage": "GA",
    "title": "Get Interconnect"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.interconnects.getDiagnostics",
    "stage": "GA",
    "title": "Get Interconnect Diagnostics"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.interconnects.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Interconnect"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.interconnects.list",
    "stage": "GA",
    "title": "List Interconnect"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.interconnects.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Interconnect"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.networks.create",
    "stage": "GA",
    "title": "Create Network"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.networks.delete",
    "stage": "GA",
    "title": "Delete Network"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.networks.get",
    "stage": "GA",
    "title": "Get Network"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.networks.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Network"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.networks.getStatus",
    "stage": "GA",
    "title": "Get Network Status"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.networks.list",
    "stage": "GA",
    "title": "List Network"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.networks.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Network"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.networks.update",
    "stage": "GA",
    "title": "Update Network"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.routers.create",
    "stage": "GA",
    "title": "Create Router"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.routers.delete",
    "stage": "GA",
    "title": "Delete Router"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.routers.get",
    "stage": "GA",
    "title": "Get Router"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.routers.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Router"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.routers.getRouterStatus",
    "stage": "GA",
    "title": "Get Router"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.routers.list",
    "stage": "GA",
    "title": "List Router"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.routers.patch",
    "stage": "GA",
    "title": "Patch Router"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.routers.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Router"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.routers.update",
    "stage": "GA",
    "title": "Update Router"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.routes.create",
    "stage": "GA",
    "title": "Create Route"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.routes.delete",
    "stage": "GA",
    "title": "Delete Route"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.routes.get",
    "stage": "GA",
    "title": "Get Route"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.routes.list",
    "stage": "GA",
    "title": "List Route"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.subnetworks.create",
    "stage": "GA",
    "title": "Create Subnet"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.subnetworks.delete",
    "stage": "GA",
    "title": "Delete Subnet"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.subnetworks.get",
    "stage": "GA",
    "title": "Get Subnet"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.subnetworks.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Subnet"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.subnetworks.getStatus",
    "stage": "GA",
    "title": "Get Subnet Status"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.subnetworks.list",
    "stage": "GA",
    "title": "List Subnet"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.subnetworks.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Subnet"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.subnetworks.update",
    "stage": "GA",
    "title": "Update Subnet"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.zones.get",
    "stage": "GA",
    "title": "Get Zone"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.zones.initialize",
    "stage": "GA",
    "title": "Initialize Zone"
  },
  {
    "apiDisabled": true,
    "name": "edgenetwork.zones.list",
    "stage": "GA",
    "title": "List Zones"
  },
  {
    "apiDisabled": true,
    "description": "Look up Cloud KG Entities",
    "name": "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.lookup",
    "stage": "BETA",
    "title": "Look up Cloud KG Entities"
  },
  {
    "apiDisabled": true,
    "description": "Search Cloud KG Entities",
    "name": "enterpriseknowledgegraph.cloudKnowledgeGraphEntities.search",
    "stage": "BETA",
    "title": "Search Cloud KG Entities"
  },
  {
    "apiDisabled": true,
    "description": "Cancel entityReconciliationJobs",
    "name": "enterpriseknowledgegraph.entityReconciliationJobs.cancel",
    "stage": "BETA",
    "title": "Cancel entityReconciliationJobs"
  },
  {
    "apiDisabled": true,
    "description": "Create entityReconciliationJobs",
    "name": "enterpriseknowledgegraph.entityReconciliationJobs.create",
    "stage": "BETA",
    "title": "Create entityReconciliationJobs"
  },
  {
    "apiDisabled": true,
    "description": "Delete entityReconciliationJobs",
    "name": "enterpriseknowledgegraph.entityReconciliationJobs.delete",
    "stage": "BETA",
    "title": "Delete entityReconciliationJobs"
  },
  {
    "apiDisabled": true,
    "description": "Get entityReconciliationJobs",
    "name": "enterpriseknowledgegraph.entityReconciliationJobs.get",
    "stage": "BETA",
    "title": "Get entityReconciliationJobs"
  },
  {
    "apiDisabled": true,
    "description": "List entityReconciliationJobs",
    "name": "enterpriseknowledgegraph.entityReconciliationJobs.list",
    "stage": "BETA",
    "title": "List entityReconciliationJobs"
  },
  {
    "apiDisabled": true,
    "description": "Look up Public KG Entities",
    "name": "enterpriseknowledgegraph.publicKnowledgeGraphEntities.lookup",
    "stage": "BETA",
    "title": "Look up Public KG Entities"
  },
  {
    "apiDisabled": true,
    "description": "Search Public KG Entities",
    "name": "enterpriseknowledgegraph.publicKnowledgeGraphEntities.search",
    "stage": "BETA",
    "title": "Search Public KG Entities"
  },
  {
    "apiDisabled": true,
    "name": "enterprisepurchasing.gcveCuds.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "enterprisepurchasing.gcveCuds.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "enterprisepurchasing.gcveCuds.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "enterprisepurchasing.gcveNodePricingInfo.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "enterprisepurchasing.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "enterprisepurchasing.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "enterprisepurchasing.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "enterprisepurchasing.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "enterprisepurchasing.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "enterprisepurchasing.operations.list",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.applications.list",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.errorEvents.create",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.errorEvents.delete",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.errorEvents.list",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.groupMetadata.get",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.groupMetadata.update",
    "stage": "BETA"
  },
  {
    "name": "errorreporting.groups.list",
    "stage": "BETA"
  },
  {
    "name": "essentialcontacts.contacts.create",
    "stage": "GA"
  },
  {
    "name": "essentialcontacts.contacts.delete",
    "stage": "GA"
  },
  {
    "name": "essentialcontacts.contacts.get",
    "stage": "GA"
  },
  {
    "name": "essentialcontacts.contacts.list",
    "stage": "GA"
  },
  {
    "name": "essentialcontacts.contacts.send",
    "stage": "GA"
  },
  {
    "name": "essentialcontacts.contacts.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channelConnections.create",
    "stage": "BETA",
    "title": "Create Channel Connection"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channelConnections.delete",
    "stage": "BETA",
    "title": "Delete Channel Connection"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channelConnections.get",
    "stage": "BETA",
    "title": "Get Channel Connection"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channelConnections.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Channel Connection"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channelConnections.list",
    "stage": "BETA",
    "title": "List Channel Connections"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channelConnections.publish",
    "stage": "BETA",
    "title": "Publish Events to Channel Connection"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channelConnections.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Channel Connection"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channels.attach",
    "stage": "BETA",
    "title": "Attach Trigger to Channel"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channels.create",
    "stage": "BETA",
    "title": "Create Channel"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channels.delete",
    "stage": "BETA",
    "title": "Delete Channel"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channels.get",
    "stage": "BETA",
    "title": "Get Channel"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channels.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Channel"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channels.list",
    "stage": "BETA",
    "title": "List Channels"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channels.publish",
    "stage": "BETA",
    "title": "Publish Events to Channels"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channels.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Channel"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channels.undelete",
    "stage": "BETA",
    "title": "Undelete Channel"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.channels.update",
    "stage": "BETA",
    "title": "Update Channel"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.enrollments.create",
    "stage": "BETA",
    "title": "Create Enrollment"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.enrollments.delete",
    "stage": "BETA",
    "title": "Delete Enrollment"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.enrollments.get",
    "stage": "BETA",
    "title": "Get Enrollment"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.enrollments.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Enrollment"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.enrollments.list",
    "stage": "BETA",
    "title": "List Enrollments"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.enrollments.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Enrollment"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.enrollments.update",
    "stage": "BETA",
    "title": "Update Enrollment"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.events.receiveAuditLogWritten",
    "stage": "GA",
    "title": "Receive Audit Log Written"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.events.receiveEvent",
    "stage": "GA",
    "title": "Receive Event"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.googleApiSources.create",
    "stage": "BETA",
    "title": "Create Google API Source"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.googleApiSources.delete",
    "stage": "BETA",
    "title": "Delete Google API Source"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.googleApiSources.get",
    "stage": "BETA",
    "title": "Get Google API Source"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.googleApiSources.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Google API Source"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.googleApiSources.list",
    "stage": "BETA",
    "title": "List Google API Sources"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.googleApiSources.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Google API Source"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.googleApiSources.update",
    "stage": "BETA",
    "title": "Update Google API Source"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.googleChannelConfigs.get",
    "stage": "BETA",
    "title": "Get GoogleChannelConfig"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.googleChannelConfigs.update",
    "stage": "BETA",
    "title": "Update GoogleChannelConfig"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.kafkaSources.create",
    "stage": "BETA",
    "title": "Create Kafka Source"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.kafkaSources.delete",
    "stage": "BETA",
    "title": "Delete Kafka Source"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.kafkaSources.get",
    "stage": "BETA",
    "title": "Get Kafka Source"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.kafkaSources.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Kafka Source"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.kafkaSources.list",
    "stage": "BETA",
    "title": "List Kafka Sources"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.kafkaSources.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Kafka Source"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.messageBuses.create",
    "stage": "BETA",
    "title": "Create Message Bus"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.messageBuses.delete",
    "stage": "BETA",
    "title": "Delete Message Bus"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.messageBuses.get",
    "stage": "BETA",
    "title": "Get Message Bus"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.messageBuses.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Message Bus"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.messageBuses.list",
    "stage": "BETA",
    "title": "List Message Buses"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.messageBuses.publish",
    "stage": "BETA",
    "title": "Publish messages to Message Buses"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.messageBuses.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Message Bus"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.messageBuses.update",
    "stage": "BETA",
    "title": "Update Message Bus"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.messageBuses.use",
    "stage": "BETA",
    "title": "Use a Message Bus"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.pipelines.create",
    "stage": "BETA",
    "title": "Create Pipeline"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.pipelines.delete",
    "stage": "BETA",
    "title": "Delete Pipeline"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.pipelines.get",
    "stage": "BETA",
    "title": "Get Pipeline"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.pipelines.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Pipeline"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.pipelines.list",
    "stage": "BETA",
    "title": "List Pipelines"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.pipelines.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Pipeline"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.pipelines.update",
    "stage": "BETA",
    "title": "Update Pipeline"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.providers.get",
    "stage": "GA",
    "title": "Get Provider"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.providers.list",
    "stage": "GA",
    "title": "List Providers"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.triggers.create",
    "stage": "GA",
    "title": "Create Trigger"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.triggers.delete",
    "stage": "GA",
    "title": "Delete Trigger"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.triggers.get",
    "stage": "GA",
    "title": "Get Trigger"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.triggers.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Trigger"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.triggers.list",
    "stage": "GA",
    "title": "List Triggers"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.triggers.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Trigger"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.triggers.undelete",
    "stage": "GA",
    "title": "Undelete Trigger"
  },
  {
    "apiDisabled": true,
    "name": "eventarc.triggers.update",
    "stage": "GA",
    "title": "Update Trigger"
  },
  {
    "apiDisabled": true,
    "description": "List the Delivery Data for a Firebase app.",
    "name": "fcmdata.deliverydata.list",
    "stage": "BETA",
    "title": "List Delivery Data"
  },
  {
    "apiDisabled": true,
    "name": "file.backups.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.backups.createTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.backups.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.backups.deleteTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.backups.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.backups.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.backups.listEffectiveTags",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.backups.listTagBindings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.backups.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.instances.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.instances.createTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.instances.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.instances.deleteTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.instances.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.instances.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.instances.listEffectiveTags",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.instances.listTagBindings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.instances.restore",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.instances.revert",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.instances.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "file.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.snapshots.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.snapshots.createTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.snapshots.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.snapshots.deleteTagBinding",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.snapshots.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.snapshots.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.snapshots.listEffectiveTags",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.snapshots.listTagBindings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "file.snapshots.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1backtests.create",
    "stage": "GA",
    "title": "Create BacktestResult"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1backtests.delete",
    "stage": "GA",
    "title": "Delete BacktestResult"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1backtests.exportMetadata",
    "stage": "GA",
    "title": "Exports BacktestResult Metadata"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1backtests.get",
    "stage": "GA",
    "title": "Get BacktestResult"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1backtests.list",
    "stage": "GA",
    "title": "List BacktestResults"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1backtests.update",
    "stage": "GA",
    "title": "Update BacktestResult"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1datasets.create",
    "stage": "GA",
    "title": "Create Dataset"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1datasets.delete",
    "stage": "GA",
    "title": "Delete Dataset"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1datasets.get",
    "stage": "GA",
    "title": "Get Dataset"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1datasets.list",
    "stage": "GA",
    "title": "List Datasets"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1datasets.update",
    "stage": "GA",
    "title": "Update Dataset"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1engineconfigs.create",
    "stage": "GA",
    "title": "Create EngineConfig"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1engineconfigs.delete",
    "stage": "GA",
    "title": "Delete EngineConfig"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1engineconfigs.exportMetadata",
    "stage": "GA",
    "title": "Exports EngineConfig Metadata"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1engineconfigs.get",
    "stage": "GA",
    "title": "Get EngineConfig"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1engineconfigs.list",
    "stage": "GA",
    "title": "List EngineConfigs"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1engineconfigs.update",
    "stage": "GA",
    "title": "Update EngineConfig"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1engineversions.get",
    "stage": "GA",
    "title": "Get EngineVersion"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1engineversions.list",
    "stage": "GA",
    "title": "List EngineVersions"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1instances.create",
    "stage": "GA",
    "title": "Create Instance"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1instances.delete",
    "stage": "GA",
    "title": "Delete Instance"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1instances.exportRegisteredParties",
    "stage": "GA",
    "title": "Exports Registered Parties from Instance"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1instances.get",
    "stage": "GA",
    "title": "Get Instance"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1instances.importRegisteredParties",
    "stage": "GA",
    "title": "Imports Registered Parties into Instance"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1instances.list",
    "stage": "GA",
    "title": "List Instances"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1instances.update",
    "stage": "GA",
    "title": "Update Instance"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1models.create",
    "stage": "GA",
    "title": "Create Model"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1models.delete",
    "stage": "GA",
    "title": "Delete Model"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1models.exportMetadata",
    "stage": "GA",
    "title": "Exports Model Metadata"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1models.get",
    "stage": "GA",
    "title": "Get Model"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1models.list",
    "stage": "GA",
    "title": "List Models"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1models.update",
    "stage": "GA",
    "title": "Update Model"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1predictions.create",
    "stage": "GA",
    "title": "Create PredictionResult"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1predictions.delete",
    "stage": "GA",
    "title": "Delete PredictionResult"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1predictions.exportMetadata",
    "stage": "GA",
    "title": "Exports PredictionResult Metadata"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1predictions.get",
    "stage": "GA",
    "title": "Get PredictionResult"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1predictions.list",
    "stage": "GA",
    "title": "List PredictionResults"
  },
  {
    "apiDisabled": true,
    "name": "financialservices.v1predictions.update",
    "stage": "GA",
    "title": "Update PredictionResult"
  },
  {
    "apiDisabled": true,
    "name": "firebase.billingPlans.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.billingPlans.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.clients.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.clients.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.clients.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.clients.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.clients.undelete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.clients.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.links.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.links.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.links.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.links.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.playLinks.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.playLinks.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.playLinks.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.projects.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.projects.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebase.projects.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.experimentresults.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.experiments.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.experiments.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.experiments.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.experiments.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.experiments.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseabt.projectmetadata.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseanalytics.resources.googleAnalyticsAdditionalAccess",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseanalytics.resources.googleAnalyticsEdit",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseanalytics.resources.googleAnalyticsReadAndAnalyze",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseanalytics.resources.googleAnalyticsRestrictedAccess",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Get the App Attest config for a Firebase app.",
    "name": "firebaseappcheck.appAttestConfig.get",
    "stage": "GA",
    "title": "Get App Attest config"
  },
  {
    "apiDisabled": true,
    "description": "Update the App Attest config for a Firebase app.",
    "name": "firebaseappcheck.appAttestConfig.update",
    "stage": "GA",
    "title": "Update App Attest config"
  },
  {
    "apiDisabled": true,
    "description": "Verify App Check tokens issued for a Firebase project, possibly including recording and verifying token usage constraints.",
    "name": "firebaseappcheck.appCheckTokens.verify",
    "stage": "GA",
    "title": "Verify App Check tokens"
  },
  {
    "apiDisabled": true,
    "description": "Create automations for a service or resource policy.",
    "name": "firebaseappcheck.automations.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Delete automations for a service or resource policy.",
    "name": "firebaseappcheck.automations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Get automations for a service or resource policy.",
    "name": "firebaseappcheck.automations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "List automations for a service or resource policy.",
    "name": "firebaseappcheck.automations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Resume automations for a service or resource policy.",
    "name": "firebaseappcheck.automations.resume",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Suspend automations for a service or resource policy.",
    "name": "firebaseappcheck.automations.suspend",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Update automations for a service or resource policy.",
    "name": "firebaseappcheck.automations.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Get or list debug tokens for a Firebase app.",
    "name": "firebaseappcheck.debugTokens.get",
    "stage": "GA",
    "title": "Get or list debug tokens"
  },
  {
    "apiDisabled": true,
    "description": "Create, update, or delete debug tokens for a Firebase app.",
    "name": "firebaseappcheck.debugTokens.update",
    "stage": "GA",
    "title": "Create, update, or delete debug tokens"
  },
  {
    "apiDisabled": true,
    "description": "Get the DeviceCheck config for a Firebase app.",
    "name": "firebaseappcheck.deviceCheckConfig.get",
    "stage": "GA",
    "title": "Get DeviceCheck config"
  },
  {
    "apiDisabled": true,
    "description": "Update the DeviceCheck config for a Firebase app.",
    "name": "firebaseappcheck.deviceCheckConfig.update",
    "stage": "GA",
    "title": "Update DeviceCheck config"
  },
  {
    "apiDisabled": true,
    "description": "Get the Play Integrity config for a Firebase app.",
    "name": "firebaseappcheck.playIntegrityConfig.get",
    "stage": "GA",
    "title": "Get Play Integrity config"
  },
  {
    "apiDisabled": true,
    "description": "Update the Play Integrity config for a Firebase app.",
    "name": "firebaseappcheck.playIntegrityConfig.update",
    "stage": "GA",
    "title": "Update Play Integrity config"
  },
  {
    "apiDisabled": true,
    "description": "Get the reCAPTCHA Enterprise config for a Firebase app.",
    "name": "firebaseappcheck.recaptchaEnterpriseConfig.get",
    "stage": "GA",
    "title": "Get reCAPTCHA Enterprise config"
  },
  {
    "apiDisabled": true,
    "description": "Update the reCAPTCHA Enterprise config for a Firebase app.",
    "name": "firebaseappcheck.recaptchaEnterpriseConfig.update",
    "stage": "GA",
    "title": "Update reCAPTCHA Enterprise config"
  },
  {
    "apiDisabled": true,
    "description": "Get the reCAPTCHA config for a Firebase app.",
    "name": "firebaseappcheck.recaptchaV3Config.get",
    "stage": "GA",
    "title": "Get reCAPTCHA config"
  },
  {
    "apiDisabled": true,
    "description": "Update the reCAPTCHA config for a Firebase app.",
    "name": "firebaseappcheck.recaptchaV3Config.update",
    "stage": "GA",
    "title": "Update reCAPTCHA config"
  },
  {
    "apiDisabled": true,
    "description": "Get or list resource policies for a service.",
    "name": "firebaseappcheck.resourcePolicies.get",
    "stage": "GA",
    "title": "Get or list resource policies"
  },
  {
    "apiDisabled": true,
    "description": "Create, update, or delete resource policies for a service.",
    "name": "firebaseappcheck.resourcePolicies.update",
    "stage": "GA",
    "title": "Create, update, or delete resource policies"
  },
  {
    "apiDisabled": true,
    "description": "Get the SafetyNet config for a Firebase app.",
    "name": "firebaseappcheck.safetyNetConfig.get",
    "stage": "GA",
    "title": "Get SafetyNet config"
  },
  {
    "apiDisabled": true,
    "description": "Update the SafetyNet config for a Firebase app.",
    "name": "firebaseappcheck.safetyNetConfig.update",
    "stage": "GA",
    "title": "Update SafetyNet config"
  },
  {
    "apiDisabled": true,
    "description": "Get or list service configs for a Firebase project.",
    "name": "firebaseappcheck.services.get",
    "stage": "GA",
    "title": "Get or list service configs"
  },
  {
    "apiDisabled": true,
    "description": "Update or batch update service configs for a Firebase project.",
    "name": "firebaseappcheck.services.update",
    "stage": "GA",
    "title": "Update or batch update service configs"
  },
  {
    "apiDisabled": true,
    "name": "firebaseappdistro.groups.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseappdistro.groups.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseappdistro.releases.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseappdistro.releases.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseappdistro.testers.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseappdistro.testers.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.configs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.configs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.configs.getHashConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.configs.getSecret",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.configs.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.users.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.users.createSession",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.users.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.users.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.users.sendEmail",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseauth.users.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecloudmessaging.messages.create",
    "primaryPermission": "cloudmessaging.messages.create",
    "stage": "GA",
    "title": "Send Firebase Cloud Messaging message"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrash.issues.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrash.reports.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.config.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.config.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.data.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.issues.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.issues.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.issues.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasecrashlytics.sessions.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedatabase.instances.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedatabase.instances.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedatabase.instances.disable",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedatabase.instances.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedatabase.instances.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedatabase.instances.reenable",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedatabase.instances.undelete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedatabase.instances.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.connectorRevisions.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.connectorRevisions.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.connectorRevisions.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.connectors.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.connectors.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.connectors.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.connectors.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.connectors.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.schemaRevisions.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.schemaRevisions.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.schemaRevisions.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.schemas.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.schemas.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.schemas.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.schemas.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.schemas.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.services.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.services.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.services.executeGraphql",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.services.executeGraphqlRead",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.services.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.services.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedataconnect.services.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.destinations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.destinations.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.domains.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.domains.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.domains.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.domains.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.domains.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.links.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.links.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.links.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.links.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasedynamiclinks.stats.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseextensions.configs.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseextensions.configs.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseextensions.configs.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseextensions.configs.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseextensionspublisher.extensions.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseextensionspublisher.extensions.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseextensionspublisher.extensions.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseextensionspublisher.extensions.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasehosting.sites.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasehosting.sites.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasehosting.sites.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasehosting.sites.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebasehosting.sites.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseinappmessaging.campaigns.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseinappmessaging.campaigns.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseinappmessaging.campaigns.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseinappmessaging.campaigns.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseinappmessaging.campaigns.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Create Firebase Messaging Campaigns",
    "name": "firebasemessagingcampaigns.campaigns.create",
    "stage": "BETA",
    "title": "Create Firebase Messaging Campaigns"
  },
  {
    "apiDisabled": true,
    "description": "Delete Firebase Messaging Campaigns",
    "name": "firebasemessagingcampaigns.campaigns.delete",
    "stage": "BETA",
    "title": "Delete Firebase Messaging Campaigns"
  },
  {
    "apiDisabled": true,
    "description": "Get Firebase Messaging Campaigns",
    "name": "firebasemessagingcampaigns.campaigns.get",
    "stage": "BETA",
    "title": "Get Firebase Messaging Campaigns"
  },
  {
    "apiDisabled": true,
    "description": "List all Firebase Messaging Campaigns under a project",
    "name": "firebasemessagingcampaigns.campaigns.list",
    "stage": "BETA",
    "title": "List all Firebase Messaging Campaigns under a project"
  },
  {
    "apiDisabled": true,
    "description": "Start Firebase Messaging Campaigns",
    "name": "firebasemessagingcampaigns.campaigns.start",
    "stage": "BETA",
    "title": "Start Firebase Messaging Campaigns"
  },
  {
    "apiDisabled": true,
    "description": "Stop Firebase Messaging Campaigns",
    "name": "firebasemessagingcampaigns.campaigns.stop",
    "stage": "BETA",
    "title": "Stop Firebase Messaging Campaigns"
  },
  {
    "apiDisabled": true,
    "description": "Update Firebase Messaging Campaigns",
    "name": "firebasemessagingcampaigns.campaigns.update",
    "stage": "BETA",
    "title": "Update Firebase Messaging Campaigns"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.models.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.models.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.models.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.models.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.models.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.modelversions.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.modelversions.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.modelversions.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseml.modelversions.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "firebasenotifications.messages.create",
    "stage": "GA",
    "title": "Create new campaign entries for Firebase Notifications"
  },
  {
    "apiDisabled": true,
    "name": "firebasenotifications.messages.delete",
    "stage": "GA",
    "title": "Delete campaign entries for Firebase Notifications"
  },
  {
    "apiDisabled": true,
    "name": "firebasenotifications.messages.get",
    "stage": "GA",
    "title": "Read Firebase Notifications data"
  },
  {
    "apiDisabled": true,
    "name": "firebasenotifications.messages.list",
    "stage": "GA",
    "title": "List existing campaigns for Firebase Notifications"
  },
  {
    "apiDisabled": true,
    "name": "firebasenotifications.messages.update",
    "stage": "GA",
    "title": "Update campaign entries for Firebase Notifications"
  },
  {
    "apiDisabled": true,
    "name": "firebaseperformance.config.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaseperformance.data.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaserules.releases.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaserules.releases.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaserules.releases.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaserules.releases.getExecutable",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaserules.releases.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaserules.releases.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaserules.rulesets.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaserules.rulesets.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaserules.rulesets.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaserules.rulesets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "firebaserules.rulesets.test",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Link buckets to a Firebase project",
    "name": "firebasestorage.buckets.addFirebase",
    "stage": "BETA",
    "title": "Add Firebase to buckets"
  },
  {
    "apiDisabled": true,
    "description": "Get buckets linked to a Firebase project",
    "name": "firebasestorage.buckets.get",
    "stage": "BETA",
    "title": "Get buckets"
  },
  {
    "apiDisabled": true,
    "description": "List all buckets linked to a Firebase project",
    "name": "firebasestorage.buckets.list",
    "stage": "BETA",
    "title": "List buckets"
  },
  {
    "apiDisabled": true,
    "description": "Unlink buckets from a Firebase project",
    "name": "firebasestorage.buckets.removeFirebase",
    "stage": "BETA",
    "title": "Remove Firebase from buckets"
  },
  {
    "apiDisabled": true,
    "description": "Create the Spark tier-eligible bucket in the given project",
    "name": "firebasestorage.defaultBucket.create",
    "stage": "BETA",
    "title": "Create the default bucket"
  },
  {
    "apiDisabled": true,
    "description": "Delete the Spark tier-eligible bucket in the given project",
    "name": "firebasestorage.defaultBucket.delete",
    "stage": "BETA",
    "title": "Delete the default bucket"
  },
  {
    "apiDisabled": true,
    "description": "Get the name of the Spark tier-eligible bucket in the given project",
    "name": "firebasestorage.defaultBucket.get",
    "stage": "BETA",
    "title": "Get the default bucket"
  },
  {
    "apiDisabled": true,
    "description": "Get a Config",
    "name": "firebasevertexai.configs.get",
    "stage": "BETA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "description": "Update a Config",
    "name": "firebasevertexai.configs.update",
    "stage": "BETA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.deliveryvehicles.allowAllActions",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.deliveryvehicles.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.deliveryvehicles.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.deliveryvehicles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.deliveryvehicles.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.deliveryvehicles.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.deliveryvehicles.updateLocation",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.deliveryvehicles.updateVehicleStops",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.tasks.allowAllActions",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.tasks.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.tasks.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.tasks.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.tasks.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.tasks.searchWithTrackingId",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.tasks.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.tasktrackinginfo.allowAllActions",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.tasktrackinginfo.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.trips.allowAllActions",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.trips.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.trips.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.trips.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.trips.search",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.trips.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.trips.updateState",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.vehicles.allowAllActions",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.vehicles.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.vehicles.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.vehicles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.vehicles.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.vehicles.search",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.vehicles.searchFuzzed",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.vehicles.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "fleetengine.vehicles.updateLocation",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "gcp.redisenterprise.com/databases.create",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Create database"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "gcp.redisenterprise.com/databases.delete",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Delete database"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "gcp.redisenterprise.com/databases.get",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Get database"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "gcp.redisenterprise.com/databases.list",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "List databases"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "gcp.redisenterprise.com/databases.update",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Update database"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "gcp.redisenterprise.com/subscriptions.create",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Create subscription"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "gcp.redisenterprise.com/subscriptions.delete",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Delete subscription"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "gcp.redisenterprise.com/subscriptions.get",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Get subscription"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "gcp.redisenterprise.com/subscriptions.list",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "List subscriptions"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "This permission is managed by Redis Labs, not Google.",
    "name": "gcp.redisenterprise.com/subscriptions.update",
    "onlyInPredefinedRoles": true,
    "stage": "BETA",
    "title": "Update subscription"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.changeLogEntries.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.changeLogEntries.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.comments.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.comments.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.comments.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.hardware.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.hardware.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.hardware.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.hardware.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.hardware.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.hardwareGroups.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.hardwareGroups.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.hardwareGroups.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.hardwareGroups.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.hardwareGroups.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.orders.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.orders.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.orders.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.orders.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.orders.submit",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.orders.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.sites.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.sites.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.sites.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.sites.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.skus.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.skus.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.zones.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.zones.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.zones.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.zones.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "gdchardwaremanagement.zones.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.investigationRevisions.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.investigationRevisions.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.investigationRevisions.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.investigationRevisions.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.investigationRevisions.run",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.investigationRevisions.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.investigations.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.investigations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.investigations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.investigations.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.investigations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.investigations.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.investigations.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminicloudassist.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminidataanalytics.dataAgents.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminidataanalytics.dataAgents.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminidataanalytics.dataAgents.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminidataanalytics.dataAgents.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminidataanalytics.dataAgents.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminidataanalytics.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminidataanalytics.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminidataanalytics.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminidataanalytics.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminidataanalytics.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "geminidataanalytics.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.datasets.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.operations.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "genomics.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "gke.fleets.create",
    "onlyInPredefinedRoles": true,
    "primaryPermission": "gkehub.fleet.create",
    "stage": "GA",
    "title": "Create Fleet"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "gke.fleets.delete",
    "onlyInPredefinedRoles": true,
    "primaryPermission": "gkehub.fleet.delete",
    "stage": "GA",
    "title": "Delete Fleet"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "gke.fleets.get",
    "onlyInPredefinedRoles": true,
    "primaryPermission": "gkehub.fleet.get",
    "stage": "GA",
    "title": "Get Fleet"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "gke.fleets.update",
    "onlyInPredefinedRoles": true,
    "primaryPermission": "gkehub.fleet.update",
    "stage": "GA",
    "title": "Update Fleet"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupChannels.create",
    "stage": "GA",
    "title": "Create BackupChannel"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupChannels.delete",
    "stage": "GA",
    "title": "Delete BackupChannel"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupChannels.get",
    "stage": "GA",
    "title": "Get BackupChannel"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupChannels.list",
    "stage": "GA",
    "title": "List BackupChannels"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupChannels.update",
    "stage": "GA",
    "title": "Update BackupChannel"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupPlanBindings.get",
    "stage": "GA",
    "title": "Get BackupPlanBinding"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupPlanBindings.list",
    "stage": "GA",
    "title": "List BackupPlanBindings"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupPlans.create",
    "stage": "GA",
    "title": "Create BackupPlan"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupPlans.delete",
    "stage": "GA",
    "title": "Delete BackupPlan"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupPlans.get",
    "stage": "GA",
    "title": "Get BackupPlan"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupPlans.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on BackupPlan"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupPlans.list",
    "stage": "GA",
    "title": "List BackupPlans"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupPlans.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on BackupPlan"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backupPlans.update",
    "stage": "GA",
    "title": "Update BackupPlan"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backups.create",
    "stage": "GA",
    "title": "Create Backup"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backups.delete",
    "stage": "GA",
    "title": "Delete Backup"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backups.get",
    "stage": "GA",
    "title": "Get Backup"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backups.getBackupIndex",
    "stage": "GA",
    "title": "Get Backup Index"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backups.list",
    "stage": "GA",
    "title": "List Backups"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.backups.update",
    "stage": "GA",
    "title": "Update Backup"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.operations.list",
    "stage": "GA",
    "title": "List Operations"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restoreChannels.create",
    "stage": "GA",
    "title": "Create RestoreChannel"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restoreChannels.delete",
    "stage": "GA",
    "title": "Delete RestoreChannel"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restoreChannels.get",
    "stage": "GA",
    "title": "Get RestoreChannel"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restoreChannels.list",
    "stage": "GA",
    "title": "List RestoreChannels"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restoreChannels.update",
    "stage": "GA",
    "title": "Update RestoreChannel"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restorePlanBindings.get",
    "stage": "GA",
    "title": "Get RestorePlanBinding"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restorePlanBindings.list",
    "stage": "GA",
    "title": "List RestorePlanBindings"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restorePlans.create",
    "stage": "GA",
    "title": "Create RestorePlan"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restorePlans.delete",
    "stage": "GA",
    "title": "Delete RestorePlan"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restorePlans.get",
    "stage": "GA",
    "title": "Get RestorePlan"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restorePlans.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on RestorePlan"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restorePlans.list",
    "stage": "GA",
    "title": "List RestorePlans"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restorePlans.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on RestorePlan"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restorePlans.update",
    "stage": "GA",
    "title": "Update RestorePlan"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restores.create",
    "stage": "GA",
    "title": "Create Restore"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restores.delete",
    "stage": "GA",
    "title": "Delete Restore"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restores.get",
    "stage": "GA",
    "title": "Get Restore"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restores.list",
    "stage": "GA",
    "title": "List Restores"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.restores.update",
    "stage": "GA",
    "title": "Update Restore"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.volumeBackups.get",
    "stage": "GA",
    "title": "Get VolumeBackup"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.volumeBackups.list",
    "stage": "GA",
    "title": "List VolumeBackups"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.volumeRestores.get",
    "stage": "GA",
    "title": "Get VolumeRestore"
  },
  {
    "apiDisabled": true,
    "name": "gkebackup.volumeRestores.list",
    "stage": "GA",
    "title": "List VolumeRestores"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.endpoints.connect",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.features.create",
    "stage": "GA",
    "title": "Create Feature"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.features.delete",
    "stage": "GA",
    "title": "Delete Feature"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.features.get",
    "stage": "GA",
    "title": "Get Feature"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.features.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy for Feature"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.features.list",
    "stage": "GA",
    "title": "List Features"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.features.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Feature"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.features.update",
    "stage": "GA",
    "title": "Update Feature"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "gkehub.fleet.create",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Create Fleet"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.fleet.createFreeTrial",
    "stage": "GA",
    "title": "Create Free Trial"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "gkehub.fleet.delete",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Delete Fleet"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "gkehub.fleet.get",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Get Fleet"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.fleet.getFreeTrial",
    "stage": "GA",
    "title": "Get Free Trial"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "gkehub.fleet.update",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Update Fleet"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.fleet.updateFreeTrial",
    "stage": "GA",
    "title": "Update Free Trial"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.gateway.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.gateway.generateCredentials",
    "stage": "GA",
    "title": "Generate credentials for Gateway"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.gateway.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.gateway.patch",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.gateway.post",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.gateway.put",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.gateway.stream",
    "stage": "GA",
    "title": "Use streaming functionality on Gateway"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.membershipbindings.create",
    "stage": "GA",
    "title": "Create MembershipBindings"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.membershipbindings.delete",
    "stage": "GA",
    "title": "Delete MembershipBindings"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.membershipbindings.get",
    "stage": "GA",
    "title": "Get MembershipBindings"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.membershipbindings.list",
    "stage": "GA",
    "title": "List MembershipBindings"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.membershipbindings.update",
    "stage": "GA",
    "title": "Update MembershipBindings"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.membershipfeatures.create",
    "stage": "GA",
    "title": "Create MembershipFeatures"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.membershipfeatures.delete",
    "stage": "GA",
    "title": "Delete MembershipFeatures"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.membershipfeatures.get",
    "stage": "GA",
    "title": "Get MembershipFeatures"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.membershipfeatures.list",
    "stage": "GA",
    "title": "List MembershipFeatures"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.membershipfeatures.update",
    "stage": "GA",
    "title": "Update MembershipFeatures"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.create",
    "stage": "GA",
    "title": "Create Membership"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.delete",
    "stage": "GA",
    "title": "Delete Membership"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.generateConnectManifest",
    "stage": "GA",
    "title": "Generate Connect Manifest"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.get",
    "stage": "GA",
    "title": "Get Membership"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy for Membership"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.list",
    "stage": "GA",
    "title": "List Memberships"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Membership"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.memberships.update",
    "stage": "GA",
    "title": "Update Membership"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.namespaces.create",
    "stage": "GA",
    "title": "Create Namespace"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.namespaces.delete",
    "stage": "GA",
    "title": "Delete Namespace"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.namespaces.get",
    "stage": "GA",
    "title": "Get Namespace"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.namespaces.list",
    "stage": "GA",
    "title": "List Namespaces"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.namespaces.update",
    "stage": "GA",
    "title": "Update Namespace"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.rbacrolebindings.create",
    "stage": "GA",
    "title": "Create RBACRoleBinding"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.rbacrolebindings.delete",
    "stage": "GA",
    "title": "Delete RBACRoleBinding"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.rbacrolebindings.get",
    "stage": "GA",
    "title": "Get RBACRoleBinding"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.rbacrolebindings.list",
    "stage": "GA",
    "title": "List RBACRoleBindings"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.rbacrolebindings.update",
    "stage": "GA",
    "title": "Update RBACRoleBinding"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.scopes.create",
    "stage": "GA",
    "title": "Create Scopes"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.scopes.delete",
    "stage": "GA",
    "title": "Delete Scopes"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.scopes.get",
    "stage": "GA",
    "title": "Get Scopes"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.scopes.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy for Scope"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.scopes.list",
    "stage": "GA",
    "title": "List Scopes"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.scopes.listBoundMemberships",
    "stage": "GA",
    "title": "List Memberships Bound to a Scope"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.scopes.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Scope"
  },
  {
    "apiDisabled": true,
    "name": "gkehub.scopes.update",
    "stage": "GA",
    "title": "Update Scopes"
  },
  {
    "apiDisabled": true,
    "description": "Create Attached Clusters",
    "name": "gkemulticloud.attachedClusters.create",
    "stage": "GA",
    "title": "create"
  },
  {
    "apiDisabled": true,
    "description": "Delete Attached Clusters",
    "name": "gkemulticloud.attachedClusters.delete",
    "stage": "GA",
    "title": "delete"
  },
  {
    "apiDisabled": true,
    "description": "Generate the install manifest for an attached cluster",
    "name": "gkemulticloud.attachedClusters.generateInstallManifest",
    "stage": "GA",
    "title": "generate install manifest"
  },
  {
    "apiDisabled": true,
    "description": "Get Attached Clusters",
    "name": "gkemulticloud.attachedClusters.get",
    "stage": "GA",
    "title": "get"
  },
  {
    "apiDisabled": true,
    "description": "Import Attached Clusters",
    "name": "gkemulticloud.attachedClusters.import",
    "stage": "GA",
    "title": "import"
  },
  {
    "apiDisabled": true,
    "description": "List all Attached Clusters",
    "name": "gkemulticloud.attachedClusters.list",
    "stage": "GA",
    "title": "list"
  },
  {
    "apiDisabled": true,
    "description": "Update Attached Clusters",
    "name": "gkemulticloud.attachedClusters.update",
    "stage": "GA",
    "title": "update"
  },
  {
    "apiDisabled": true,
    "description": "Get attached server configs",
    "name": "gkemulticloud.attachedServerConfigs.get",
    "stage": "GA",
    "title": "get"
  },
  {
    "apiDisabled": true,
    "description": "Create AWS Clusters",
    "name": "gkemulticloud.awsClusters.create",
    "stage": "GA",
    "title": "create"
  },
  {
    "apiDisabled": true,
    "description": "Delete AWS Clusters",
    "name": "gkemulticloud.awsClusters.delete",
    "stage": "GA",
    "title": "delete"
  },
  {
    "apiDisabled": true,
    "description": "Generates access tokens to authenticate to AWS Clusters",
    "name": "gkemulticloud.awsClusters.generateAccessToken",
    "stage": "GA",
    "title": "generateAccessToken"
  },
  {
    "apiDisabled": true,
    "description": "Get AWS Clusters",
    "name": "gkemulticloud.awsClusters.get",
    "stage": "GA",
    "title": "get"
  },
  {
    "apiDisabled": true,
    "description": "Get the admin kubeconfig for AWS Clusters",
    "name": "gkemulticloud.awsClusters.getAdminKubeconfig",
    "stage": "GA",
    "title": "getAdminKubeconfig"
  },
  {
    "apiDisabled": true,
    "description": "List all AWS Clusters",
    "name": "gkemulticloud.awsClusters.list",
    "stage": "GA",
    "title": "list"
  },
  {
    "apiDisabled": true,
    "description": "Update AWS Clusters",
    "name": "gkemulticloud.awsClusters.update",
    "stage": "GA",
    "title": "update"
  },
  {
    "apiDisabled": true,
    "description": "Create AWS Node Pools",
    "name": "gkemulticloud.awsNodePools.create",
    "stage": "GA",
    "title": "create"
  },
  {
    "apiDisabled": true,
    "description": "Delete AWS Node Pools",
    "name": "gkemulticloud.awsNodePools.delete",
    "stage": "GA",
    "title": "delete"
  },
  {
    "apiDisabled": true,
    "description": "Get AWS Node Pools",
    "name": "gkemulticloud.awsNodePools.get",
    "stage": "GA",
    "title": "get"
  },
  {
    "apiDisabled": true,
    "description": "List all AWS Node Pools",
    "name": "gkemulticloud.awsNodePools.list",
    "stage": "GA",
    "title": "list"
  },
  {
    "apiDisabled": true,
    "description": "Update AWS Node Pools",
    "name": "gkemulticloud.awsNodePools.update",
    "stage": "GA",
    "title": "update"
  },
  {
    "apiDisabled": true,
    "description": "Get AWS server configs",
    "name": "gkemulticloud.awsServerConfigs.get",
    "stage": "GA",
    "title": "get"
  },
  {
    "apiDisabled": true,
    "description": "Create Azure Clients",
    "name": "gkemulticloud.azureClients.create",
    "stage": "GA",
    "title": "create"
  },
  {
    "apiDisabled": true,
    "description": "Delete Azure Clients",
    "name": "gkemulticloud.azureClients.delete",
    "stage": "GA",
    "title": "delete"
  },
  {
    "apiDisabled": true,
    "description": "Get Azure Clients",
    "name": "gkemulticloud.azureClients.get",
    "stage": "GA",
    "title": "get"
  },
  {
    "apiDisabled": true,
    "description": "List all Azure Clients",
    "name": "gkemulticloud.azureClients.list",
    "stage": "GA",
    "title": "list"
  },
  {
    "apiDisabled": true,
    "description": "Create Azure Clusters",
    "name": "gkemulticloud.azureClusters.create",
    "stage": "GA",
    "title": "create"
  },
  {
    "apiDisabled": true,
    "description": "Delete Azure Clusters",
    "name": "gkemulticloud.azureClusters.delete",
    "stage": "GA",
    "title": "delete"
  },
  {
    "apiDisabled": true,
    "description": "Generates access tokens to authenticate to Azure Clusters",
    "name": "gkemulticloud.azureClusters.generateAccessToken",
    "stage": "GA",
    "title": "generateAccessToken"
  },
  {
    "apiDisabled": true,
    "description": "Get Azure Clusters",
    "name": "gkemulticloud.azureClusters.get",
    "stage": "GA",
    "title": "get"
  },
  {
    "apiDisabled": true,
    "description": "Get the admin kubeconfig for Azure Clusters",
    "name": "gkemulticloud.azureClusters.getAdminKubeconfig",
    "stage": "GA",
    "title": "getAdminKubeconfig"
  },
  {
    "apiDisabled": true,
    "description": "List all Azure Clusters",
    "name": "gkemulticloud.azureClusters.list",
    "stage": "GA",
    "title": "list"
  },
  {
    "apiDisabled": true,
    "description": "Update Azure Clusters",
    "name": "gkemulticloud.azureClusters.update",
    "stage": "GA",
    "title": "update"
  },
  {
    "apiDisabled": true,
    "description": "Create Azure Node Pools",
    "name": "gkemulticloud.azureNodePools.create",
    "stage": "GA",
    "title": "create"
  },
  {
    "apiDisabled": true,
    "description": "Delete Azure Node Pools",
    "name": "gkemulticloud.azureNodePools.delete",
    "stage": "GA",
    "title": "delete"
  },
  {
    "apiDisabled": true,
    "description": "Get Azure Node Pools",
    "name": "gkemulticloud.azureNodePools.get",
    "stage": "GA",
    "title": "get"
  },
  {
    "apiDisabled": true,
    "description": "List all Azure Node Pools",
    "name": "gkemulticloud.azureNodePools.list",
    "stage": "GA",
    "title": "list"
  },
  {
    "apiDisabled": true,
    "description": "Update Azure Node Pools",
    "name": "gkemulticloud.azureNodePools.update",
    "stage": "GA",
    "title": "update"
  },
  {
    "apiDisabled": true,
    "description": "Get Azure server configs",
    "name": "gkemulticloud.azureServerConfigs.get",
    "stage": "GA",
    "title": "get"
  },
  {
    "apiDisabled": true,
    "description": "Cancel Long Running Operations",
    "name": "gkemulticloud.operations.cancel",
    "stage": "GA",
    "title": "cancel"
  },
  {
    "apiDisabled": true,
    "description": "Delete Long Running Operations",
    "name": "gkemulticloud.operations.delete",
    "stage": "GA",
    "title": "delete"
  },
  {
    "apiDisabled": true,
    "description": "Get Long Running Operations",
    "name": "gkemulticloud.operations.get",
    "stage": "GA",
    "title": "get"
  },
  {
    "apiDisabled": true,
    "description": "List all Long Running Operations",
    "name": "gkemulticloud.operations.list",
    "stage": "GA",
    "title": "list"
  },
  {
    "apiDisabled": true,
    "description": "Wait for Long Running Operations to finish",
    "name": "gkemulticloud.operations.wait",
    "stage": "GA",
    "title": "wait"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.connect",
    "stage": "GA",
    "title": "Connect To Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.create",
    "stage": "GA",
    "title": "Create Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.enroll",
    "stage": "GA",
    "title": "Enroll Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.get",
    "stage": "GA",
    "title": "Get Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.list",
    "stage": "GA",
    "title": "List Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tags on Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.queryVersionConfig",
    "stage": "GA",
    "title": "Query version config for Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.unenroll",
    "stage": "GA",
    "title": "Unenroll Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalAdminClusters.update",
    "stage": "GA",
    "title": "Update Bare Metal Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.create",
    "stage": "GA",
    "title": "Create Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.delete",
    "stage": "GA",
    "title": "Delete Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.enroll",
    "stage": "GA",
    "title": "Enroll Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.get",
    "stage": "GA",
    "title": "Get Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.list",
    "stage": "GA",
    "title": "List Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tags on Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.queryVersionConfig",
    "stage": "GA",
    "title": "Query version config for Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.unenroll",
    "stage": "GA",
    "title": "Unenroll Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalClusters.update",
    "stage": "GA",
    "title": "Update Bare Metal Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalNodePools.create",
    "stage": "GA",
    "title": "Create Bare Metal Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalNodePools.delete",
    "stage": "GA",
    "title": "Delete Bare Metal Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalNodePools.enroll",
    "stage": "GA",
    "title": "Enroll Bare Metal Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalNodePools.get",
    "stage": "GA",
    "title": "Get Bare Metal Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalNodePools.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Bare Metal Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalNodePools.list",
    "stage": "GA",
    "title": "List Bare Metal Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalNodePools.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Bare Metal Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalNodePools.unenroll",
    "stage": "GA",
    "title": "Unenroll Bare Metal Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.bareMetalNodePools.update",
    "stage": "GA",
    "title": "Update Bare Metal Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareAdminClusters.connect",
    "stage": "GA",
    "title": "Connect To VMware Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareAdminClusters.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on VMware Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareAdminClusters.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on VMware Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareAdminClusters.enroll",
    "stage": "GA",
    "title": "Enroll VMware Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareAdminClusters.get",
    "stage": "GA",
    "title": "Get VMware Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareAdminClusters.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on VMware Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareAdminClusters.list",
    "stage": "GA",
    "title": "List VMware Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareAdminClusters.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tags on VMware Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareAdminClusters.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on VMware Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareAdminClusters.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on VMware Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareAdminClusters.unenroll",
    "stage": "GA",
    "title": "Unenroll VMware Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareAdminClusters.update",
    "stage": "GA",
    "title": "Update VMware Admin Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.create",
    "stage": "GA",
    "title": "Create VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.delete",
    "stage": "GA",
    "title": "Delete VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.enroll",
    "stage": "GA",
    "title": "Enroll VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.get",
    "stage": "GA",
    "title": "Get VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.list",
    "stage": "GA",
    "title": "List VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tags on VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.queryVersionConfig",
    "stage": "GA",
    "title": "Query version config for VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.unenroll",
    "stage": "GA",
    "title": "Unenroll VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareClusters.update",
    "stage": "GA",
    "title": "Update VMware Clusters"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareNodePools.create",
    "stage": "GA",
    "title": "Create VMware Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareNodePools.delete",
    "stage": "GA",
    "title": "Delete VMware Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareNodePools.enroll",
    "stage": "GA",
    "title": "Enroll VMware Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareNodePools.get",
    "stage": "GA",
    "title": "Get VMware Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareNodePools.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on VMware Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareNodePools.list",
    "stage": "GA",
    "title": "List VMware Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareNodePools.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on VMware Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareNodePools.unenroll",
    "stage": "GA",
    "title": "Unenroll VMware Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gkeonprem.vmwareNodePools.update",
    "stage": "GA",
    "title": "Update VMware Node Pools"
  },
  {
    "apiDisabled": true,
    "name": "gsuiteaddons.authorizations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gsuiteaddons.deployments.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gsuiteaddons.deployments.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gsuiteaddons.deployments.execute",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gsuiteaddons.deployments.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gsuiteaddons.deployments.install",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gsuiteaddons.deployments.installStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gsuiteaddons.deployments.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gsuiteaddons.deployments.uninstall",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "gsuiteaddons.deployments.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotationStores.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotationStores.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotationStores.evaluate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotationStores.export",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotationStores.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotationStores.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotationStores.import",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotationStores.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotationStores.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotationStores.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotations.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.annotations.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.attributeDefinitions.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.attributeDefinitions.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.attributeDefinitions.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.attributeDefinitions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.attributeDefinitions.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentArtifacts.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentArtifacts.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentArtifacts.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentArtifacts.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentStores.checkDataAccess",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentStores.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentStores.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentStores.evaluateUserConsents",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentStores.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentStores.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentStores.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentStores.queryAccessibleData",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentStores.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consentStores.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consents.activate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consents.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consents.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consents.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consents.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consents.reject",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consents.revoke",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.consents.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.deidentify",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.datasets.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.deidentify",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.dicomWebDelete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.dicomWebRead",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.dicomWebWrite",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.export",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.import",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.dicomStores.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirResources.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirResources.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirResources.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirResources.patch",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirResources.purge",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirResources.translateConceptMap",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirResources.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.applyConsents",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.configureSearch",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.deidentify",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.deleteFhirOperation",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.executeBundle",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.explainDataAccess",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.export",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.getFhirOperation",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.import",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.rollback",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.searchResources",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.fhirStores.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Messages.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Messages.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Messages.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Messages.ingest",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Messages.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Messages.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.export",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.import",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.rollback",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.hl7V2Stores.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.nlpservice.analyzeEntities",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.userDataMappings.archive",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.userDataMappings.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.userDataMappings.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.userDataMappings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.userDataMappings.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "healthcare.userDataMappings.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.clusters.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.clusters.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.clusters.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.clusters.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.clusters.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.machineLearningRuns.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.machineLearningRuns.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.machineLearningRuns.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.machineLearningRuns.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.machineLearningRuns.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "hypercomputecluster.operations.list",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "iam.denypolicies.create",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Create IAM deny policies"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "iam.denypolicies.delete",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Delete IAM deny policies"
  },
  {
    "name": "iam.denypolicies.get",
    "stage": "GA",
    "title": "Get IAM deny policies"
  },
  {
    "name": "iam.denypolicies.list",
    "stage": "GA",
    "title": "List IAM deny policies"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "iam.denypolicies.replace",
    "onlyInPredefinedRoles": true,
    "primaryPermission": "iam.denypolicies.update",
    "stage": "GA",
    "title": "Update IAM deny policies"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "iam.denypolicies.update",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Update IAM deny policies"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "iam.googleapis.com/denypolicies.create",
    "onlyInPredefinedRoles": true,
    "primaryPermission": "iam.denypolicies.create",
    "stage": "GA",
    "title": "Create IAM deny policies"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "iam.googleapis.com/denypolicies.delete",
    "onlyInPredefinedRoles": true,
    "primaryPermission": "iam.denypolicies.delete",
    "stage": "GA",
    "title": "Delete IAM deny policies"
  },
  {
    "name": "iam.googleapis.com/denypolicies.get",
    "primaryPermission": "iam.denypolicies.get",
    "stage": "GA",
    "title": "Get IAM deny policies"
  },
  {
    "name": "iam.googleapis.com/denypolicies.list",
    "primaryPermission": "iam.denypolicies.list",
    "stage": "GA",
    "title": "List IAM deny policies"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "iam.googleapis.com/denypolicies.replace",
    "onlyInPredefinedRoles": true,
    "primaryPermission": "iam.denypolicies.update",
    "stage": "GA",
    "title": "Update IAM deny policies"
  },
  {
    "name": "iam.googleapis.com/oauthClientCredentials.create",
    "stage": "GA",
    "title": "Create Workforce Pool OAuth Client Credential"
  },
  {
    "name": "iam.googleapis.com/oauthClientCredentials.delete",
    "stage": "GA",
    "title": "Delete Workforce Pool OAuth Client Credential"
  },
  {
    "name": "iam.googleapis.com/oauthClientCredentials.get",
    "stage": "GA",
    "title": "Get Workforce Pool OAuth Client Credential"
  },
  {
    "name": "iam.googleapis.com/oauthClientCredentials.list",
    "stage": "GA",
    "title": "List Workforce Pool OAuth Client Credentials"
  },
  {
    "name": "iam.googleapis.com/oauthClientCredentials.update",
    "stage": "GA",
    "title": "Update Workforce Pool OAuth Client Credential"
  },
  {
    "name": "iam.googleapis.com/oauthClients.create",
    "stage": "GA",
    "title": "Create Workforce Pool OAuth Client"
  },
  {
    "name": "iam.googleapis.com/oauthClients.delete",
    "stage": "GA",
    "title": "Delete Workforce Pool OAuth Client"
  },
  {
    "name": "iam.googleapis.com/oauthClients.get",
    "stage": "GA",
    "title": "Get Workforce Pool OAuth Client"
  },
  {
    "name": "iam.googleapis.com/oauthClients.list",
    "stage": "GA",
    "title": "List Workforce Pool OAuth Clients"
  },
  {
    "name": "iam.googleapis.com/oauthClients.undelete",
    "stage": "GA",
    "title": "Undelete Workforce Pool OAuth Client"
  },
  {
    "name": "iam.googleapis.com/oauthClients.update",
    "stage": "GA",
    "title": "Update Workforce Pool OAuth Client"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPoolProviderKeys.create",
    "stage": "BETA",
    "title": "Create Workload Identity Pool Provider Key"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPoolProviderKeys.delete",
    "stage": "BETA",
    "title": "Delete Workload Identity Pool Provider Key"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPoolProviderKeys.get",
    "stage": "BETA",
    "title": "Get Workload Identity Pool Provider Key"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPoolProviderKeys.list",
    "stage": "BETA",
    "title": "List Workload Identity Pool Provider Keys"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPoolProviderKeys.undelete",
    "stage": "BETA",
    "title": "Undelete Workload Identity Pool Provider Key"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPoolProviders.create",
    "stage": "BETA",
    "title": "Create Workload Identity Pool Provider"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPoolProviders.delete",
    "stage": "BETA",
    "title": "Delete Workload Identity Pool Provider"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPoolProviders.get",
    "stage": "BETA",
    "title": "Get Workload Identity Pool Provider"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPoolProviders.list",
    "stage": "BETA",
    "title": "List Workload Identity Pool Providers"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPoolProviders.undelete",
    "stage": "BETA",
    "title": "Undelete Workload Identity Pool Provider"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPoolProviders.update",
    "stage": "BETA",
    "title": "Update Workload Identity Pool Provider"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPools.create",
    "stage": "BETA",
    "title": "Create Workload Identity Pool"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPools.delete",
    "stage": "BETA",
    "title": "Delete Workload Identity Pool"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPools.get",
    "stage": "BETA",
    "title": "Get Workload Identity Pool"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPools.list",
    "stage": "BETA",
    "title": "List Workload Identity Pools"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPools.undelete",
    "stage": "BETA",
    "title": "Undelete Workload Identity Pool"
  },
  {
    "name": "iam.googleapis.com/workloadIdentityPools.update",
    "stage": "BETA",
    "title": "Update Workload Identity Pool"
  },
  {
    "name": "iam.oauthClientCredentials.create",
    "primaryPermission": "iam.googleapis.com/oauthClientCredentials.create",
    "stage": "GA",
    "title": "Create Workforce Pool OAuth Client Credential"
  },
  {
    "name": "iam.oauthClientCredentials.delete",
    "primaryPermission": "iam.googleapis.com/oauthClientCredentials.delete",
    "stage": "GA",
    "title": "Delete Workforce Pool OAuth Client Credential"
  },
  {
    "name": "iam.oauthClientCredentials.get",
    "primaryPermission": "iam.googleapis.com/oauthClientCredentials.get",
    "stage": "GA",
    "title": "Get Workforce Pool OAuth Client Credential"
  },
  {
    "name": "iam.oauthClientCredentials.list",
    "primaryPermission": "iam.googleapis.com/oauthClientCredentials.list",
    "stage": "GA",
    "title": "List Workforce Pool OAuth Client Credentials"
  },
  {
    "name": "iam.oauthClientCredentials.update",
    "primaryPermission": "iam.googleapis.com/oauthClientCredentials.update",
    "stage": "GA",
    "title": "Update Workforce Pool OAuth Client Credential"
  },
  {
    "name": "iam.oauthClients.create",
    "primaryPermission": "iam.googleapis.com/oauthClients.create",
    "stage": "GA",
    "title": "Create Workforce Pool OAuth Client"
  },
  {
    "name": "iam.oauthClients.delete",
    "primaryPermission": "iam.googleapis.com/oauthClients.delete",
    "stage": "GA",
    "title": "Delete Workforce Pool OAuth Client"
  },
  {
    "name": "iam.oauthClients.get",
    "primaryPermission": "iam.googleapis.com/oauthClients.get",
    "stage": "GA",
    "title": "Get Workforce Pool OAuth Client"
  },
  {
    "name": "iam.oauthClients.list",
    "primaryPermission": "iam.googleapis.com/oauthClients.list",
    "stage": "GA",
    "title": "List Workforce Pool OAuth Clients"
  },
  {
    "name": "iam.oauthClients.undelete",
    "primaryPermission": "iam.googleapis.com/oauthClients.undelete",
    "stage": "GA",
    "title": "Undelete Workforce Pool OAuth Client"
  },
  {
    "name": "iam.oauthClients.update",
    "primaryPermission": "iam.googleapis.com/oauthClients.update",
    "stage": "GA",
    "title": "Update Workforce Pool OAuth Client"
  },
  {
    "name": "iam.operations.get",
    "stage": "GA",
    "title": "Get IAM Operations"
  },
  {
    "name": "iam.policybindings.get",
    "stage": "GA",
    "title": "Get IAM Policy Bindings"
  },
  {
    "name": "iam.policybindings.list",
    "stage": "GA",
    "title": "List IAM Policy Bindings"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "iam.principalaccessboundarypolicies.bind",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Bind IAM Principal Access Boundary Policies"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "iam.principalaccessboundarypolicies.create",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Create IAM Principal Access Boundary Policies"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "iam.principalaccessboundarypolicies.delete",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Delete IAM Principal Access Boundary Policies"
  },
  {
    "name": "iam.principalaccessboundarypolicies.get",
    "stage": "GA",
    "title": "Get IAM Principal Access Boundary Policies"
  },
  {
    "name": "iam.principalaccessboundarypolicies.list",
    "stage": "GA",
    "title": "List IAM Principal Access Boundary Policies"
  },
  {
    "name": "iam.principalaccessboundarypolicies.searchPolicyBindings",
    "stage": "GA",
    "title": "Search Policy Bindings that Reference IAM Principal Access Boundary Policies"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "iam.principalaccessboundarypolicies.unbind",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Unbind IAM Principal Access Boundary Policies"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "iam.principalaccessboundarypolicies.update",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Update IAM Principal Access Boundary Policies"
  },
  {
    "name": "iam.roles.create",
    "stage": "GA"
  },
  {
    "name": "iam.roles.delete",
    "stage": "GA"
  },
  {
    "name": "iam.roles.get",
    "stage": "GA"
  },
  {
    "name": "iam.roles.list",
    "stage": "GA"
  },
  {
    "name": "iam.roles.undelete",
    "stage": "GA"
  },
  {
    "name": "iam.roles.update",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccountApiKeyBindings.create",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccountApiKeyBindings.delete",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccountApiKeyBindings.undelete",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccountKeys.create",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccountKeys.delete",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccountKeys.disable",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccountKeys.enable",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccountKeys.get",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccountKeys.list",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.actAs",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.create",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.createTagBinding",
    "stage": "BETA"
  },
  {
    "name": "iam.serviceAccounts.delete",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.deleteTagBinding",
    "stage": "BETA"
  },
  {
    "name": "iam.serviceAccounts.disable",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.enable",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.get",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.getAccessToken",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.getOpenIdToken",
    "stage": "BETA"
  },
  {
    "name": "iam.serviceAccounts.implicitDelegation",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.list",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.listEffectiveTags",
    "stage": "BETA"
  },
  {
    "name": "iam.serviceAccounts.listTagBindings",
    "stage": "BETA"
  },
  {
    "name": "iam.serviceAccounts.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.signBlob",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.signJwt",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.undelete",
    "stage": "GA"
  },
  {
    "name": "iam.serviceAccounts.update",
    "stage": "GA"
  },
  {
    "name": "iam.workloadIdentityPoolProviderKeys.create",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPoolProviderKeys.create",
    "stage": "BETA",
    "title": "Create Workload Identity Pool Provider Key"
  },
  {
    "name": "iam.workloadIdentityPoolProviderKeys.delete",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPoolProviderKeys.delete",
    "stage": "BETA",
    "title": "Delete Workload Identity Pool Provider Key"
  },
  {
    "name": "iam.workloadIdentityPoolProviderKeys.get",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPoolProviderKeys.get",
    "stage": "BETA",
    "title": "Get Workload Identity Pool Provider Key"
  },
  {
    "name": "iam.workloadIdentityPoolProviderKeys.list",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPoolProviderKeys.list",
    "stage": "BETA",
    "title": "List Workload Identity Pool Provider Keys"
  },
  {
    "name": "iam.workloadIdentityPoolProviderKeys.undelete",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPoolProviderKeys.undelete",
    "stage": "BETA",
    "title": "Undelete Workload Identity Pool Provider Key"
  },
  {
    "name": "iam.workloadIdentityPoolProviders.create",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPoolProviders.create",
    "stage": "BETA",
    "title": "Create Workload Identity Pool Provider"
  },
  {
    "name": "iam.workloadIdentityPoolProviders.delete",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPoolProviders.delete",
    "stage": "BETA",
    "title": "Delete Workload Identity Pool Provider"
  },
  {
    "name": "iam.workloadIdentityPoolProviders.get",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPoolProviders.get",
    "stage": "BETA",
    "title": "Get Workload Identity Pool Provider"
  },
  {
    "name": "iam.workloadIdentityPoolProviders.list",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPoolProviders.list",
    "stage": "BETA",
    "title": "List Workload Identity Pool Providers"
  },
  {
    "name": "iam.workloadIdentityPoolProviders.undelete",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPoolProviders.undelete",
    "stage": "BETA",
    "title": "Undelete Workload Identity Pool Provider"
  },
  {
    "name": "iam.workloadIdentityPoolProviders.update",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPoolProviders.update",
    "stage": "BETA",
    "title": "Update Workload Identity Pool Provider"
  },
  {
    "name": "iam.workloadIdentityPools.create",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPools.create",
    "stage": "BETA",
    "title": "Create Workload Identity Pool"
  },
  {
    "name": "iam.workloadIdentityPools.createPolicyBinding",
    "stage": "GA",
    "title": "Create IAM Policy Binding on Workload Identity Pool"
  },
  {
    "name": "iam.workloadIdentityPools.delete",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPools.delete",
    "stage": "BETA",
    "title": "Delete Workload Identity Pool"
  },
  {
    "name": "iam.workloadIdentityPools.deletePolicyBinding",
    "stage": "GA",
    "title": "Delete IAM Policy Binding on Workload Identity Pool"
  },
  {
    "name": "iam.workloadIdentityPools.get",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPools.get",
    "stage": "BETA",
    "title": "Get Workload Identity Pool"
  },
  {
    "name": "iam.workloadIdentityPools.list",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPools.list",
    "stage": "BETA",
    "title": "List Workload Identity Pools"
  },
  {
    "name": "iam.workloadIdentityPools.searchPolicyBindings",
    "stage": "GA",
    "title": "Search IAM Policy Bindings on Workload Identity Pool"
  },
  {
    "name": "iam.workloadIdentityPools.undelete",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPools.undelete",
    "stage": "BETA",
    "title": "Undelete Workload Identity Pool"
  },
  {
    "name": "iam.workloadIdentityPools.update",
    "primaryPermission": "iam.googleapis.com/workloadIdentityPools.update",
    "stage": "BETA",
    "title": "Update Workload Identity Pool"
  },
  {
    "name": "iam.workloadIdentityPools.updatePolicyBinding",
    "stage": "GA",
    "title": "Update IAM Policy Binding on Workload Identity Pool"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "iap.projects.getSettings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "iap.projects.updateSettings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnel.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnel.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelDestGroups.accessViaIAP",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelDestGroups.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelDestGroups.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelDestGroups.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelDestGroups.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelDestGroups.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "iap.tunnelDestGroups.remediate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelDestGroups.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelDestGroups.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelInstances.accessViaIAP",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelInstances.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelInstances.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelLocations.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelLocations.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelZones.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.tunnelZones.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "iap.tunnelinstances.remediate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "iap.web.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "iap.web.getSettings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "iap.web.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "iap.web.updateSettings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "iap.webServiceVersions.accessViaIAP",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "iap.webServiceVersions.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "iap.webServiceVersions.getSettings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "iap.webServiceVersions.remediate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "iap.webServiceVersions.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "iap.webServiceVersions.updateSettings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "iap.webServices.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "iap.webServices.getSettings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "iap.webServices.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "iap.webServices.updateSettings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "iap.webTypes.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "iap.webTypes.getSettings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "iap.webTypes.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "iap.webTypes.updateSettings",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "identitytoolkit.tenants.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "identitytoolkit.tenants.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "identitytoolkit.tenants.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "identitytoolkit.tenants.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "identitytoolkit.tenants.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "identitytoolkit.tenants.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "identitytoolkit.tenants.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "ids.endpoints.create",
    "stage": "BETA",
    "title": "Create Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "ids.endpoints.delete",
    "stage": "BETA",
    "title": "Delete Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "ids.endpoints.get",
    "stage": "BETA",
    "title": "Get Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "ids.endpoints.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "ids.endpoints.list",
    "stage": "BETA",
    "title": "List Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "ids.endpoints.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "ids.endpoints.update",
    "stage": "BETA",
    "title": "Update Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "ids.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "ids.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "ids.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "ids.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "ids.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "ids.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeAuthConfigs.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeAuthConfigs.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeAuthConfigs.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeAuthConfigs.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeAuthConfigs.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeCertificates.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeCertificates.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeCertificates.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeCertificates.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeCertificates.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeExecutions.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeIntegrationVers.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeIntegrationVers.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeIntegrationVers.deploy",
    "stage": "GA",
    "title": "Deploy"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeIntegrationVers.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeIntegrationVers.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeIntegrationVers.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeIntegrations.invoke",
    "stage": "GA",
    "title": "Invoke"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeIntegrations.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeSfdcChannels.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeSfdcChannels.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeSfdcChannels.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeSfdcChannels.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeSfdcChannels.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeSfdcInstances.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeSfdcInstances.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeSfdcInstances.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeSfdcInstances.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeSfdcInstances.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeSuspensions.lift",
    "stage": "GA",
    "title": "Lift"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeSuspensions.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.apigeeSuspensions.resolve",
    "stage": "GA",
    "title": "Resolve"
  },
  {
    "apiDisabled": true,
    "name": "integrations.authConfigs.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "integrations.authConfigs.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "integrations.authConfigs.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.authConfigs.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.authConfigs.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "integrations.certificates.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "integrations.certificates.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "integrations.certificates.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.certificates.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.certificates.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "integrations.executions.cancel",
    "stage": "GA",
    "title": "Cancel"
  },
  {
    "apiDisabled": true,
    "name": "integrations.executions.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.executions.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.executions.replay",
    "stage": "GA",
    "title": "Replay"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrationVersions.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrationVersions.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrationVersions.deploy",
    "stage": "GA",
    "title": "Deploy"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrationVersions.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrationVersions.invoke",
    "stage": "GA",
    "title": "Invoke"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrationVersions.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrationVersions.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrations.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrations.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrations.deploy",
    "stage": "GA",
    "title": "Deploy"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrations.generateOpenApiSpec",
    "stage": "GA",
    "title": "GenerateOpenApiSpec"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrations.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrations.invoke",
    "stage": "GA",
    "title": "Invoke"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrations.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.integrations.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "name": "integrations.securityAuthConfigs.create",
    "stage": "BETA",
    "title": "Create"
  },
  {
    "name": "integrations.securityAuthConfigs.delete",
    "stage": "BETA",
    "title": "Delete"
  },
  {
    "name": "integrations.securityAuthConfigs.get",
    "stage": "BETA",
    "title": "Get"
  },
  {
    "name": "integrations.securityAuthConfigs.list",
    "stage": "BETA",
    "title": "List"
  },
  {
    "name": "integrations.securityAuthConfigs.update",
    "stage": "BETA",
    "title": "Update"
  },
  {
    "name": "integrations.securityExecutions.cancel",
    "stage": "BETA",
    "title": "Cancel"
  },
  {
    "name": "integrations.securityExecutions.get",
    "stage": "BETA",
    "title": "Get"
  },
  {
    "name": "integrations.securityExecutions.list",
    "stage": "BETA",
    "title": "List"
  },
  {
    "name": "integrations.securityIntegTempVers.create",
    "stage": "BETA",
    "title": "Create"
  },
  {
    "name": "integrations.securityIntegTempVers.get",
    "stage": "BETA",
    "title": "Get"
  },
  {
    "name": "integrations.securityIntegTempVers.list",
    "stage": "BETA",
    "title": "List"
  },
  {
    "name": "integrations.securityIntegrationVers.create",
    "stage": "BETA",
    "title": "Create"
  },
  {
    "name": "integrations.securityIntegrationVers.delete",
    "stage": "BETA",
    "title": "Delete"
  },
  {
    "name": "integrations.securityIntegrationVers.deploy",
    "stage": "BETA",
    "title": "Deploy"
  },
  {
    "name": "integrations.securityIntegrationVers.get",
    "stage": "BETA",
    "title": "Get"
  },
  {
    "name": "integrations.securityIntegrationVers.list",
    "stage": "BETA",
    "title": "List"
  },
  {
    "name": "integrations.securityIntegrationVers.update",
    "stage": "BETA",
    "title": "Update"
  },
  {
    "name": "integrations.securityIntegrations.invoke",
    "stage": "BETA",
    "title": "Invoke"
  },
  {
    "name": "integrations.securityIntegrations.list",
    "stage": "BETA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.sfdcChannels.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "integrations.sfdcChannels.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "integrations.sfdcChannels.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.sfdcChannels.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.sfdcChannels.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "integrations.sfdcInstances.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "integrations.sfdcInstances.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "integrations.sfdcInstances.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.sfdcInstances.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.sfdcInstances.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "integrations.suspensions.lift",
    "stage": "GA",
    "title": "Lift"
  },
  {
    "apiDisabled": true,
    "name": "integrations.suspensions.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.suspensions.resolve",
    "stage": "GA",
    "title": "Resolve"
  },
  {
    "apiDisabled": true,
    "name": "integrations.templates.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "integrations.templates.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "integrations.templates.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.templates.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.templates.share",
    "stage": "GA",
    "title": "Share"
  },
  {
    "apiDisabled": true,
    "name": "integrations.templates.unshare",
    "stage": "GA",
    "title": "Unshare"
  },
  {
    "apiDisabled": true,
    "name": "integrations.templates.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "integrations.templates.use",
    "stage": "GA",
    "title": "Use"
  },
  {
    "apiDisabled": true,
    "name": "integrations.testCases.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "integrations.testCases.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "integrations.testCases.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "integrations.testCases.invoke",
    "stage": "GA",
    "title": "Invoke"
  },
  {
    "apiDisabled": true,
    "name": "integrations.testCases.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "integrations.testCases.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "description": "List AccountManagerTransactions",
    "name": "issuerswitch.accountManagerTransactions.list",
    "stage": "BETA",
    "title": "List AccountManagerTransactions"
  },
  {
    "apiDisabled": true,
    "description": "Update account manager transactions",
    "name": "issuerswitch.accountManagerTransactions.update",
    "stage": "BETA",
    "title": "Update AccountManagerTransactions"
  },
  {
    "apiDisabled": true,
    "description": "List ComplaintTransactions",
    "name": "issuerswitch.complaintTransactions.list",
    "stage": "BETA",
    "title": "List ComplaintTransactions"
  },
  {
    "apiDisabled": true,
    "description": "Create Complaint",
    "name": "issuerswitch.complaints.create",
    "stage": "BETA",
    "title": "Create Complaint"
  },
  {
    "apiDisabled": true,
    "description": "Resolve Complaint",
    "name": "issuerswitch.complaints.resolve",
    "stage": "BETA",
    "title": "Resolve Complaint"
  },
  {
    "apiDisabled": true,
    "description": "Create Dispute",
    "name": "issuerswitch.disputes.create",
    "stage": "BETA",
    "title": "Create Dispute"
  },
  {
    "apiDisabled": true,
    "description": "Resolve Dispute",
    "name": "issuerswitch.disputes.resolve",
    "stage": "BETA",
    "title": "Resolve Dispute"
  },
  {
    "apiDisabled": true,
    "description": "List FinancialTransactions",
    "name": "issuerswitch.financialTransactions.list",
    "stage": "BETA",
    "title": "List FinancialTransactions"
  },
  {
    "apiDisabled": true,
    "description": "Fetch Participant",
    "name": "issuerswitch.issuerParticipants.get",
    "stage": "BETA",
    "title": "Fetch Participant"
  },
  {
    "apiDisabled": true,
    "description": "Update Issuer Participant",
    "name": "issuerswitch.issuerParticipants.update",
    "stage": "BETA",
    "title": "Update Issuer Participant"
  },
  {
    "apiDisabled": true,
    "description": "Get accounts managed by account manager",
    "name": "issuerswitch.managedAccounts.get",
    "stage": "BETA",
    "title": "Get ManagedAccount"
  },
  {
    "apiDisabled": true,
    "description": "Update accounts managed by account manager",
    "name": "issuerswitch.managedAccounts.update",
    "stage": "BETA",
    "title": "Update ManagedAccount"
  },
  {
    "apiDisabled": true,
    "description": "List MandateTransactions",
    "name": "issuerswitch.mandateTransactions.list",
    "stage": "BETA",
    "title": "List MandateTransactions"
  },
  {
    "apiDisabled": true,
    "description": "List MetadataTransactions",
    "name": "issuerswitch.metadataTransactions.list",
    "stage": "BETA",
    "title": "List MetadataTransactions"
  },
  {
    "apiDisabled": true,
    "description": "Cancel operation",
    "name": "issuerswitch.operations.cancel",
    "stage": "BETA",
    "title": "Cancel operation"
  },
  {
    "apiDisabled": true,
    "description": "Delete operation",
    "name": "issuerswitch.operations.delete",
    "stage": "BETA",
    "title": "Delete operation"
  },
  {
    "apiDisabled": true,
    "description": "GET operation",
    "name": "issuerswitch.operations.get",
    "stage": "BETA",
    "title": "GET operation"
  },
  {
    "apiDisabled": true,
    "description": "List operations",
    "name": "issuerswitch.operations.list",
    "stage": "BETA",
    "title": "List operations"
  },
  {
    "apiDisabled": true,
    "description": "Wait operation",
    "name": "issuerswitch.operations.wait",
    "stage": "BETA",
    "title": "Wait operation"
  },
  {
    "apiDisabled": true,
    "description": "List RuleMetadata",
    "name": "issuerswitch.ruleMetadata.list",
    "stage": "BETA",
    "title": "List RuleMetadata"
  },
  {
    "apiDisabled": true,
    "description": "Create RuleMetadataValues",
    "name": "issuerswitch.ruleMetadataValues.create",
    "stage": "BETA",
    "title": "Create RuleMetadataValues"
  },
  {
    "apiDisabled": true,
    "description": "Delete RuleMetadataValues",
    "name": "issuerswitch.ruleMetadataValues.delete",
    "stage": "BETA",
    "title": "Delete RuleMetadataValues"
  },
  {
    "apiDisabled": true,
    "description": "List RuleMetadataValues",
    "name": "issuerswitch.ruleMetadataValues.list",
    "stage": "BETA",
    "title": "List RuleMetadataValues"
  },
  {
    "apiDisabled": true,
    "description": "List Rules",
    "name": "issuerswitch.rules.list",
    "stage": "BETA",
    "title": "List Rules"
  },
  {
    "apiDisabled": true,
    "name": "krmapihosting.krmApiHosts.create",
    "stage": "GA",
    "title": "Create KrmApiHost"
  },
  {
    "apiDisabled": true,
    "name": "krmapihosting.krmApiHosts.delete",
    "stage": "GA",
    "title": "Delete KrmApiHost"
  },
  {
    "apiDisabled": true,
    "name": "krmapihosting.krmApiHosts.get",
    "stage": "GA",
    "title": "Get KrmApiHost"
  },
  {
    "apiDisabled": true,
    "name": "krmapihosting.krmApiHosts.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on KrmApiHost"
  },
  {
    "apiDisabled": true,
    "name": "krmapihosting.krmApiHosts.list",
    "stage": "GA",
    "title": "List KrmApiHost"
  },
  {
    "apiDisabled": true,
    "name": "krmapihosting.krmApiHosts.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on KrmApiHost"
  },
  {
    "apiDisabled": true,
    "name": "krmapihosting.krmApiHosts.update",
    "stage": "GA",
    "title": "Update KrmApiHost"
  },
  {
    "apiDisabled": true,
    "name": "krmapihosting.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "krmapihosting.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "krmapihosting.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "krmapihosting.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "krmapihosting.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "krmapihosting.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "description": "Allows fetching the cluster metadata collector configuration",
    "name": "kubernetesmetadata.metadata.config",
    "stage": "BETA",
    "title": "Fetch metadata collector configuration"
  },
  {
    "apiDisabled": true,
    "description": "Allows publishing cluster metadata",
    "name": "kubernetesmetadata.metadata.publish",
    "stage": "BETA",
    "title": "Publish cluster metadata"
  },
  {
    "apiDisabled": true,
    "description": "Allows publishing a snapshot of the cluster metadata",
    "name": "kubernetesmetadata.metadata.snapshot",
    "stage": "BETA",
    "title": "Publish metadata snapshot"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.configurations.aggregateUsage",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.configurations.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.configurations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.configurations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.configurations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.configurations.queryLicenseUsage",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.configurations.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.instances.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.instances.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.operations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.products.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "licensemanager.products.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "lifesciences.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "lifesciences.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "lifesciences.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "lifesciences.workflows.run",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "livestream.assets.create",
    "stage": "GA",
    "title": "Create Asset"
  },
  {
    "apiDisabled": true,
    "name": "livestream.assets.delete",
    "stage": "GA",
    "title": "Delete Asset"
  },
  {
    "apiDisabled": true,
    "name": "livestream.assets.get",
    "stage": "GA",
    "title": "Get Asset"
  },
  {
    "apiDisabled": true,
    "name": "livestream.assets.list",
    "stage": "GA",
    "title": "List Assets"
  },
  {
    "apiDisabled": true,
    "name": "livestream.channels.create",
    "stage": "GA",
    "title": "Create Channel"
  },
  {
    "apiDisabled": true,
    "name": "livestream.channels.delete",
    "stage": "GA",
    "title": "Delete Channel"
  },
  {
    "apiDisabled": true,
    "name": "livestream.channels.get",
    "stage": "GA",
    "title": "Get Channel"
  },
  {
    "apiDisabled": true,
    "name": "livestream.channels.list",
    "stage": "GA",
    "title": "List Channels"
  },
  {
    "apiDisabled": true,
    "name": "livestream.channels.start",
    "stage": "GA",
    "title": "Start Channel"
  },
  {
    "apiDisabled": true,
    "name": "livestream.channels.stop",
    "stage": "GA",
    "title": "Stop Channel"
  },
  {
    "apiDisabled": true,
    "name": "livestream.channels.update",
    "stage": "GA",
    "title": "Update Channel"
  },
  {
    "apiDisabled": true,
    "name": "livestream.clips.create",
    "stage": "GA",
    "title": "Create Clip"
  },
  {
    "apiDisabled": true,
    "name": "livestream.clips.delete",
    "stage": "GA",
    "title": "Delete Clip"
  },
  {
    "apiDisabled": true,
    "name": "livestream.clips.get",
    "stage": "GA",
    "title": "Get Clip"
  },
  {
    "apiDisabled": true,
    "name": "livestream.clips.list",
    "stage": "GA",
    "title": "List Clips"
  },
  {
    "apiDisabled": true,
    "name": "livestream.dvrSessions.create",
    "stage": "GA",
    "title": "Create DVR Session"
  },
  {
    "apiDisabled": true,
    "name": "livestream.dvrSessions.delete",
    "stage": "GA",
    "title": "Delete DVR Session"
  },
  {
    "apiDisabled": true,
    "name": "livestream.dvrSessions.get",
    "stage": "GA",
    "title": "Get DVR Session"
  },
  {
    "apiDisabled": true,
    "name": "livestream.dvrSessions.list",
    "stage": "GA",
    "title": "List DVR Sessions"
  },
  {
    "apiDisabled": true,
    "name": "livestream.dvrSessions.update",
    "stage": "GA",
    "title": "Update DVR Session"
  },
  {
    "apiDisabled": true,
    "name": "livestream.events.create",
    "stage": "GA",
    "title": "Create Event"
  },
  {
    "apiDisabled": true,
    "name": "livestream.events.delete",
    "stage": "GA",
    "title": "Delete Event"
  },
  {
    "apiDisabled": true,
    "name": "livestream.events.get",
    "stage": "GA",
    "title": "Get Event"
  },
  {
    "apiDisabled": true,
    "name": "livestream.events.list",
    "stage": "GA",
    "title": "List Events"
  },
  {
    "apiDisabled": true,
    "name": "livestream.inputs.create",
    "stage": "GA",
    "title": "Create Input"
  },
  {
    "apiDisabled": true,
    "name": "livestream.inputs.delete",
    "stage": "GA",
    "title": "Delete Input"
  },
  {
    "apiDisabled": true,
    "name": "livestream.inputs.get",
    "stage": "GA",
    "title": "Get Input"
  },
  {
    "apiDisabled": true,
    "name": "livestream.inputs.list",
    "stage": "GA",
    "title": "List Inputs"
  },
  {
    "apiDisabled": true,
    "name": "livestream.inputs.update",
    "stage": "GA",
    "title": "Update Input"
  },
  {
    "apiDisabled": true,
    "name": "livestream.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "livestream.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "livestream.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "livestream.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "livestream.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "livestream.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "livestream.pools.get",
    "stage": "GA",
    "title": "Get Pool"
  },
  {
    "apiDisabled": true,
    "name": "livestream.pools.update",
    "stage": "GA",
    "title": "Update Pool"
  },
  {
    "name": "logging.buckets.copyLogEntries",
    "stage": "GA"
  },
  {
    "name": "logging.buckets.create",
    "stage": "GA"
  },
  {
    "name": "logging.buckets.createTagBinding",
    "stage": "GA"
  },
  {
    "name": "logging.buckets.delete",
    "stage": "GA"
  },
  {
    "name": "logging.buckets.deleteTagBinding",
    "stage": "GA"
  },
  {
    "name": "logging.buckets.get",
    "stage": "GA"
  },
  {
    "name": "logging.buckets.list",
    "stage": "GA"
  },
  {
    "name": "logging.buckets.listEffectiveTags",
    "stage": "GA"
  },
  {
    "name": "logging.buckets.listTagBindings",
    "stage": "GA"
  },
  {
    "name": "logging.buckets.undelete",
    "stage": "GA"
  },
  {
    "name": "logging.buckets.update",
    "stage": "GA"
  },
  {
    "name": "logging.buckets.write",
    "stage": "GA"
  },
  {
    "name": "logging.exclusions.create",
    "stage": "GA"
  },
  {
    "name": "logging.exclusions.delete",
    "stage": "GA"
  },
  {
    "name": "logging.exclusions.get",
    "stage": "GA"
  },
  {
    "name": "logging.exclusions.list",
    "stage": "GA"
  },
  {
    "name": "logging.exclusions.update",
    "stage": "GA"
  },
  {
    "name": "logging.fields.access",
    "stage": "GA"
  },
  {
    "name": "logging.googleapis.com/settings.get",
    "primaryPermission": "logging.settings.get",
    "stage": "GA"
  },
  {
    "name": "logging.googleapis.com/settings.update",
    "primaryPermission": "logging.settings.update",
    "stage": "GA"
  },
  {
    "name": "logging.links.create",
    "stage": "GA"
  },
  {
    "name": "logging.links.delete",
    "stage": "GA"
  },
  {
    "name": "logging.links.get",
    "stage": "GA"
  },
  {
    "name": "logging.links.list",
    "stage": "GA"
  },
  {
    "name": "logging.locations.get",
    "stage": "GA"
  },
  {
    "name": "logging.locations.list",
    "stage": "GA"
  },
  {
    "name": "logging.logEntries.create",
    "stage": "GA"
  },
  {
    "name": "logging.logEntries.download",
    "stage": "GA"
  },
  {
    "name": "logging.logEntries.list",
    "stage": "GA"
  },
  {
    "name": "logging.logEntries.route",
    "stage": "GA"
  },
  {
    "name": "logging.logMetrics.create",
    "stage": "GA"
  },
  {
    "name": "logging.logMetrics.delete",
    "stage": "GA"
  },
  {
    "name": "logging.logMetrics.get",
    "stage": "GA"
  },
  {
    "name": "logging.logMetrics.list",
    "stage": "GA"
  },
  {
    "name": "logging.logMetrics.update",
    "stage": "GA"
  },
  {
    "name": "logging.logScopes.create",
    "stage": "GA"
  },
  {
    "name": "logging.logScopes.delete",
    "stage": "GA"
  },
  {
    "name": "logging.logScopes.get",
    "stage": "GA"
  },
  {
    "name": "logging.logScopes.list",
    "stage": "GA"
  },
  {
    "name": "logging.logScopes.update",
    "stage": "GA"
  },
  {
    "name": "logging.logServiceIndexes.list",
    "stage": "GA"
  },
  {
    "name": "logging.logServices.list",
    "stage": "GA"
  },
  {
    "name": "logging.logs.delete",
    "stage": "GA"
  },
  {
    "name": "logging.logs.list",
    "stage": "GA"
  },
  {
    "name": "logging.notificationRules.create",
    "stage": "GA"
  },
  {
    "name": "logging.notificationRules.delete",
    "stage": "GA"
  },
  {
    "name": "logging.notificationRules.get",
    "stage": "GA"
  },
  {
    "name": "logging.notificationRules.list",
    "stage": "GA"
  },
  {
    "name": "logging.notificationRules.update",
    "stage": "GA"
  },
  {
    "name": "logging.operations.cancel",
    "stage": "GA"
  },
  {
    "name": "logging.operations.get",
    "stage": "GA"
  },
  {
    "name": "logging.operations.list",
    "stage": "GA"
  },
  {
    "name": "logging.privateLogEntries.list",
    "stage": "GA"
  },
  {
    "name": "logging.queries.create",
    "primaryPermission": "logging.queries.usePrivate",
    "stage": "GA"
  },
  {
    "name": "logging.queries.delete",
    "primaryPermission": "logging.queries.usePrivate",
    "stage": "GA"
  },
  {
    "name": "logging.queries.deleteShared",
    "stage": "GA"
  },
  {
    "name": "logging.queries.get",
    "primaryPermission": "logging.queries.usePrivate",
    "stage": "GA"
  },
  {
    "name": "logging.queries.getShared",
    "stage": "GA"
  },
  {
    "name": "logging.queries.list",
    "primaryPermission": "logging.queries.usePrivate",
    "stage": "GA"
  },
  {
    "name": "logging.queries.listShared",
    "stage": "GA"
  },
  {
    "name": "logging.queries.share",
    "stage": "GA"
  },
  {
    "name": "logging.queries.update",
    "primaryPermission": "logging.queries.usePrivate",
    "stage": "GA"
  },
  {
    "name": "logging.queries.updateShared",
    "stage": "GA"
  },
  {
    "name": "logging.queries.usePrivate",
    "stage": "GA"
  },
  {
    "name": "logging.settings.get",
    "stage": "GA"
  },
  {
    "name": "logging.settings.update",
    "stage": "GA"
  },
  {
    "name": "logging.sinks.create",
    "stage": "GA"
  },
  {
    "name": "logging.sinks.delete",
    "stage": "GA"
  },
  {
    "name": "logging.sinks.get",
    "stage": "GA"
  },
  {
    "name": "logging.sinks.list",
    "stage": "GA"
  },
  {
    "name": "logging.sinks.update",
    "stage": "GA"
  },
  {
    "name": "logging.sqlAlerts.create",
    "stage": "BETA"
  },
  {
    "name": "logging.sqlAlerts.update",
    "stage": "BETA"
  },
  {
    "name": "logging.usage.get",
    "stage": "GA"
  },
  {
    "name": "logging.views.access",
    "stage": "GA"
  },
  {
    "name": "logging.views.create",
    "stage": "GA"
  },
  {
    "name": "logging.views.delete",
    "stage": "GA"
  },
  {
    "name": "logging.views.get",
    "stage": "GA"
  },
  {
    "name": "logging.views.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "logging.views.list",
    "stage": "GA"
  },
  {
    "name": "logging.views.listLogs",
    "stage": "GA"
  },
  {
    "name": "logging.views.listResourceKeys",
    "stage": "GA"
  },
  {
    "name": "logging.views.listResourceValues",
    "stage": "GA"
  },
  {
    "name": "logging.views.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "logging.views.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "looker.backups.create",
    "stage": "GA",
    "title": "Create Instance Backups"
  },
  {
    "apiDisabled": true,
    "name": "looker.backups.delete",
    "stage": "GA",
    "title": "Delete Instance Backups"
  },
  {
    "apiDisabled": true,
    "name": "looker.backups.get",
    "stage": "GA",
    "title": "Get Instance Backups"
  },
  {
    "apiDisabled": true,
    "name": "looker.backups.list",
    "stage": "GA",
    "title": "List Instance Backups"
  },
  {
    "apiDisabled": true,
    "name": "looker.instances.create",
    "stage": "GA",
    "title": "Create Instance"
  },
  {
    "apiDisabled": true,
    "name": "looker.instances.delete",
    "stage": "GA",
    "title": "Delete Instance"
  },
  {
    "apiDisabled": true,
    "name": "looker.instances.export",
    "stage": "GA",
    "title": "Export Instance"
  },
  {
    "apiDisabled": true,
    "name": "looker.instances.get",
    "stage": "GA",
    "title": "Get Instance"
  },
  {
    "apiDisabled": true,
    "name": "looker.instances.import",
    "stage": "GA",
    "title": "Import Instance"
  },
  {
    "apiDisabled": true,
    "name": "looker.instances.list",
    "stage": "GA",
    "title": "List Instance"
  },
  {
    "apiDisabled": true,
    "name": "looker.instances.login",
    "stage": "GA",
    "title": "Log in to Instance"
  },
  {
    "apiDisabled": true,
    "name": "looker.instances.update",
    "stage": "GA",
    "title": "Update Instance"
  },
  {
    "apiDisabled": true,
    "name": "looker.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "looker.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "looker.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "looker.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "looker.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "looker.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "lookerstudio.pro.manage",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "lustre.instances.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "lustre.instances.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "lustre.instances.exportData",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "lustre.instances.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "lustre.instances.importData",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "lustre.instances.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "lustre.instances.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "lustre.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "lustre.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "lustre.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "lustre.operations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "lustre.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "lustre.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "maintenance.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "maintenance.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "maintenance.resourceMaintenances.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "maintenance.resourceMaintenances.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.deployments.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.deployments.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.deployments.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.deployments.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.deployments.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.jobs.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.jobs.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.jobs.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.jobs.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.jobs.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.sessions.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.sessions.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.sessions.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.sessions.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedflink.sessions.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.backups.create",
    "stage": "GA",
    "title": "Create Backup resource"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.backups.delete",
    "stage": "GA",
    "title": "Delete Backup resource"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.backups.get",
    "stage": "GA",
    "title": "Get Backup resource"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.backups.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Backup resource"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.backups.list",
    "stage": "GA",
    "title": "List Backup resources"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.backups.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Backup resource"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.backups.update",
    "stage": "GA",
    "title": "Update Backup resource"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.attachTrust",
    "stage": "GA",
    "title": "Attach trust to Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.checkMigrationPermission",
    "stage": "BETA",
    "title": "Check Domain Migration Permissions"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.create",
    "stage": "GA",
    "title": "Create Domains"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.delete",
    "stage": "GA",
    "title": "Delete Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.detachTrust",
    "stage": "GA",
    "title": "Detach trust from Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.disableMigration",
    "stage": "BETA",
    "title": "Disable Domain Migration"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.domainJoinMachine",
    "stage": "BETA",
    "title": "Join the VM to AD Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.enableMigration",
    "stage": "BETA",
    "title": "Enable Domain Migration"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.extendSchema",
    "stage": "GA",
    "title": "Extend Schema of Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.get",
    "stage": "GA",
    "title": "Get Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.list",
    "stage": "GA",
    "title": "List Domains"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.reconfigureTrust",
    "stage": "GA",
    "title": "Reconfigure trust for Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.resetpassword",
    "stage": "GA",
    "title": "Reset admin password"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.restore",
    "stage": "GA",
    "title": "Restores the domain from a backup"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.update",
    "stage": "GA",
    "title": "Update Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.updateLDAPSSettings",
    "stage": "GA",
    "title": "Update LDAPS settings for Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.domains.validateTrust",
    "stage": "GA",
    "title": "Validate trust for Domain"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.peerings.create",
    "stage": "GA",
    "title": "Create Peering Resource"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.peerings.delete",
    "stage": "GA",
    "title": "Delete Peering Resource"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.peerings.get",
    "stage": "GA",
    "title": "Get Peering Resource"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.peerings.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Peering Resource"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.peerings.list",
    "stage": "GA",
    "title": "List Peering Resources"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.peerings.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Peering Resource"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.peerings.update",
    "stage": "GA",
    "title": "Update Peering Resource"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.sqlintegrations.get",
    "stage": "BETA",
    "title": "Get SQL integration"
  },
  {
    "apiDisabled": true,
    "name": "managedidentities.sqlintegrations.list",
    "stage": "BETA",
    "title": "List SQL Integrations"
  },
  {
    "name": "managedkafka.clusters.attachConnectCluster",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.clusters.connect",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.clusters.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.clusters.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.clusters.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.clusters.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.clusters.update",
    "stage": "GA"
  },
  {
    "name": "managedkafka.config.delete",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.config.get",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.config.update",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectClusters.create",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectClusters.delete",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectClusters.get",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectClusters.list",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectClusters.update",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectors.create",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectors.delete",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectors.get",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectors.list",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectors.pause",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectors.restart",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectors.resume",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectors.stop",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.connectors.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.consumerGroups.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.consumerGroups.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.consumerGroups.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.consumerGroups.update",
    "stage": "GA"
  },
  {
    "name": "managedkafka.contexts.get",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.contexts.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.locations.list",
    "stage": "GA"
  },
  {
    "name": "managedkafka.mode.delete",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.mode.get",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.mode.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.operations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.operations.list",
    "stage": "GA"
  },
  {
    "name": "managedkafka.schemaRegistries.create",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.schemaRegistries.delete",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.schemaRegistries.get",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.schemaRegistries.list",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.schemas.get",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.schemas.listSubjects",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.schemas.listTypes",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.schemas.listVersions",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.subjects.delete",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.subjects.list",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.subjects.lookup",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.topics.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.topics.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.topics.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.topics.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "managedkafka.topics.update",
    "stage": "GA"
  },
  {
    "name": "managedkafka.versions.checkCompatibility",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.versions.create",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.versions.delete",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.versions.get",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.versions.list",
    "stage": "BETA"
  },
  {
    "name": "managedkafka.versions.referencedby",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericAttackSurfaceManagements.create",
    "stage": "BETA",
    "title": "Create Generic Attack Surface Management"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericAttackSurfaceManagements.delete",
    "stage": "BETA",
    "title": "Delete Generic Attack Surface Management"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericAttackSurfaceManagements.get",
    "stage": "BETA",
    "title": "Get Generic Attack Surface Management"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericAttackSurfaceManagements.update",
    "stage": "BETA",
    "title": "Update Generic Attack Surface Management"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericDigitalThreatMonitorings.create",
    "stage": "BETA",
    "title": "Create Generic Digital Threat Monitoring"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericDigitalThreatMonitorings.get",
    "stage": "BETA",
    "title": "Get Generic Digital Threat Monitoring"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericDigitalThreatMonitorings.update",
    "stage": "BETA",
    "title": "Update Generic Digital Threat Monitoring"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericExpertiseOnDemands.create",
    "stage": "BETA",
    "title": "Create Generic Expertise On Demand"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericExpertiseOnDemands.delete",
    "stage": "BETA",
    "title": "Delete Generic Expertise On Demand"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericExpertiseOnDemands.get",
    "stage": "BETA",
    "title": "Get Generic Expertise On Demand"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericExpertiseOnDemands.update",
    "stage": "BETA",
    "title": "Update Generic Expertise On Demand"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericPlatforms.create",
    "stage": "BETA",
    "title": "Create Generic Platform"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericPlatforms.delete",
    "stage": "BETA",
    "title": "Delete Generic Platform"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericPlatforms.get",
    "stage": "BETA",
    "title": "Get Generic Platform"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericPlatforms.update",
    "stage": "BETA",
    "title": "Update Generic Platform"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericThreatIntels.create",
    "stage": "BETA",
    "title": "Create Generic Threat Intel"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericThreatIntels.delete",
    "stage": "BETA",
    "title": "Delete Generic Threat Intel"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericThreatIntels.get",
    "stage": "BETA",
    "title": "Get Generic Threat Intel"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericThreatIntels.update",
    "stage": "BETA",
    "title": "Update Generic Threat Intel"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericValidations.create",
    "stage": "BETA",
    "title": "Create Generic Validation"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericValidations.delete",
    "stage": "BETA",
    "title": "Delete Generic Validation"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericValidations.get",
    "stage": "BETA",
    "title": "Get Generic Validation"
  },
  {
    "apiDisabled": true,
    "name": "mandiant.genericValidations.update",
    "stage": "BETA",
    "title": "Update Generic Validation"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.clientMaps.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.clientMaps.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.clientMaps.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.clientMaps.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.clientMaps.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.clientStyleActivationRules.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.clientStyleSheetSnapshots.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.clientStyleSheetSnapshots.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.clientStyles.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.clientStyles.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.clientStyles.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.clientStyles.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.clientStyles.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.mapViews.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.mapViews.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.mapViews.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.mapViews.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.mapViews.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.styleEditorConfigs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.styleSnapshots.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "mapsadmin.styleSnapshots.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Query Maps Analytics data under a project.",
    "name": "mapsanalytics.metricData.query",
    "stage": "BETA",
    "title": "Query Maps Analytics data under a project."
  },
  {
    "apiDisabled": true,
    "description": "Query Mobility Solutions overage data under a project.",
    "name": "mapsanalytics.metricData.queryMobilitySolutionsOverageData",
    "stage": "BETA",
    "title": "Query Mobility Solutions overage data under a project."
  },
  {
    "apiDisabled": true,
    "description": "List Maps Analytics metadata under a project.",
    "name": "mapsanalytics.metricMetadata.list",
    "stage": "BETA",
    "title": "List Maps Analytics metadata under a project."
  },
  {
    "apiDisabled": true,
    "description": "Create a new Dataset",
    "name": "mapsplatformdatasets.datasets.create",
    "stage": "BETA",
    "title": "Create a new Dataset"
  },
  {
    "apiDisabled": true,
    "description": "Delete a Dataset",
    "name": "mapsplatformdatasets.datasets.delete",
    "stage": "BETA",
    "title": "Delete a Dataset"
  },
  {
    "apiDisabled": true,
    "description": "Export a Dataset",
    "name": "mapsplatformdatasets.datasets.export",
    "stage": "BETA",
    "title": "Export a Dataset"
  },
  {
    "apiDisabled": true,
    "description": "Get information about a Dataset",
    "name": "mapsplatformdatasets.datasets.get",
    "stage": "BETA",
    "title": "Get information about a Dataset"
  },
  {
    "apiDisabled": true,
    "description": "Import data to an existing Dataset",
    "name": "mapsplatformdatasets.datasets.import",
    "stage": "BETA",
    "title": "Import data to an existing Dataset"
  },
  {
    "apiDisabled": true,
    "description": "List all datasets under a project",
    "name": "mapsplatformdatasets.datasets.list",
    "stage": "BETA",
    "title": "List all datasets under a project"
  },
  {
    "apiDisabled": true,
    "description": "Update information about a Dataset",
    "name": "mapsplatformdatasets.datasets.update",
    "stage": "BETA",
    "title": "Update information about a Dataset"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerImages.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerImages.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerInstances.applyPowerAction",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerInstances.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerInstances.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerInstances.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerInstances.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerInstances.reset",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerInstances.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerNetworks.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerNetworks.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerSshKeys.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerSshKeys.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerVolumes.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "marketplacesolutions.powerVolumes.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "memcache.instances.applyParameters",
    "stage": "GA",
    "title": "Apply Parameter Group Updates to Instance"
  },
  {
    "apiDisabled": true,
    "name": "memcache.instances.applySoftwareUpdate",
    "stage": "BETA",
    "title": "Apply Software Update to Instance"
  },
  {
    "apiDisabled": true,
    "name": "memcache.instances.create",
    "stage": "GA",
    "title": "Create Instance"
  },
  {
    "apiDisabled": true,
    "name": "memcache.instances.delete",
    "stage": "GA",
    "title": "Delete Instance"
  },
  {
    "apiDisabled": true,
    "name": "memcache.instances.get",
    "stage": "GA",
    "title": "Get Instance"
  },
  {
    "apiDisabled": true,
    "name": "memcache.instances.list",
    "stage": "GA",
    "title": "List Instances"
  },
  {
    "apiDisabled": true,
    "name": "memcache.instances.rescheduleMaintenance",
    "stage": "GA",
    "title": "Reschedule Upcoming Maintenance"
  },
  {
    "apiDisabled": true,
    "name": "memcache.instances.update",
    "stage": "GA",
    "title": "Update Instance"
  },
  {
    "apiDisabled": true,
    "name": "memcache.instances.updateParameters",
    "stage": "GA",
    "title": "Update Instance level parameters"
  },
  {
    "apiDisabled": true,
    "name": "memcache.instances.upgrade",
    "stage": "GA",
    "title": "Upgrade Memcache engine version of an Instance"
  },
  {
    "apiDisabled": true,
    "name": "memcache.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "memcache.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "memcache.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "memcache.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "memcache.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "memcache.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.backupCollections.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.backupCollections.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.backups.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.backups.export",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.backups.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.backups.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.instances.backup",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.instances.connect",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.instances.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.instances.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.instances.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.instances.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.instances.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.operations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "memorystore.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "meshconfig.projects.init",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "metastore.backups.create",
    "stage": "GA",
    "title": "Create Backup"
  },
  {
    "apiDisabled": true,
    "name": "metastore.backups.delete",
    "stage": "GA",
    "title": "Delete Backup"
  },
  {
    "apiDisabled": true,
    "name": "metastore.backups.get",
    "stage": "GA",
    "title": "Get Backup"
  },
  {
    "apiDisabled": true,
    "name": "metastore.backups.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM policy of a backup"
  },
  {
    "apiDisabled": true,
    "name": "metastore.backups.list",
    "stage": "GA",
    "title": "List Backups"
  },
  {
    "apiDisabled": true,
    "name": "metastore.backups.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM policy of a backup"
  },
  {
    "apiDisabled": true,
    "name": "metastore.backups.use",
    "stage": "GA",
    "title": "Use Backup"
  },
  {
    "name": "metastore.databases.create",
    "stage": "BETA",
    "title": "Create database"
  },
  {
    "name": "metastore.databases.delete",
    "stage": "BETA",
    "title": "Delete database"
  },
  {
    "name": "metastore.databases.get",
    "stage": "BETA",
    "title": "Read database metadata"
  },
  {
    "name": "metastore.databases.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM policy on database"
  },
  {
    "name": "metastore.databases.list",
    "stage": "BETA",
    "title": "List databases"
  },
  {
    "name": "metastore.databases.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM policy on database"
  },
  {
    "name": "metastore.databases.update",
    "stage": "BETA",
    "title": "Update database metadata"
  },
  {
    "apiDisabled": true,
    "name": "metastore.federations.create",
    "stage": "GA",
    "title": "Create Federation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.federations.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on Dataproc Metastore Federation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.federations.delete",
    "stage": "GA",
    "title": "Delete Federation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.federations.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on Dataproc Metastore Federation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.federations.get",
    "stage": "GA",
    "title": "Get Federation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.federations.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Federation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.federations.list",
    "stage": "GA",
    "title": "List Federations"
  },
  {
    "apiDisabled": true,
    "name": "metastore.federations.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on Dataproc Metastore Federation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.federations.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on Dataproc Metastore Federation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.federations.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Federation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.federations.update",
    "stage": "GA",
    "title": "Update Federation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.federations.use",
    "stage": "GA",
    "title": "Use Metastore Federation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.imports.create",
    "stage": "GA",
    "title": "Create Import"
  },
  {
    "apiDisabled": true,
    "name": "metastore.imports.get",
    "stage": "GA",
    "title": "Get Import"
  },
  {
    "apiDisabled": true,
    "name": "metastore.imports.list",
    "stage": "GA",
    "title": "List Imports"
  },
  {
    "apiDisabled": true,
    "name": "metastore.imports.update",
    "stage": "GA",
    "title": "Update Import"
  },
  {
    "apiDisabled": true,
    "name": "metastore.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "metastore.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "metastore.migrations.cancel",
    "stage": "GA",
    "title": "Cancel the migration on the Dataproc Metastore Service"
  },
  {
    "apiDisabled": true,
    "name": "metastore.migrations.complete",
    "stage": "GA",
    "title": "Complete the migration on the Dataproc Metastore Service"
  },
  {
    "apiDisabled": true,
    "name": "metastore.migrations.delete",
    "stage": "GA",
    "title": "Delete Migration Execution"
  },
  {
    "apiDisabled": true,
    "name": "metastore.migrations.get",
    "stage": "GA",
    "title": "Get Migration Execution"
  },
  {
    "apiDisabled": true,
    "name": "metastore.migrations.list",
    "stage": "GA",
    "title": "List Migration Executions"
  },
  {
    "apiDisabled": true,
    "name": "metastore.migrations.start",
    "stage": "GA",
    "title": "Start the migration on the Dataproc Metastore Service"
  },
  {
    "apiDisabled": true,
    "name": "metastore.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.create",
    "stage": "GA",
    "title": "Create Service"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Binding on Dataproc Metastore Service"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.delete",
    "stage": "GA",
    "title": "Delete Service"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Binding on Dataproc Metastore Service"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.export",
    "stage": "GA",
    "title": "Export Service metadata"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.get",
    "stage": "GA",
    "title": "Get Service"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Service"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.list",
    "stage": "GA",
    "title": "List Services"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on Dataproc Metastore Service"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on Dataproc Metastore Service"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.mutateMetadata",
    "stage": "GA",
    "title": "Mutate Service Metadata"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.queryMetadata",
    "stage": "GA",
    "title": "Query Service Metadata"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.restore",
    "stage": "GA",
    "title": "Restore Service"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Service"
  },
  {
    "apiDisabled": true,
    "name": "metastore.services.update",
    "stage": "GA",
    "title": "Update Service"
  },
  {
    "name": "metastore.services.use",
    "stage": "BETA",
    "title": "Use Dataproc Metastore Service"
  },
  {
    "name": "metastore.tables.create",
    "stage": "BETA",
    "title": "Create table"
  },
  {
    "name": "metastore.tables.delete",
    "stage": "BETA",
    "title": "Delete Table"
  },
  {
    "name": "metastore.tables.get",
    "stage": "BETA",
    "title": "Read table metadata"
  },
  {
    "name": "metastore.tables.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Table"
  },
  {
    "name": "metastore.tables.list",
    "stage": "BETA",
    "title": "List Table"
  },
  {
    "name": "metastore.tables.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Table"
  },
  {
    "name": "metastore.tables.update",
    "stage": "BETA",
    "title": "Update table metadata"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.assets.create",
    "stage": "BETA",
    "title": "Create Asset"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.assets.delete",
    "stage": "BETA",
    "title": "Delete Asset"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.assets.get",
    "stage": "BETA",
    "title": "Get Asset"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.assets.list",
    "stage": "BETA",
    "title": "List Asset"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.assets.reportFrames",
    "stage": "BETA",
    "title": "Report asset frames"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.assets.update",
    "stage": "BETA",
    "title": "Update Asset"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.assetsExportJobs.create",
    "stage": "BETA",
    "title": "Create AssetsExprotJobs"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.assetsExportJobs.delete",
    "stage": "BETA",
    "title": "Delete AssetsExportJobs"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.assetsExportJobs.get",
    "stage": "BETA",
    "title": "Get AssetsExportJobs"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.assetsExportJobs.list",
    "stage": "BETA",
    "title": "List AssetsExportJobs"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.assetsExportJobs.run",
    "stage": "BETA",
    "title": "Run AssetsExportJobs"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.discoveryClients.create",
    "stage": "BETA",
    "title": "Create DiscoveryClient"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.discoveryClients.delete",
    "stage": "BETA",
    "title": "Delete DiscoveryClient"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.discoveryClients.get",
    "stage": "BETA",
    "title": "Get DiscoveryClient"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.discoveryClients.list",
    "stage": "BETA",
    "title": "List DiscoveryClients"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.discoveryClients.sendHeartbeat",
    "stage": "BETA",
    "title": "Send DiscoveryClient Heartbeat"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.discoveryClients.update",
    "stage": "BETA",
    "title": "Update DiscoveryClient"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.errorFrames.get",
    "stage": "BETA",
    "title": "Get ErrorFrames"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.errorFrames.list",
    "stage": "BETA",
    "title": "List ErrorFrames"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.groups.create",
    "stage": "BETA",
    "title": "Create Group"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.groups.delete",
    "stage": "BETA",
    "title": "Delete Group"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.groups.get",
    "stage": "BETA",
    "title": "Get Group"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.groups.list",
    "stage": "BETA",
    "title": "List Groups"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.groups.update",
    "stage": "BETA",
    "title": "Update Group"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.importDataFiles.create",
    "stage": "BETA",
    "title": "Create ImportDataFiles"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.importDataFiles.delete",
    "stage": "BETA",
    "title": "Delete ImportDataFiles"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.importDataFiles.get",
    "stage": "BETA",
    "title": "Get ImportDataFiles"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.importDataFiles.list",
    "stage": "BETA",
    "title": "List ImportDataFiles"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.importJobs.create",
    "stage": "BETA",
    "title": "Create ImportJobs"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.importJobs.delete",
    "stage": "BETA",
    "title": "Delete ImportJob"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.importJobs.get",
    "stage": "BETA",
    "title": "Get ImportJob"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.importJobs.list",
    "stage": "BETA",
    "title": "List ImportJobs"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.importJobs.update",
    "stage": "BETA",
    "title": "Update ImportJob"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.preferenceSets.create",
    "stage": "BETA",
    "title": "Create PreferenceSets"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.preferenceSets.delete",
    "stage": "BETA",
    "title": "Delete PreferenceSets"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.preferenceSets.get",
    "stage": "BETA",
    "title": "Get PreferenceSets"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.preferenceSets.list",
    "stage": "BETA",
    "title": "List PreferenceSets"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.preferenceSets.update",
    "stage": "BETA",
    "title": "Update PreferenceSets"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.relations.get",
    "stage": "BETA",
    "title": "Get Relations"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.relations.list",
    "stage": "BETA",
    "title": "List Relations"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.reportConfigs.create",
    "stage": "BETA",
    "title": "Create ReportConfig"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.reportConfigs.delete",
    "stage": "BETA",
    "title": "Delete ReportConfig"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.reportConfigs.get",
    "stage": "BETA",
    "title": "Get ReportConfigs"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.reportConfigs.list",
    "stage": "BETA",
    "title": "List ReportConfigs"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.reports.create",
    "stage": "BETA",
    "title": "Create Report"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.reports.delete",
    "stage": "BETA",
    "title": "Delete Report"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.reports.get",
    "stage": "BETA",
    "title": "Get Report"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.reports.list",
    "stage": "BETA",
    "title": "List Reports"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.settings.get",
    "stage": "BETA",
    "title": "Get Settings"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.settings.update",
    "stage": "BETA",
    "title": "Update Settings"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.sources.create",
    "stage": "BETA",
    "title": "Create Source"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.sources.delete",
    "stage": "BETA",
    "title": "Delete Source"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.sources.get",
    "stage": "BETA",
    "title": "Get Source"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.sources.list",
    "stage": "BETA",
    "title": "List Source"
  },
  {
    "apiDisabled": true,
    "name": "migrationcenter.sources.update",
    "stage": "BETA",
    "title": "Update Source"
  },
  {
    "apiDisabled": true,
    "name": "ml.jobs.cancel",
    "stage": "GA",
    "title": "Cancel AI Platform Job"
  },
  {
    "apiDisabled": true,
    "name": "ml.jobs.create",
    "stage": "GA",
    "title": "Create AI Platform Jobs"
  },
  {
    "apiDisabled": true,
    "name": "ml.jobs.get",
    "stage": "GA",
    "title": "Read AI Platform Job"
  },
  {
    "apiDisabled": true,
    "name": "ml.jobs.getIamPolicy",
    "stage": "GA",
    "title": "Read AI Platform Job IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "ml.jobs.list",
    "stage": "GA",
    "title": "List AI Platform Jobs"
  },
  {
    "apiDisabled": true,
    "name": "ml.jobs.setIamPolicy",
    "stage": "GA",
    "title": "Set AI Platform Job IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "ml.jobs.update",
    "stage": "GA",
    "title": "Update AI Platform Job"
  },
  {
    "apiDisabled": true,
    "name": "ml.locations.get",
    "stage": "GA",
    "title": "Read AI Platform Location"
  },
  {
    "apiDisabled": true,
    "name": "ml.locations.list",
    "stage": "GA",
    "title": "List AI Platform Locations"
  },
  {
    "apiDisabled": true,
    "name": "ml.models.create",
    "stage": "GA",
    "title": "Create AI Platform Models"
  },
  {
    "apiDisabled": true,
    "name": "ml.models.delete",
    "stage": "GA",
    "title": "Delete AI Platform Model"
  },
  {
    "apiDisabled": true,
    "name": "ml.models.get",
    "stage": "GA",
    "title": "Read AI Platform Model"
  },
  {
    "apiDisabled": true,
    "name": "ml.models.getIamPolicy",
    "stage": "GA",
    "title": "Get AI Platform Model IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "ml.models.list",
    "stage": "GA",
    "title": "List AI Platform Models"
  },
  {
    "apiDisabled": true,
    "name": "ml.models.predict",
    "stage": "GA",
    "title": "Predict With AI Platform Model"
  },
  {
    "apiDisabled": true,
    "name": "ml.models.setIamPolicy",
    "stage": "GA",
    "title": "Set AI Platform Model IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "ml.models.update",
    "stage": "GA",
    "title": "Update AI Platform Model"
  },
  {
    "apiDisabled": true,
    "name": "ml.operations.cancel",
    "stage": "GA",
    "title": "Cancel AI Platform Operation"
  },
  {
    "apiDisabled": true,
    "name": "ml.operations.get",
    "stage": "GA",
    "title": "Read AI Platform Operation"
  },
  {
    "apiDisabled": true,
    "name": "ml.operations.list",
    "stage": "GA",
    "title": "List AI Platform Operations"
  },
  {
    "apiDisabled": true,
    "name": "ml.projects.getConfig",
    "stage": "GA",
    "title": "Read AI Platform Project Configuraiton"
  },
  {
    "apiDisabled": true,
    "name": "ml.studies.create",
    "stage": "GA",
    "title": "Create AI Platform study"
  },
  {
    "apiDisabled": true,
    "name": "ml.studies.delete",
    "stage": "GA",
    "title": "Delete AI Platform study"
  },
  {
    "apiDisabled": true,
    "name": "ml.studies.get",
    "stage": "GA",
    "title": "Read AI Platform study"
  },
  {
    "apiDisabled": true,
    "name": "ml.studies.getIamPolicy",
    "stage": "GA",
    "title": "Read AI Platform study IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "ml.studies.list",
    "stage": "GA",
    "title": "List AI Platform studies"
  },
  {
    "apiDisabled": true,
    "name": "ml.studies.setIamPolicy",
    "stage": "GA",
    "title": "Set AI Platform study IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "ml.trials.create",
    "stage": "GA",
    "title": "Create AI Platform trial"
  },
  {
    "apiDisabled": true,
    "name": "ml.trials.delete",
    "stage": "GA",
    "title": "Delete AI Platform trial"
  },
  {
    "apiDisabled": true,
    "name": "ml.trials.get",
    "stage": "GA",
    "title": "Read AI Platform trial"
  },
  {
    "apiDisabled": true,
    "name": "ml.trials.list",
    "stage": "GA",
    "title": "List AI Platform trials"
  },
  {
    "apiDisabled": true,
    "name": "ml.trials.update",
    "stage": "GA",
    "title": "Update AI Platform trial"
  },
  {
    "apiDisabled": true,
    "name": "ml.versions.create",
    "stage": "GA",
    "title": "Create AI Platform Versions"
  },
  {
    "apiDisabled": true,
    "name": "ml.versions.delete",
    "stage": "GA",
    "title": "Delete AI Platform Version"
  },
  {
    "apiDisabled": true,
    "name": "ml.versions.get",
    "stage": "GA",
    "title": "Read AI Platform Version"
  },
  {
    "apiDisabled": true,
    "name": "ml.versions.list",
    "stage": "GA",
    "title": "List AI Platform Versions"
  },
  {
    "apiDisabled": true,
    "name": "ml.versions.predict",
    "stage": "GA",
    "title": "Predict With AI Platform Version"
  },
  {
    "apiDisabled": true,
    "name": "ml.versions.update",
    "stage": "GA",
    "title": "Update AI Platform Version"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "modelarmor.callouts.invoke",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "modelarmor.floorSettings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "modelarmor.floorSettings.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "modelarmor.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "modelarmor.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "modelarmor.templates.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "modelarmor.templates.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "modelarmor.templates.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "modelarmor.templates.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "modelarmor.templates.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "modelarmor.templates.useToSanitizeModelResponse",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "modelarmor.templates.useToSanitizeUserPrompt",
    "stage": "GA"
  },
  {
    "name": "monitoring.alertPolicies.create",
    "stage": "GA"
  },
  {
    "name": "monitoring.alertPolicies.createTagBinding",
    "stage": "GA"
  },
  {
    "name": "monitoring.alertPolicies.delete",
    "stage": "GA"
  },
  {
    "name": "monitoring.alertPolicies.deleteTagBinding",
    "stage": "GA"
  },
  {
    "name": "monitoring.alertPolicies.get",
    "stage": "GA"
  },
  {
    "name": "monitoring.alertPolicies.list",
    "stage": "GA"
  },
  {
    "name": "monitoring.alertPolicies.listEffectiveTags",
    "stage": "GA"
  },
  {
    "name": "monitoring.alertPolicies.listTagBindings",
    "stage": "GA"
  },
  {
    "name": "monitoring.alertPolicies.update",
    "stage": "GA"
  },
  {
    "name": "monitoring.dashboards.create",
    "stage": "GA"
  },
  {
    "name": "monitoring.dashboards.createTagBinding",
    "stage": "GA"
  },
  {
    "name": "monitoring.dashboards.delete",
    "stage": "GA"
  },
  {
    "name": "monitoring.dashboards.deleteTagBinding",
    "stage": "GA"
  },
  {
    "name": "monitoring.dashboards.get",
    "stage": "GA"
  },
  {
    "name": "monitoring.dashboards.list",
    "stage": "GA"
  },
  {
    "name": "monitoring.dashboards.listEffectiveTags",
    "stage": "GA"
  },
  {
    "name": "monitoring.dashboards.listTagBindings",
    "stage": "GA"
  },
  {
    "name": "monitoring.dashboards.update",
    "stage": "GA"
  },
  {
    "name": "monitoring.groups.create",
    "stage": "GA"
  },
  {
    "name": "monitoring.groups.delete",
    "stage": "GA"
  },
  {
    "name": "monitoring.groups.get",
    "stage": "GA"
  },
  {
    "name": "monitoring.groups.list",
    "stage": "GA"
  },
  {
    "name": "monitoring.groups.update",
    "stage": "GA"
  },
  {
    "name": "monitoring.metricDescriptors.create",
    "stage": "GA"
  },
  {
    "name": "monitoring.metricDescriptors.delete",
    "stage": "GA"
  },
  {
    "name": "monitoring.metricDescriptors.get",
    "stage": "GA"
  },
  {
    "name": "monitoring.metricDescriptors.list",
    "stage": "GA"
  },
  {
    "name": "monitoring.metricsScopes.link",
    "stage": "BETA"
  },
  {
    "name": "monitoring.monitoredResourceDescriptors.get",
    "stage": "GA"
  },
  {
    "name": "monitoring.monitoredResourceDescriptors.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannelDescriptors.get",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannelDescriptors.list",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.create",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.delete",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.get",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.getVerificationCode",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.list",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.sendVerificationCode",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.update",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "monitoring.notificationChannels.verify",
    "stage": "BETA"
  },
  {
    "name": "monitoring.services.create",
    "stage": "GA"
  },
  {
    "name": "monitoring.services.delete",
    "stage": "GA"
  },
  {
    "name": "monitoring.services.get",
    "stage": "GA"
  },
  {
    "name": "monitoring.services.list",
    "stage": "GA"
  },
  {
    "name": "monitoring.services.update",
    "stage": "GA"
  },
  {
    "name": "monitoring.slos.create",
    "stage": "GA"
  },
  {
    "name": "monitoring.slos.delete",
    "stage": "GA"
  },
  {
    "name": "monitoring.slos.get",
    "stage": "GA"
  },
  {
    "name": "monitoring.slos.list",
    "stage": "GA"
  },
  {
    "name": "monitoring.slos.update",
    "stage": "GA"
  },
  {
    "name": "monitoring.snoozes.create",
    "stage": "GA"
  },
  {
    "name": "monitoring.snoozes.get",
    "stage": "GA"
  },
  {
    "name": "monitoring.snoozes.list",
    "stage": "GA"
  },
  {
    "name": "monitoring.snoozes.update",
    "stage": "GA"
  },
  {
    "name": "monitoring.timeSeries.create",
    "stage": "GA"
  },
  {
    "name": "monitoring.timeSeries.list",
    "stage": "GA"
  },
  {
    "name": "monitoring.uptimeCheckConfigs.create",
    "stage": "BETA"
  },
  {
    "name": "monitoring.uptimeCheckConfigs.delete",
    "stage": "BETA"
  },
  {
    "name": "monitoring.uptimeCheckConfigs.get",
    "stage": "BETA"
  },
  {
    "name": "monitoring.uptimeCheckConfigs.list",
    "stage": "BETA"
  },
  {
    "name": "monitoring.uptimeCheckConfigs.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Create a Nest Console preview",
    "name": "nestconsole.smarthomePreviews.update",
    "stage": "GA",
    "title": "Create a Nest Console preview"
  },
  {
    "apiDisabled": true,
    "description": "Create a Nest Console project",
    "name": "nestconsole.smarthomeProjects.create",
    "stage": "GA",
    "title": "Create a Nest Console project"
  },
  {
    "apiDisabled": true,
    "description": "Delete a Nest Console project",
    "name": "nestconsole.smarthomeProjects.delete",
    "stage": "GA",
    "title": "Delete a Nest Console project"
  },
  {
    "apiDisabled": true,
    "description": "Load a Nest Console project",
    "name": "nestconsole.smarthomeProjects.get",
    "stage": "GA",
    "title": "Load a Nest Console project"
  },
  {
    "apiDisabled": true,
    "description": "Update a Nest Console project",
    "name": "nestconsole.smarthomeProjects.update",
    "stage": "GA",
    "title": "Update a Nest Console project"
  },
  {
    "apiDisabled": true,
    "description": "Create a Nest Console version",
    "name": "nestconsole.smarthomeVersions.create",
    "stage": "GA",
    "title": "Create a Nest Console version"
  },
  {
    "apiDisabled": true,
    "description": "Load a Nest Console version",
    "name": "nestconsole.smarthomeVersions.get",
    "stage": "GA",
    "title": "Load a Nest Console version"
  },
  {
    "apiDisabled": true,
    "description": "Submit the Nest Console version",
    "name": "nestconsole.smarthomeVersions.submit",
    "stage": "GA",
    "title": "Submit the Nest Console version"
  },
  {
    "apiDisabled": true,
    "name": "netapp.activeDirectories.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.activeDirectories.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.activeDirectories.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.activeDirectories.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.activeDirectories.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backupPolicies.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backupPolicies.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backupPolicies.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backupPolicies.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backupPolicies.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backupVaults.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backupVaults.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backupVaults.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backupVaults.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backupVaults.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backups.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backups.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backups.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backups.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.backups.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.hostGroups.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.hostGroups.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.hostGroups.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.hostGroups.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.hostGroups.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.kmsConfigs.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.kmsConfigs.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.kmsConfigs.encrypt",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.kmsConfigs.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.kmsConfigs.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.kmsConfigs.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.kmsConfigs.verify",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.quotaRules.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.quotaRules.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.quotaRules.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.quotaRules.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.quotaRules.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.replications.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.replications.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.replications.establishPeering",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.replications.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.replications.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.replications.resume",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.replications.reverse",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.replications.stop",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.replications.sync",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.replications.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.snapshots.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.snapshots.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.snapshots.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.snapshots.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.snapshots.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.storagePools.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.storagePools.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.storagePools.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.storagePools.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.storagePools.switch",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.storagePools.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.storagePools.validateDirectoryService",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.volumes.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.volumes.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.volumes.export",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.volumes.findValidCRRRegions",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.volumes.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.volumes.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.volumes.restore",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.volumes.revert",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "netapp.volumes.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.gatewayAdvertisedRoutes.create",
    "stage": "GA",
    "title": "Create GatewayAdvertisedRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.gatewayAdvertisedRoutes.delete",
    "stage": "GA",
    "title": "Delete GatewayAdvertisedRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.gatewayAdvertisedRoutes.get",
    "stage": "GA",
    "title": "Get GatewayAdvertisedRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.gatewayAdvertisedRoutes.list",
    "stage": "GA",
    "title": "List GatewayAdvertisedRoutes"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.gatewayAdvertisedRoutes.update",
    "stage": "GA",
    "title": "Update GatewayAdvertisedRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.groups.acceptSpoke",
    "stage": "GA",
    "title": "Accept Spoke into Group"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.groups.acceptSpokeUpdate",
    "stage": "GA",
    "title": "Accept updates to Spoke in group"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.groups.get",
    "stage": "GA",
    "title": "Get Group"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.groups.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Group"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.groups.list",
    "stage": "GA",
    "title": "List Groups"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.groups.rejectSpoke",
    "stage": "GA",
    "title": "Reject Spoke from Group"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.groups.rejectSpokeUpdate",
    "stage": "GA",
    "title": "Reject updates to Spoke in group"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.groups.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Group"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.groups.use",
    "stage": "GA",
    "title": "Use Group in a Spoke"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubRouteTables.get",
    "stage": "GA",
    "title": "Get Route Table"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubRouteTables.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Route Table"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubRouteTables.list",
    "stage": "GA",
    "title": "List Route Tables"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubRouteTables.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Route Table"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubRoutes.get",
    "stage": "GA",
    "title": "Get Route"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubRoutes.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Route"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubRoutes.list",
    "stage": "GA",
    "title": "List Routes"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubRoutes.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Route"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubs.create",
    "stage": "GA",
    "title": "Create Hub"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubs.delete",
    "stage": "GA",
    "title": "Delete Hub"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubs.get",
    "stage": "GA",
    "title": "Get Hub"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubs.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Hub"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubs.list",
    "stage": "GA",
    "title": "List Hub"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubs.listSpokes",
    "stage": "GA",
    "title": "List Spokes attached to a Hub"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubs.queryStatus",
    "stage": "GA",
    "title": "Query status of a Hub"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubs.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Hub"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.hubs.update",
    "stage": "GA",
    "title": "Update Hub"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.internalRanges.create",
    "stage": "GA",
    "title": "Create InternalRanges"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.internalRanges.delete",
    "stage": "GA",
    "title": "Delete InternalRanges"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.internalRanges.get",
    "stage": "GA",
    "title": "Get InternalRanges"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.internalRanges.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on InternalRanges"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.internalRanges.list",
    "stage": "GA",
    "title": "List InternalRanges"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.internalRanges.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on InternalRanges"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.internalRanges.update",
    "stage": "GA",
    "title": "Update InternalRange"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.multicloudDataTransferConfigs.create",
    "stage": "GA",
    "title": "Create MulticloudDataTransferConfig"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.multicloudDataTransferConfigs.delete",
    "stage": "GA",
    "title": "Delete MulticloudDataTransferConfig"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.multicloudDataTransferConfigs.get",
    "stage": "GA",
    "title": "Get MulticloudDataTransferConfig"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.multicloudDataTransferConfigs.list",
    "stage": "GA",
    "title": "List MulticloudDataTransferConfigs"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.multicloudDataTransferConfigs.update",
    "stage": "GA",
    "title": "Update MulticloudDataTransferConfig"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.multicloudDataTransferDestinations.create",
    "stage": "GA",
    "title": "Create Destination"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.multicloudDataTransferDestinations.delete",
    "stage": "GA",
    "title": "Delete Destination"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.multicloudDataTransferDestinations.get",
    "stage": "GA",
    "title": "Get Destination"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.multicloudDataTransferDestinations.list",
    "stage": "GA",
    "title": "List Destinations"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.multicloudDataTransferDestinations.update",
    "stage": "GA",
    "title": "Update Destination"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.multicloudDataTransferSupportedServices.get",
    "stage": "GA",
    "title": "Get MulticloudDataTransferSupportedService"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.multicloudDataTransferSupportedServices.list",
    "stage": "GA",
    "title": "List MulticloudDataTransferSupportedServices"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.policyBasedRoutes.create",
    "stage": "GA",
    "title": "Create PolicyBasedRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.policyBasedRoutes.delete",
    "stage": "GA",
    "title": "Delete PolicyBasedRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.policyBasedRoutes.get",
    "stage": "GA",
    "title": "Get PolicyBasedRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.policyBasedRoutes.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on PolicyBasedRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.policyBasedRoutes.list",
    "stage": "GA",
    "title": "List PolicyBasedRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.policyBasedRoutes.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on PolicyBasedRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.regionalEndpoints.create",
    "stage": "GA",
    "title": "Create RegionalEndpoint"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.regionalEndpoints.delete",
    "stage": "GA",
    "title": "Delete RegionalEndpoint"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.regionalEndpoints.get",
    "stage": "GA",
    "title": "Get RegionalEndpoint"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.regionalEndpoints.list",
    "stage": "GA",
    "title": "List RegionalEndpoints"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceClasses.create",
    "stage": "GA",
    "title": "Create ServiceClass"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceClasses.delete",
    "stage": "GA",
    "title": "Delete ServiceClass"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceClasses.get",
    "stage": "GA",
    "title": "Get ServiceClass"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceClasses.list",
    "stage": "GA",
    "title": "List ServiceClasses"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceClasses.update",
    "stage": "GA",
    "title": "Update ServiceClass"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceClasses.use",
    "stage": "GA",
    "title": "Use ServiceClass"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceConnectionMaps.create",
    "stage": "GA",
    "title": "Create ServiceConnectionMap"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceConnectionMaps.delete",
    "stage": "GA",
    "title": "Delete ServiceConnectionMap"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceConnectionMaps.get",
    "stage": "GA",
    "title": "Get ServiceConnectionMap"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceConnectionMaps.list",
    "stage": "GA",
    "title": "List ServiceConnectionMaps"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceConnectionMaps.update",
    "stage": "GA",
    "title": "Update ServiceConnectionMap"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceConnectionPolicies.create",
    "stage": "GA",
    "title": "Create ServiceConnectionPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceConnectionPolicies.delete",
    "stage": "GA",
    "title": "Delete ServiceConnectionPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceConnectionPolicies.get",
    "stage": "GA",
    "title": "Get ServiceConnectionPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceConnectionPolicies.list",
    "stage": "GA",
    "title": "List ServiceConnectionPolicies"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.serviceConnectionPolicies.update",
    "stage": "GA",
    "title": "Update ServiceConnectionPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.spokes.create",
    "stage": "GA",
    "title": "Create Spoke"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.spokes.delete",
    "stage": "GA",
    "title": "Delete Spoke"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.spokes.get",
    "stage": "GA",
    "title": "Get Spoke"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.spokes.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Spoke"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.spokes.list",
    "stage": "GA",
    "title": "List Spoke"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.spokes.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Spoke"
  },
  {
    "apiDisabled": true,
    "name": "networkconnectivity.spokes.update",
    "stage": "GA",
    "title": "Update Spoke"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.create",
    "stage": "GA",
    "title": "Create connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.delete",
    "stage": "GA",
    "title": "Delete connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.get",
    "stage": "GA",
    "title": "Get connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.list",
    "stage": "GA",
    "title": "List connectivityTests"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.rerun",
    "stage": "GA",
    "title": "Rerun connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.connectivitytests.update",
    "stage": "GA",
    "title": "Update connectivityTest"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.vpcflowlogsconfigs.create",
    "stage": "GA",
    "title": "Create vpcFlowLogsConfig"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.vpcflowlogsconfigs.delete",
    "stage": "GA",
    "title": "Delete vpcFlowLogsConfig"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.vpcflowlogsconfigs.get",
    "stage": "GA",
    "title": "Get vpcFlowLogsConfig"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.vpcflowlogsconfigs.list",
    "stage": "GA",
    "title": "List vpcFlowLogsConfigs"
  },
  {
    "apiDisabled": true,
    "name": "networkmanagement.vpcflowlogsconfigs.update",
    "stage": "GA",
    "title": "Update vpcFlowLogsConfig"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.addressGroups.create",
    "stage": "BETA",
    "title": "Create AddressGroup"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.addressGroups.delete",
    "stage": "BETA",
    "title": "Delete AddressGroup"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.addressGroups.get",
    "stage": "BETA",
    "title": "Get AddressGroup"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.addressGroups.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on AddressGroup"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.addressGroups.list",
    "stage": "BETA",
    "title": "List AddressGroups"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.addressGroups.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on AddressGroup"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.addressGroups.update",
    "stage": "BETA",
    "title": "Update AddressGroup"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.addressGroups.use",
    "stage": "BETA",
    "title": "Use AddressGroup"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authorizationPolicies.create",
    "stage": "BETA",
    "title": "Create AuthorizationPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authorizationPolicies.delete",
    "stage": "BETA",
    "title": "Delete AuthorizationPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authorizationPolicies.get",
    "stage": "BETA",
    "title": "Get AuthorizationPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authorizationPolicies.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on AuthorizationPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authorizationPolicies.list",
    "stage": "BETA",
    "title": "List AuthorizationPolicies"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authorizationPolicies.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on AuthorizationPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authorizationPolicies.update",
    "stage": "BETA",
    "title": "Update AuthorizationPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authorizationPolicies.use",
    "stage": "BETA",
    "title": "Use AuthorizationPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authzPolicies.create",
    "stage": "BETA",
    "title": "Create AuthzPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authzPolicies.delete",
    "stage": "BETA",
    "title": "Delete AuthzPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authzPolicies.get",
    "stage": "BETA",
    "title": "Get AuthzPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authzPolicies.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on AuthzPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authzPolicies.list",
    "stage": "BETA",
    "title": "List AuthzPolicies"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authzPolicies.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on AuthzPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.authzPolicies.update",
    "stage": "BETA",
    "title": "Update AuthzPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.backendAuthenticationConfigs.create",
    "stage": "BETA",
    "title": "Create BackendAuthenticationConfig"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.backendAuthenticationConfigs.delete",
    "stage": "BETA",
    "title": "Delete BackendAuthenticationConfig"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.backendAuthenticationConfigs.get",
    "stage": "BETA",
    "title": "Get BackendAuthenticationConfig"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.backendAuthenticationConfigs.list",
    "stage": "BETA",
    "title": "List BackendAuthenticationConfigs"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.backendAuthenticationConfigs.update",
    "stage": "BETA",
    "title": "Update BackendAuthenticationConfig"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.backendAuthenticationConfigs.use",
    "stage": "BETA",
    "title": "Use BackendAuthenticationConfig"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.clientTlsPolicies.create",
    "stage": "BETA",
    "title": "Create ClientTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.clientTlsPolicies.delete",
    "stage": "BETA",
    "title": "Delete ClientTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.clientTlsPolicies.get",
    "stage": "BETA",
    "title": "Get ClientTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.clientTlsPolicies.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on ClientTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.clientTlsPolicies.list",
    "stage": "BETA",
    "title": "List ClientTlsPolicies"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.clientTlsPolicies.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on ClientTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.clientTlsPolicies.update",
    "stage": "BETA",
    "title": "Update ClientTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.clientTlsPolicies.use",
    "stage": "BETA",
    "title": "Use ClientTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.dnsThreatDetectors.create",
    "stage": "BETA",
    "title": "Create DNS Threat Detector"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.dnsThreatDetectors.delete",
    "stage": "BETA",
    "title": "Delete DNS Threat Detector"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.dnsThreatDetectors.get",
    "stage": "BETA",
    "title": "Get DNS Threat Detector"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.dnsThreatDetectors.list",
    "stage": "BETA",
    "title": "List DNS Threat Detectors"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.dnsThreatDetectors.update",
    "stage": "BETA",
    "title": "Update DNS Threat Detector"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.firewallEndpointAssociations.create",
    "stage": "BETA",
    "title": "Create Firewall Endpoint Association"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.firewallEndpointAssociations.delete",
    "stage": "BETA",
    "title": "Delete Firewall Endpoint Association"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.firewallEndpointAssociations.get",
    "stage": "BETA",
    "title": "Get Firewall Endpoint Association"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.firewallEndpointAssociations.list",
    "stage": "BETA",
    "title": "List Firewall Endpoint Associations"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.firewallEndpointAssociations.update",
    "stage": "BETA",
    "title": "Update Firewall Endpoint Association"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.gatewaySecurityPolicies.create",
    "stage": "BETA",
    "title": "Create GatewaySecurityPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.gatewaySecurityPolicies.delete",
    "stage": "BETA",
    "title": "Delete GatewaySecurityPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.gatewaySecurityPolicies.get",
    "stage": "BETA",
    "title": "Get GatewaySecurityPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.gatewaySecurityPolicies.list",
    "stage": "BETA",
    "title": "List GatewaySecurityPolicies"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.gatewaySecurityPolicies.update",
    "stage": "BETA",
    "title": "Update GatewaySecurityPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.gatewaySecurityPolicies.use",
    "stage": "BETA",
    "title": "Use GatewaySecurityPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.gatewaySecurityPolicyRules.create",
    "stage": "BETA",
    "title": "Create GatewaySecurityPolicyRule"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.gatewaySecurityPolicyRules.delete",
    "stage": "BETA",
    "title": "Delete GatewaySecurityPolicyRule"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.gatewaySecurityPolicyRules.get",
    "stage": "BETA",
    "title": "Get GatewaySecurityPolicyRule"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.gatewaySecurityPolicyRules.list",
    "stage": "BETA",
    "title": "List GatewaySecurityPolicyRules"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.gatewaySecurityPolicyRules.update",
    "stage": "BETA",
    "title": "Update GatewaySecurityPolicyRule"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.gatewaySecurityPolicyRules.use",
    "stage": "BETA",
    "title": "Use GatewaySecurityPolicyRule"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptDeploymentGroups.create",
    "stage": "BETA",
    "title": "Create Intercept Deployment Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptDeploymentGroups.delete",
    "stage": "BETA",
    "title": "Delete Intercept Deployment Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptDeploymentGroups.get",
    "stage": "BETA",
    "title": "Get Intercept Deployment Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptDeploymentGroups.list",
    "stage": "BETA",
    "title": "List Intercept Deployment Groups"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptDeploymentGroups.update",
    "stage": "BETA",
    "title": "Update Intercept Deployment Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptDeploymentGroups.use",
    "stage": "BETA",
    "title": "Connect Intercept Endpoint Group to Intercept Deployment Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptDeployments.create",
    "stage": "BETA",
    "title": "Create Intercept Deployments"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptDeployments.delete",
    "stage": "BETA",
    "title": "Delete Intercept Deployments"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptDeployments.get",
    "stage": "BETA",
    "title": "Get Intercept Deployments"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptDeployments.list",
    "stage": "BETA",
    "title": "List Intercept Deployments"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptDeployments.update",
    "stage": "BETA",
    "title": "Update Intercept Deployments"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptEndpointGroupAssociations.create",
    "stage": "BETA",
    "title": "Create Intercept Endpoint Group Associations."
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptEndpointGroupAssociations.delete",
    "stage": "BETA",
    "title": "Delete Intercept Endpoint Group Associations."
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptEndpointGroupAssociations.get",
    "stage": "BETA",
    "title": "Get Intercept Endpoint Group Associations."
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptEndpointGroupAssociations.list",
    "stage": "BETA",
    "title": "List Intercept Endpoint Group Associations."
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptEndpointGroupAssociations.update",
    "stage": "BETA",
    "title": "Update Intercept Endpoint Group Associations."
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptEndpointGroups.create",
    "stage": "BETA",
    "title": "Create Intercept Endpoint Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptEndpointGroups.delete",
    "stage": "BETA",
    "title": "Delete Intercept Endpoint Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptEndpointGroups.get",
    "stage": "BETA",
    "title": "Get Intercept Endpoint Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptEndpointGroups.list",
    "stage": "BETA",
    "title": "List Intercept Endpoint Groups"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptEndpointGroups.update",
    "stage": "BETA",
    "title": "Update Intercept Endpoint Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.interceptEndpointGroups.use",
    "stage": "BETA",
    "title": "Associate a network or a SecurityProfile to Intercept Endpoint Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringDeploymentGroups.create",
    "stage": "BETA",
    "title": "Create Mirroring Deployment Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringDeploymentGroups.delete",
    "stage": "BETA",
    "title": "Delete Mirroring Deployment Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringDeploymentGroups.get",
    "stage": "BETA",
    "title": "Get Mirroring Deployment Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringDeploymentGroups.list",
    "stage": "BETA",
    "title": "List Mirroring Deployment Groups"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringDeploymentGroups.update",
    "stage": "BETA",
    "title": "Update Mirroring Deployment Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringDeploymentGroups.use",
    "stage": "BETA",
    "title": "Connect Mirroring Endpoint Group to Mirroring Deployment Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringDeployments.create",
    "stage": "BETA",
    "title": "Create Mirroring Deployments"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringDeployments.delete",
    "stage": "BETA",
    "title": "Delete Mirroring Deployments"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringDeployments.get",
    "stage": "BETA",
    "title": "Get Mirroring Deployments"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringDeployments.list",
    "stage": "BETA",
    "title": "List Mirroring Deployments"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringDeployments.update",
    "stage": "BETA",
    "title": "Update Mirroring Deployments"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringEndpointGroupAssociations.create",
    "stage": "BETA",
    "title": "Create Mirroring Endpoint Group Associations."
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringEndpointGroupAssociations.delete",
    "stage": "BETA",
    "title": "Delete Mirroring Endpoint Group Associations."
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringEndpointGroupAssociations.get",
    "stage": "BETA",
    "title": "Get Mirroring Endpoint Group Associations."
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringEndpointGroupAssociations.list",
    "stage": "BETA",
    "title": "List Mirroring Endpoint Group Associations."
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringEndpointGroupAssociations.update",
    "stage": "BETA",
    "title": "Update Mirroring Endpoint Group Associations."
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringEndpointGroups.create",
    "stage": "BETA",
    "title": "Create Mirroring Endpoint Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringEndpointGroups.delete",
    "stage": "BETA",
    "title": "Delete Mirroring Endpoint Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringEndpointGroups.get",
    "stage": "BETA",
    "title": "Get Mirroring Endpoint Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringEndpointGroups.list",
    "stage": "BETA",
    "title": "List Mirroring Endpoint Groups"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringEndpointGroups.update",
    "stage": "BETA",
    "title": "Update Mirroring Endpoint Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.mirroringEndpointGroups.use",
    "stage": "BETA",
    "title": "Associate a network or a SecurityProfile to Mirroring Endpoint Group"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.partnerSSEGateways.create",
    "stage": "BETA",
    "title": "Create partnerSSEGateway"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.partnerSSEGateways.delete",
    "stage": "BETA",
    "title": "Delete partnerSSEGateway"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.partnerSSEGateways.get",
    "stage": "BETA",
    "title": "Get partnerSSEGateway"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.partnerSSEGateways.list",
    "stage": "BETA",
    "title": "List partnerSSEGateways"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.partnerSSERealms.create",
    "stage": "BETA",
    "title": "Create partnerSSERealm"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.partnerSSERealms.delete",
    "stage": "BETA",
    "title": "Delete partnerSSERealm"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.partnerSSERealms.get",
    "stage": "BETA",
    "title": "Get partnerSSERealm"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.partnerSSERealms.list",
    "stage": "BETA",
    "title": "List partnerSSERealms"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.sacAttachments.create",
    "stage": "BETA",
    "title": "Create sacAttachment"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.sacAttachments.delete",
    "stage": "BETA",
    "title": "Delete sacAttachment"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.sacAttachments.get",
    "stage": "BETA",
    "title": "Get sacAttachment"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.sacAttachments.list",
    "stage": "BETA",
    "title": "List sacAttachments"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.sacRealms.create",
    "stage": "BETA",
    "title": "Create sacRealm"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.sacRealms.delete",
    "stage": "BETA",
    "title": "Delete sacRealm"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.sacRealms.get",
    "stage": "BETA",
    "title": "Get sacRealm"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.sacRealms.list",
    "stage": "BETA",
    "title": "List sacRealms"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.securityProfileGroups.create",
    "stage": "BETA",
    "title": "Create SecurityProfileGroup"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.securityProfileGroups.delete",
    "stage": "BETA",
    "title": "Delete SecurityProfileGroup"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.securityProfileGroups.get",
    "stage": "BETA",
    "title": "Get SecurityProfileGroups"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.securityProfileGroups.list",
    "stage": "BETA",
    "title": "List SecurityProfileGroups"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.securityProfileGroups.update",
    "stage": "BETA",
    "title": "Update SecurityProfileGroup"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.securityProfileGroups.use",
    "stage": "BETA",
    "title": "Use SecurityProfileGroup"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.securityProfiles.create",
    "stage": "BETA",
    "title": "Create SecurityProfile"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.securityProfiles.delete",
    "stage": "BETA",
    "title": "Delete SecurityProfile"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.securityProfiles.get",
    "stage": "BETA",
    "title": "Get SecurityProfiles"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.securityProfiles.list",
    "stage": "BETA",
    "title": "List SecurityProfiles"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.securityProfiles.update",
    "stage": "BETA",
    "title": "Update SecurityProfile"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.securityProfiles.use",
    "stage": "BETA",
    "title": "Use SecurityProfile"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.serverTlsPolicies.create",
    "stage": "BETA",
    "title": "Create ServerTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.serverTlsPolicies.delete",
    "stage": "BETA",
    "title": "Delete ServerTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.serverTlsPolicies.get",
    "stage": "BETA",
    "title": "Get ServerTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.serverTlsPolicies.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on ServerTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.serverTlsPolicies.list",
    "stage": "BETA",
    "title": "List ServerTlsPolicies"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.serverTlsPolicies.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on ServerTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.serverTlsPolicies.update",
    "stage": "BETA",
    "title": "Update ServerTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.serverTlsPolicies.use",
    "stage": "BETA",
    "title": "Use ServerTlsPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.sseGatewayReferences.get",
    "stage": "BETA",
    "title": "Get sseGatewayReference"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.sseGatewayReferences.list",
    "stage": "BETA",
    "title": "List sseGatewayReferences"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.tlsInspectionPolicies.create",
    "stage": "BETA",
    "title": "Create TlsInspectionPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.tlsInspectionPolicies.delete",
    "stage": "BETA",
    "title": "Delete TlsInspectionPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.tlsInspectionPolicies.get",
    "stage": "BETA",
    "title": "Get TlsInspectionPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.tlsInspectionPolicies.list",
    "stage": "BETA",
    "title": "List TlsInspectionPolicies"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.tlsInspectionPolicies.update",
    "stage": "BETA",
    "title": "Update TlsInspectionPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.tlsInspectionPolicies.use",
    "stage": "BETA",
    "title": "Use TlsInspectionPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.urlLists.create",
    "stage": "BETA",
    "title": "Create UrlList"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.urlLists.delete",
    "stage": "BETA",
    "title": "Delete UrlList"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.urlLists.get",
    "stage": "BETA",
    "title": "Get UrlList"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.urlLists.list",
    "stage": "BETA",
    "title": "List UrlLists"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.urlLists.update",
    "stage": "BETA",
    "title": "Update UrlList"
  },
  {
    "apiDisabled": true,
    "name": "networksecurity.urlLists.use",
    "stage": "BETA",
    "title": "Use UrlList"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.authzExtensions.create",
    "stage": "BETA",
    "title": "Create AuthzExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.authzExtensions.delete",
    "stage": "BETA",
    "title": "Delete AuthzExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.authzExtensions.get",
    "stage": "BETA",
    "title": "Get AuthzExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.authzExtensions.list",
    "stage": "BETA",
    "title": "List AuthzExtensions"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.authzExtensions.update",
    "stage": "BETA",
    "title": "Update AuthzExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.authzExtensions.use",
    "stage": "BETA",
    "title": "Use AuthzExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.endpointPolicies.create",
    "stage": "BETA",
    "title": "Create EndpointPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.endpointPolicies.delete",
    "stage": "BETA",
    "title": "Delete EndpointPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.endpointPolicies.get",
    "stage": "BETA",
    "title": "Get EndpointPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.endpointPolicies.list",
    "stage": "BETA",
    "title": "List EndpointPolicies"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.endpointPolicies.update",
    "stage": "BETA",
    "title": "Update EndpointPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.gateways.create",
    "stage": "BETA",
    "title": "Create Gateway"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.gateways.delete",
    "stage": "BETA",
    "title": "Delete Gateway"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.gateways.get",
    "stage": "BETA",
    "title": "Get Gateway"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.gateways.list",
    "stage": "BETA",
    "title": "List Gateways"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.gateways.update",
    "stage": "BETA",
    "title": "Update Gateway"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.gateways.use",
    "stage": "BETA",
    "title": "Use Gateway"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.grpcRoutes.create",
    "stage": "BETA",
    "title": "Create GrpcRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.grpcRoutes.delete",
    "stage": "BETA",
    "title": "Delete GrpcRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.grpcRoutes.get",
    "stage": "BETA",
    "title": "Get GrpcRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.grpcRoutes.list",
    "stage": "BETA",
    "title": "List GrpcRoutes"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.grpcRoutes.update",
    "stage": "BETA",
    "title": "Update GrpcRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpFilters.create",
    "stage": "BETA",
    "title": "Create HttpFilter"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpFilters.delete",
    "stage": "BETA",
    "title": "Delete HttpFilter"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpFilters.get",
    "stage": "BETA",
    "title": "Get HttpFilter"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpFilters.list",
    "stage": "BETA",
    "title": "List HttpFilters"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpFilters.update",
    "stage": "BETA",
    "title": "Update HttpFilter"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpRoutes.create",
    "stage": "BETA",
    "title": "Create HttpRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpRoutes.delete",
    "stage": "BETA",
    "title": "Delete HttpRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpRoutes.get",
    "stage": "BETA",
    "title": "Get HttpRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpRoutes.list",
    "stage": "BETA",
    "title": "List HttpRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpRoutes.update",
    "stage": "BETA",
    "title": "Update HttpRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpfilters.create",
    "stage": "BETA",
    "title": "Create HttpFilter"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpfilters.delete",
    "stage": "BETA",
    "title": "Delete HttpFilter"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpfilters.get",
    "stage": "BETA",
    "title": "Get HttpFilter"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpfilters.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on HttpFilter"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpfilters.list",
    "stage": "BETA",
    "title": "List HttpFilters"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpfilters.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on HttpFilter"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpfilters.update",
    "stage": "BETA",
    "title": "Update HttpFilter"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.httpfilters.use",
    "stage": "BETA",
    "title": "Use HttpFilter"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbEdgeExtensions.create",
    "stage": "BETA",
    "title": "Create LbEdgeExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbEdgeExtensions.delete",
    "stage": "BETA",
    "title": "Delete LbEdgeExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbEdgeExtensions.get",
    "stage": "BETA",
    "title": "Get LbEdgeExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbEdgeExtensions.list",
    "stage": "BETA",
    "title": "List LbEdgeExtensions"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbEdgeExtensions.update",
    "stage": "BETA",
    "title": "Update LbEdgeExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbRouteExtensions.create",
    "stage": "BETA",
    "title": "Create LbRouteExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbRouteExtensions.delete",
    "stage": "BETA",
    "title": "Delete LbRouteExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbRouteExtensions.get",
    "stage": "BETA",
    "title": "Get LbRouteExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbRouteExtensions.list",
    "stage": "BETA",
    "title": "List LbRouteExtensions"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbRouteExtensions.update",
    "stage": "BETA",
    "title": "Update LbRouteExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbTrafficExtensions.create",
    "stage": "BETA",
    "title": "Create LbTrafficExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbTrafficExtensions.delete",
    "stage": "BETA",
    "title": "Delete LbTrafficExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbTrafficExtensions.get",
    "stage": "BETA",
    "title": "Get LbTrafficExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbTrafficExtensions.list",
    "stage": "BETA",
    "title": "List LbTrafficExtensions"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.lbTrafficExtensions.update",
    "stage": "BETA",
    "title": "Update LbTrafficExtension"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.meshes.create",
    "stage": "BETA",
    "title": "Create Mesh"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.meshes.delete",
    "stage": "BETA",
    "title": "Delete Mesh"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.meshes.get",
    "stage": "BETA",
    "title": "Get Mesh"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.meshes.list",
    "stage": "BETA",
    "title": "List Meshes"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.meshes.update",
    "stage": "BETA",
    "title": "Update Mesh"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.meshes.use",
    "stage": "BETA",
    "title": "Use Mesh"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.route_views.get",
    "stage": "BETA",
    "title": "Get RouteView"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.route_views.list",
    "stage": "BETA",
    "title": "List RouteViews"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.serviceBindings.create",
    "stage": "BETA",
    "title": "Create ServiceBinding"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.serviceBindings.delete",
    "stage": "BETA",
    "title": "Delete ServiceBinding"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.serviceBindings.get",
    "stage": "BETA",
    "title": "Get ServiceBinding"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.serviceBindings.list",
    "stage": "BETA",
    "title": "List ServiceBindings"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.serviceBindings.update",
    "stage": "BETA",
    "title": "Update ServiceBinding"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.serviceLbPolicies.create",
    "stage": "BETA",
    "title": "Create ServiceLbPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.serviceLbPolicies.delete",
    "stage": "BETA",
    "title": "Delete ServiceLbPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.serviceLbPolicies.get",
    "stage": "BETA",
    "title": "Get ServiceLbPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.serviceLbPolicies.list",
    "stage": "BETA",
    "title": "List ServiceLbPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.serviceLbPolicies.update",
    "stage": "BETA",
    "title": "Update ServiceLbPolicy"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.tcpRoutes.create",
    "stage": "BETA",
    "title": "Create TcpRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.tcpRoutes.delete",
    "stage": "BETA",
    "title": "Delete TcpRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.tcpRoutes.get",
    "stage": "BETA",
    "title": "Get TcpRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.tcpRoutes.list",
    "stage": "BETA",
    "title": "List TcpRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.tcpRoutes.update",
    "stage": "BETA",
    "title": "Update TcpRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.tlsRoutes.create",
    "stage": "BETA",
    "title": "Create TlsRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.tlsRoutes.delete",
    "stage": "BETA",
    "title": "Delete TlsRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.tlsRoutes.get",
    "stage": "BETA",
    "title": "Get TlsRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.tlsRoutes.list",
    "stage": "BETA",
    "title": "List TlsRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.tlsRoutes.update",
    "stage": "BETA",
    "title": "Update TlsRoute"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.wasmPlugins.create",
    "stage": "BETA",
    "title": "Create WasmPlugin"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.wasmPlugins.delete",
    "stage": "BETA",
    "title": "Delete WasmPlugin"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.wasmPlugins.get",
    "stage": "BETA",
    "title": "Get WasmPlugin"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.wasmPlugins.list",
    "stage": "BETA",
    "title": "List WasmPlugins"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.wasmPlugins.update",
    "stage": "BETA",
    "title": "Update WasmPlugin"
  },
  {
    "apiDisabled": true,
    "name": "networkservices.wasmPlugins.use",
    "stage": "BETA",
    "title": "Use WasmPlugin"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.environments.create",
    "stage": "GA",
    "title": "Create environment"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.environments.delete",
    "stage": "GA",
    "title": "Delete environment"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.environments.get",
    "stage": "GA",
    "title": "Get environment"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.environments.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on environment"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.environments.list",
    "stage": "GA",
    "title": "List environments"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.environments.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on environment"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.executions.create",
    "stage": "GA",
    "title": "Create executions"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.executions.delete",
    "stage": "GA",
    "title": "Delete executions"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.executions.get",
    "stage": "GA",
    "title": "Get executions"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.executions.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on executions"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.executions.list",
    "stage": "GA",
    "title": "List executions"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.executions.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on executions"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.checkUpgradability",
    "stage": "GA",
    "title": "Check if instance is upgradeable"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.create",
    "stage": "GA",
    "title": "Create instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.delete",
    "stage": "GA",
    "title": "Delete instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.diagnose",
    "stage": "GA",
    "title": "Diagnose instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.get",
    "stage": "GA",
    "title": "Get instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.getHealth",
    "stage": "GA",
    "title": "Get instance health"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.list",
    "stage": "GA",
    "title": "List instances"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.reset",
    "stage": "GA",
    "title": "Reset instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.setAccelerator",
    "stage": "GA",
    "title": "Change accelerator type and number of cores on instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.setLabels",
    "stage": "GA",
    "title": "Set labels on instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.setMachineType",
    "stage": "GA",
    "title": "Change instance machine type"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.start",
    "stage": "GA",
    "title": "Start instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.stop",
    "stage": "GA",
    "title": "Stop instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.update",
    "stage": "GA",
    "title": "Update instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.updateConfig",
    "stage": "GA",
    "title": "Update instance configurations"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.updateShieldInstanceConfig",
    "stage": "GA",
    "title": "Update shield instance configuration"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.upgrade",
    "stage": "GA",
    "title": "Upgrade instance to latest version"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.instances.use",
    "stage": "GA",
    "title": "Use instance"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.runtimes.create",
    "stage": "GA",
    "title": "Create runtime"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.runtimes.delete",
    "stage": "GA",
    "title": "Delete runtime"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.runtimes.diagnose",
    "stage": "GA",
    "title": "Diagnose runtime"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.runtimes.get",
    "stage": "GA",
    "title": "Get runtime"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.runtimes.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on runtime"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.runtimes.list",
    "stage": "GA",
    "title": "List runtimes"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.runtimes.reset",
    "stage": "GA",
    "title": "Reset runtime"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.runtimes.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on runtime"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.runtimes.start",
    "stage": "GA",
    "title": "Start runtime"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.runtimes.stop",
    "stage": "GA",
    "title": "Stop runtime"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.runtimes.switch",
    "stage": "GA",
    "title": "Switch runtime"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.runtimes.update",
    "stage": "GA",
    "title": "Update runtime"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.runtimes.upgrade",
    "stage": "GA",
    "title": "Upgrade runtime to latest version"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.schedules.create",
    "stage": "GA",
    "title": "Create schedule"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.schedules.delete",
    "stage": "GA",
    "title": "Delete schedule"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.schedules.get",
    "stage": "GA",
    "title": "Get schedule"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.schedules.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on schedule"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.schedules.list",
    "stage": "GA",
    "title": "List schedules"
  },
  {
    "apiDisabled": true,
    "name": "notebooks.schedules.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on schedule"
  },
  {
    "name": "oauthconfig.clientpolicy.get",
    "stage": "BETA",
    "title": "Get the OAuth verification config of an OAuth client"
  },
  {
    "apiDisabled": true,
    "name": "oauthconfig.testusers.get",
    "stage": "BETA",
    "title": "View the trusted user list for a test app"
  },
  {
    "apiDisabled": true,
    "name": "oauthconfig.testusers.update",
    "stage": "BETA",
    "title": "Edit the trusted user list for a test app"
  },
  {
    "name": "oauthconfig.verification.get",
    "stage": "BETA",
    "title": "Get the OAuth verification config of a project"
  },
  {
    "name": "oauthconfig.verification.submit",
    "stage": "BETA",
    "title": "Submit an app verification"
  },
  {
    "name": "oauthconfig.verification.update",
    "stage": "BETA",
    "title": "Create or update the OAuth verification config of a project"
  },
  {
    "name": "oauthpolicymetadata.brandpolicy.createOrUpdate",
    "primaryPermission": "oauthconfig.verification.update",
    "stage": "BETA",
    "title": "Create or update the OAuth verification config of a project"
  },
  {
    "name": "oauthpolicymetadata.brandpolicy.get",
    "primaryPermission": "oauthconfig.verification.get",
    "stage": "BETA",
    "title": "Get the OAuth verification config of a project"
  },
  {
    "name": "oauthpolicymetadata.brandpolicy.submitVerification",
    "primaryPermission": "oauthconfig.verification.submit",
    "stage": "BETA",
    "title": "Submit an app verification"
  },
  {
    "name": "oauthpolicymetadata.clientpolicy.get",
    "primaryPermission": "oauthconfig.clientpolicy.get",
    "stage": "BETA",
    "title": "Get the OAuth verification config of an OAuth client"
  },
  {
    "apiDisabled": true,
    "name": "oauthtestapp.userwhitelist.read",
    "primaryPermission": "oauthconfig.testusers.get",
    "stage": "BETA",
    "title": "View the trusted user list for a test app"
  },
  {
    "apiDisabled": true,
    "name": "oauthtestapp.userwhitelist.write",
    "primaryPermission": "oauthconfig.testusers.update",
    "stage": "BETA",
    "title": "Edit the trusted user list for a test app"
  },
  {
    "apiDisabled": true,
    "description": "Create an Analytics View",
    "name": "observability.analyticsViews.create",
    "stage": "BETA",
    "title": "Create Analytics View"
  },
  {
    "apiDisabled": true,
    "description": "Delete an Analytics View",
    "name": "observability.analyticsViews.delete",
    "stage": "BETA",
    "title": "Delete Analytics View"
  },
  {
    "apiDisabled": true,
    "description": "Get an Analytics View",
    "name": "observability.analyticsViews.get",
    "stage": "BETA",
    "title": "Get Analytics View"
  },
  {
    "apiDisabled": true,
    "description": "List Analytics Views",
    "name": "observability.analyticsViews.list",
    "stage": "BETA",
    "title": "List Analytics Views"
  },
  {
    "apiDisabled": true,
    "description": "Update an Analytics View",
    "name": "observability.analyticsViews.update",
    "stage": "BETA",
    "title": "Update Analytics View"
  },
  {
    "apiDisabled": true,
    "name": "observability.buckets.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.buckets.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.buckets.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.buckets.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.buckets.undelete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.buckets.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.datasets.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.datasets.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.datasets.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.datasets.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.datasets.undelete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.datasets.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.links.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.links.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.links.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.links.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.links.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Get scope",
    "name": "observability.scopes.get",
    "stage": "BETA",
    "title": "Get scope"
  },
  {
    "apiDisabled": true,
    "description": "Update scope",
    "name": "observability.scopes.update",
    "stage": "BETA",
    "title": "Update scope"
  },
  {
    "apiDisabled": true,
    "description": "Create a TraceScope",
    "name": "observability.traceScopes.create",
    "stage": "BETA",
    "title": "Create TraceScope"
  },
  {
    "apiDisabled": true,
    "description": "Delete a TraceScope",
    "name": "observability.traceScopes.delete",
    "stage": "BETA",
    "title": "Delete TraceScope"
  },
  {
    "apiDisabled": true,
    "description": "Get a single TraceScope",
    "name": "observability.traceScopes.get",
    "stage": "BETA",
    "title": "Get TraceScope"
  },
  {
    "apiDisabled": true,
    "description": "List TraceScopes",
    "name": "observability.traceScopes.list",
    "stage": "BETA",
    "title": "List TraceScopes"
  },
  {
    "apiDisabled": true,
    "description": "Update a TraceScope",
    "name": "observability.traceScopes.update",
    "stage": "BETA",
    "title": "Update TraceScope"
  },
  {
    "apiDisabled": true,
    "name": "observability.views.access",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.views.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.views.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.views.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.views.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "observability.views.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Cancel an Operation",
    "name": "ondemandscanning.operations.cancel",
    "stage": "BETA",
    "title": "Cancel"
  },
  {
    "apiDisabled": true,
    "description": "Delete an Operation",
    "name": "ondemandscanning.operations.delete",
    "stage": "BETA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "description": "Get an Operation",
    "name": "ondemandscanning.operations.get",
    "stage": "BETA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "description": "List Operations",
    "name": "ondemandscanning.operations.list",
    "stage": "BETA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "description": "Wait for an Operation",
    "name": "ondemandscanning.operations.wait",
    "stage": "BETA",
    "title": "Wait"
  },
  {
    "apiDisabled": true,
    "description": "Analyze a list of packages and versions",
    "name": "ondemandscanning.scans.analyzePackages",
    "stage": "BETA",
    "title": "Analyze Packages"
  },
  {
    "apiDisabled": true,
    "description": "List Vulnerability Occurrences",
    "name": "ondemandscanning.scans.listVulnerabilities",
    "stage": "BETA",
    "title": "List Vulnerability Occurrences"
  },
  {
    "apiDisabled": true,
    "description": "Scan a resource",
    "name": "ondemandscanning.scans.scan",
    "stage": "BETA",
    "title": "Scan"
  },
  {
    "apiDisabled": true,
    "name": "opsconfigmonitoring.resourceMetadata.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "opsconfigmonitoring.resourceMetadata.write",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabaseBackups.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabaseBackups.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabaseBackups.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabaseBackups.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabaseCharacterSets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabases.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabases.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabases.generateWallet",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabases.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabases.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabases.restart",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabases.restore",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabases.start",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabases.stop",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabases.switchover",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDatabases.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.autonomousDbVersions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.cloudExadataInfrastructures.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.cloudExadataInfrastructures.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.cloudExadataInfrastructures.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.cloudExadataInfrastructures.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.cloudExadataInfrastructures.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.cloudExadataInfrastructures.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.cloudVmClusters.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.cloudVmClusters.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.cloudVmClusters.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.cloudVmClusters.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.cloudVmClusters.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.dbNodes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.dbServers.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.dbSystemShapes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.entitlements.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.exadbVmClusters.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.exadbVmClusters.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.exadbVmClusters.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.exadbVmClusters.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.exadbVmClusters.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.exascaleDbStorageVaults.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.exascaleDbStorageVaults.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.exascaleDbStorageVaults.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.exascaleDbStorageVaults.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.giVersions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.odbNetworks.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.odbNetworks.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.odbNetworks.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.odbNetworks.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.odbSubnets.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.odbSubnets.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.odbSubnets.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.odbSubnets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.odbSubnets.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.operations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "oracledatabase.systemVersions.list",
    "stage": "GA"
  },
  {
    "name": "orgpolicy.constraints.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "orgpolicy.policies.create",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "orgpolicy.policies.delete",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "name": "orgpolicy.policies.list",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "orgpolicy.policies.update",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "orgpolicy.policy.get",
    "stage": "GA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "orgpolicy.policy.set",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.guestPolicies.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.guestPolicies.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.guestPolicies.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.guestPolicies.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.guestPolicies.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.instanceOSPoliciesCompliances.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.instanceOSPoliciesCompliances.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.inventories.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.inventories.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.osPolicyAssignmentReports.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.osPolicyAssignmentReports.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.osPolicyAssignmentReports.searchSummaries",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.osPolicyAssignments.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.osPolicyAssignments.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.osPolicyAssignments.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.osPolicyAssignments.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.osPolicyAssignments.searchPolicies",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.osPolicyAssignments.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.patchDeployments.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.patchDeployments.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.patchDeployments.execute",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.patchDeployments.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.patchDeployments.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.patchDeployments.pause",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.patchDeployments.resume",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.patchDeployments.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.patchJobs.exec",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.patchJobs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.patchJobs.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.policyOrchestrators.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.policyOrchestrators.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.policyOrchestrators.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.policyOrchestrators.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.policyOrchestrators.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.projectFeatureSettings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.projectFeatureSettings.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.upgradeReports.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.upgradeReports.getSummary",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.upgradeReports.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.upgradeReports.searchSummaries",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.vulnerabilityReports.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "osconfig.vulnerabilityReports.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parallelstore.instances.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parallelstore.instances.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parallelstore.instances.exportData",
    "stage": "GA",
    "title": "Export Data"
  },
  {
    "apiDisabled": true,
    "name": "parallelstore.instances.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parallelstore.instances.importData",
    "stage": "GA",
    "title": "Import Data"
  },
  {
    "apiDisabled": true,
    "name": "parallelstore.instances.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parallelstore.instances.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parallelstore.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "parallelstore.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "parallelstore.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parallelstore.operations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parallelstore.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parallelstore.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parametermanager.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parametermanager.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parametermanager.parameterVersions.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parametermanager.parameterVersions.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parametermanager.parameterVersions.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parametermanager.parameterVersions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parametermanager.parameterVersions.render",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parametermanager.parameterVersions.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parametermanager.parameters.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parametermanager.parameters.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parametermanager.parameters.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parametermanager.parameters.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "parametermanager.parameters.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "paymentsresellersubscription.products.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "paymentsresellersubscription.promotions.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "paymentsresellersubscription.subscriptions.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "paymentsresellersubscription.subscriptions.extend",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "paymentsresellersubscription.subscriptions.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "paymentsresellersubscription.subscriptions.provision",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "paymentsresellersubscription.subscriptions.resume",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "paymentsresellersubscription.subscriptions.suspend",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "paymentsresellersubscription.subscriptions.undoCancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "paymentsresellersubscription.userSessions.generate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "policyanalyzer.resourceAuthorizationActivities.query",
    "stage": "BETA",
    "title": "Query resource authorization activities."
  },
  {
    "apiDisabled": true,
    "name": "policyanalyzer.serviceAccountKeyLastAuthenticationActivities.query",
    "stage": "BETA",
    "title": "Query service account key last authentication activities."
  },
  {
    "apiDisabled": true,
    "name": "policyanalyzer.serviceAccountLastAuthenticationActivities.query",
    "stage": "BETA",
    "title": "Query service account last authentication activities."
  },
  {
    "apiDisabled": true,
    "name": "policysimulator.accessPolicySimulationResults.list",
    "stage": "BETA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "policysimulator.accessPolicySimulations.create",
    "stage": "BETA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "policysimulator.accessPolicySimulations.get",
    "stage": "BETA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "policysimulator.accessPolicySimulations.list",
    "stage": "BETA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "policysimulator.orgPolicyViolations.list",
    "stage": "BETA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "policysimulator.orgPolicyViolationsPreviews.create",
    "stage": "BETA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "policysimulator.orgPolicyViolationsPreviews.get",
    "stage": "BETA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "policysimulator.orgPolicyViolationsPreviews.list",
    "stage": "BETA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "policysimulator.replayResults.list",
    "stage": "BETA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "policysimulator.replays.create",
    "stage": "BETA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "policysimulator.replays.get",
    "stage": "BETA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "policysimulator.replays.list",
    "stage": "BETA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "policysimulator.replays.run",
    "stage": "BETA",
    "title": "Run"
  },
  {
    "apiDisabled": true,
    "name": "privateca.caPools.create",
    "stage": "GA",
    "title": "Create CaPool"
  },
  {
    "apiDisabled": true,
    "name": "privateca.caPools.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on CaPool"
  },
  {
    "apiDisabled": true,
    "name": "privateca.caPools.delete",
    "stage": "GA",
    "title": "Delete CaPool"
  },
  {
    "apiDisabled": true,
    "name": "privateca.caPools.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on CaPool"
  },
  {
    "apiDisabled": true,
    "name": "privateca.caPools.get",
    "stage": "GA",
    "title": "Get CaPool"
  },
  {
    "apiDisabled": true,
    "name": "privateca.caPools.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on CaPool"
  },
  {
    "apiDisabled": true,
    "name": "privateca.caPools.list",
    "stage": "GA",
    "title": "List CaPools"
  },
  {
    "apiDisabled": true,
    "name": "privateca.caPools.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on CaPool"
  },
  {
    "apiDisabled": true,
    "name": "privateca.caPools.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on CaPool"
  },
  {
    "apiDisabled": true,
    "name": "privateca.caPools.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on CaPool"
  },
  {
    "apiDisabled": true,
    "name": "privateca.caPools.update",
    "stage": "GA",
    "title": "Update CaPool"
  },
  {
    "apiDisabled": true,
    "name": "privateca.caPools.use",
    "stage": "GA",
    "title": "Use CaPool"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateAuthorities.create",
    "stage": "GA",
    "title": "Create CertificateAuthority"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateAuthorities.delete",
    "stage": "GA",
    "title": "Delete CertificateAuthority"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateAuthorities.get",
    "stage": "GA",
    "title": "Get CertificateAuthority"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateAuthorities.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on CertificateAuthority"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateAuthorities.list",
    "stage": "GA",
    "title": "List CertificateAuthorities"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateAuthorities.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on CertificateAuthority"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateAuthorities.update",
    "stage": "GA",
    "title": "Update CertificateAuthority"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateRevocationLists.create",
    "stage": "GA",
    "title": "Create CertificateRevocationList"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateRevocationLists.get",
    "stage": "GA",
    "title": "Get CertificateRevocationList"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateRevocationLists.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on CertificateRevocationList"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateRevocationLists.list",
    "stage": "GA",
    "title": "List CertificateRevocationLists"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateRevocationLists.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on CertificateRevocationList"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateRevocationLists.update",
    "stage": "GA",
    "title": "Update CertificateRevocationList"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateTemplates.create",
    "stage": "GA",
    "title": "Create CertificateTemplate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateTemplates.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on CertificateTemplate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateTemplates.delete",
    "stage": "GA",
    "title": "Delete CertificateTemplate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateTemplates.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on CertificateTemplate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateTemplates.get",
    "stage": "GA",
    "title": "Get CertificateTemplate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateTemplates.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on CertificateTemplate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateTemplates.list",
    "stage": "GA",
    "title": "List CertificateTemplates"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateTemplates.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on CertificateTemplate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateTemplates.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on CertificateTemplate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateTemplates.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on CertificateTemplate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateTemplates.update",
    "stage": "GA",
    "title": "Update CertificateTemplate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificateTemplates.use",
    "stage": "GA",
    "title": "Use CertificateTemplate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificates.create",
    "stage": "GA",
    "title": "Create Certificate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificates.createForSelf",
    "stage": "GA",
    "title": "Create Certificate with caller's identity"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificates.get",
    "stage": "GA",
    "title": "Get Certificate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificates.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Certificate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificates.list",
    "stage": "GA",
    "title": "List Certificates"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificates.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Certificate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.certificates.update",
    "stage": "GA",
    "title": "Update Certificate"
  },
  {
    "apiDisabled": true,
    "name": "privateca.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "privateca.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "privateca.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "privateca.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "privateca.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "privateca.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "privateca.reusableConfigs.create",
    "stage": "GA",
    "title": "Create ReusableConfig"
  },
  {
    "apiDisabled": true,
    "name": "privateca.reusableConfigs.delete",
    "stage": "GA",
    "title": "Delete ReusableConfig"
  },
  {
    "apiDisabled": true,
    "name": "privateca.reusableConfigs.get",
    "stage": "GA",
    "title": "Get ReusableConfig"
  },
  {
    "apiDisabled": true,
    "name": "privateca.reusableConfigs.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on ReusableConfig"
  },
  {
    "apiDisabled": true,
    "name": "privateca.reusableConfigs.list",
    "stage": "GA",
    "title": "List ReusableConfigs"
  },
  {
    "apiDisabled": true,
    "name": "privateca.reusableConfigs.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on ReusableConfig"
  },
  {
    "apiDisabled": true,
    "name": "privateca.reusableConfigs.update",
    "stage": "GA",
    "title": "Update ReusableConfig"
  },
  {
    "name": "privilegedaccessmanager.entitlements.create",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.entitlements.delete",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.entitlements.get",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.entitlements.list",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.entitlements.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.entitlements.update",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.grants.get",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.grants.list",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.grants.revoke",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.locations.checkOnboardingStatus",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.locations.get",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.locations.list",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.operations.delete",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.operations.get",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.operations.list",
    "stage": "GA"
  },
  {
    "name": "privilegedaccessmanager.settings.fetchEffective",
    "stage": "BETA"
  },
  {
    "name": "privilegedaccessmanager.settings.get",
    "stage": "BETA"
  },
  {
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "privilegedaccessmanager.settings.update",
    "onlyInPredefinedRoles": true,
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.attachments.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.attachments.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.attachments.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.attachments.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.attach",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.beacons.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "proximitybeacon.namespaces.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "publicca.externalAccountKeys.create",
    "stage": "BETA",
    "title": "Create a new externalAccountKey resource"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.messageTransforms.validate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.schemas.attach",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.schemas.commit",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.schemas.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.schemas.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.schemas.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.schemas.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.schemas.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.schemas.listRevisions",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.schemas.rollback",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.schemas.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.schemas.validate",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.snapshots.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.snapshots.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "pubsub.snapshots.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "pubsub.snapshots.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.snapshots.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "pubsub.snapshots.seek",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "pubsub.snapshots.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "pubsub.snapshots.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.subscriptions.consume",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.subscriptions.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.subscriptions.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.subscriptions.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.subscriptions.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.subscriptions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.subscriptions.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.subscriptions.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.topics.attachSubscription",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.topics.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.topics.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.topics.detachSubscription",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.topics.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.topics.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.topics.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.topics.publish",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.topics.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.topics.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsub.topics.updateTag",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.locations.openKafkaStream",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.reservations.attachTopic",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.reservations.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.reservations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.reservations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.reservations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.reservations.listTopics",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.reservations.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.subscriptions.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.subscriptions.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.subscriptions.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.subscriptions.getCursor",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.subscriptions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.subscriptions.seek",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.subscriptions.setCursor",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.subscriptions.subscribe",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.subscriptions.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.topics.computeHeadCursor",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.topics.computeMessageStats",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.topics.computeTimeCursor",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.topics.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.topics.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.topics.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.topics.getPartitions",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.topics.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.topics.listSubscriptions",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.topics.publish",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.topics.subscribe",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "pubsublite.topics.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Get reader entitlements",
    "name": "readerrevenuesubscriptionlinking.readerEntitlements.get",
    "stage": "GA",
    "title": "Get reader entitlements"
  },
  {
    "apiDisabled": true,
    "description": "Update reader entitlements",
    "name": "readerrevenuesubscriptionlinking.readerEntitlements.update",
    "stage": "GA",
    "title": "Update reader entitlements"
  },
  {
    "apiDisabled": true,
    "description": "Delete a reader",
    "name": "readerrevenuesubscriptionlinking.readers.delete",
    "stage": "GA",
    "title": "Delete a reader"
  },
  {
    "apiDisabled": true,
    "description": "Get a reader",
    "name": "readerrevenuesubscriptionlinking.readers.get",
    "stage": "GA",
    "title": "Get a reader"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.assessments.annotate",
    "stage": "GA",
    "title": "Annotate assessment"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.assessments.create",
    "stage": "GA",
    "title": "Create assessment"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.firewallpolicies.create",
    "stage": "GA",
    "title": "Create firewall policies"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.firewallpolicies.delete",
    "stage": "GA",
    "title": "Delete firewall policy"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.firewallpolicies.get",
    "stage": "GA",
    "title": "Get firewall policy"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.firewallpolicies.list",
    "stage": "GA",
    "title": "List firewall policies"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.firewallpolicies.update",
    "stage": "GA",
    "title": "Update firewall policy"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.create",
    "stage": "GA",
    "title": "Create key"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on recaptchaenterprise key application"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.delete",
    "stage": "GA",
    "title": "Delete key"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on  recaptchaenterprise key application"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.get",
    "stage": "GA",
    "title": "Get key"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.list",
    "stage": "GA",
    "title": "List keys"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on recaptchaenterprise key application"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on recaptchaenterprise key application"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.retrievelegacysecretkey",
    "stage": "GA",
    "title": "Retrieve legacy secret key"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.keys.update",
    "stage": "GA",
    "title": "Update key"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.metrics.get",
    "stage": "GA",
    "title": "Get metrics"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.projectmetadata.get",
    "stage": "GA",
    "title": "Get project metadata"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.projectmetadata.update",
    "stage": "GA",
    "title": "Update project metadata"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.relatedaccountgroupmemberships.list",
    "stage": "GA",
    "title": "List related account group memberships"
  },
  {
    "apiDisabled": true,
    "name": "recaptchaenterprise.relatedaccountgroups.list",
    "stage": "GA",
    "title": "List related account groups"
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Alloydb Cluster Performance Insight Type.",
    "name": "recommender.alloydbClusterPerformanceInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Alloydb Cluster Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Alloydb Cluster Performance Insight Type.",
    "name": "recommender.alloydbClusterPerformanceInsights.list",
    "stage": "GA",
    "title": "List Insights for the Alloydb Cluster Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Alloydb Cluster Performance Insight Type.",
    "name": "recommender.alloydbClusterPerformanceInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Alloydb Cluster Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Alloydb Cluster Performance Recommender.",
    "name": "recommender.alloydbClusterPerformanceRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendations for the Alloydb Cluster Performance Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Alloydb Cluster Performance Recommender.",
    "name": "recommender.alloydbClusterPerformanceRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Alloydb Cluster Performance Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Alloydb Cluster Performance Recommender.",
    "name": "recommender.alloydbClusterPerformanceRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendations State for the Alloydb Cluster Performance Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Alloydb Cluster Reliability Insight Type.",
    "name": "recommender.alloydbClusterReliabilityInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Alloydb Cluster Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Alloydb Cluster Reliability Insight Type.",
    "name": "recommender.alloydbClusterReliabilityInsights.list",
    "stage": "GA",
    "title": "List Insights for the Alloydb Cluster Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Alloydb Cluster Reliability Insight Type.",
    "name": "recommender.alloydbClusterReliabilityInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Alloydb Cluster Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Alloydb Cluster Reliability Recommender.",
    "name": "recommender.alloydbClusterReliabilityRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendations for the Alloydb Cluster Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Alloydb Cluster Reliability Recommender.",
    "name": "recommender.alloydbClusterReliabilityRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Alloydb Cluster Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Alloydb Cluster Reliability Recommender.",
    "name": "recommender.alloydbClusterReliabilityRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendations State for the Alloydb Cluster Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Alloydb Instance Security Insight Type.",
    "name": "recommender.alloydbInstanceSecurityInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Alloydb Instance Security Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Alloydb Instance Security Insight Type.",
    "name": "recommender.alloydbInstanceSecurityInsights.list",
    "stage": "GA",
    "title": "List Insights for the Alloydb Instance Security Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Alloydb Instance Security Insight Type.",
    "name": "recommender.alloydbInstanceSecurityInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Alloydb Instance Security Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Alloydb Instance Security Recommender.",
    "name": "recommender.alloydbInstanceSecurityRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendations for the Alloydb Instance Security Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Alloydb Instance Security Recommender.",
    "name": "recommender.alloydbInstanceSecurityRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Alloydb Instance Security Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Alloydb Instance Security Recommender.",
    "name": "recommender.alloydbInstanceSecurityRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendations State for the Alloydb Instance Security Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.bigqueryCapacityCommitmentsInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the BigQuery Capacity Commitments Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.bigqueryCapacityCommitmentsInsights.list",
    "stage": "BETA",
    "title": "List Insights for the BigQuery Capacity Commitments Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.bigqueryCapacityCommitmentsInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the BigQuery Capacity Commitments Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.bigqueryCapacityCommitmentsRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the BigQuery CapacityCommitments Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.bigqueryCapacityCommitmentsRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the BigQuery CapacityCommitments Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.bigqueryCapacityCommitmentsRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the BigQuery CapacityCommitments Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Bigquery Materialized View Insight Type.",
    "name": "recommender.bigqueryMaterializedViewInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Bigquery Materialized View Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Bigquery Materialized View Insight Type.",
    "name": "recommender.bigqueryMaterializedViewInsights.list",
    "stage": "GA",
    "title": "List Insights for the Bigquery Materialized View Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Bigquery Materialized View Insight Type.",
    "name": "recommender.bigqueryMaterializedViewInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Bigquery Materialized View Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Bigquery Materialized View Recommender.",
    "name": "recommender.bigqueryMaterializedViewRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendations for the Bigquery Materialized View Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Bigquery Materialized View Recommender.",
    "name": "recommender.bigqueryMaterializedViewRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Bigquery Materialized View Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Bigquery Materialized View Recommender.",
    "name": "recommender.bigqueryMaterializedViewRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendations State for the Bigquery Materialized View Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.bigqueryPartitionClusterRecommendations.get",
    "stage": "BETA",
    "title": "Get BigQuery partitioning and clustering recommendations."
  },
  {
    "apiDisabled": true,
    "name": "recommender.bigqueryPartitionClusterRecommendations.list",
    "stage": "BETA",
    "title": "List BigQuery partitioning and clustering recommendations."
  },
  {
    "apiDisabled": true,
    "name": "recommender.bigqueryPartitionClusterRecommendations.update",
    "stage": "BETA",
    "title": "Update BigQuery partitioning and clustering recommendations."
  },
  {
    "apiDisabled": true,
    "name": "recommender.bigqueryTableStatsInsights.get",
    "stage": "BETA",
    "title": "Get BigQuery table stats insights."
  },
  {
    "apiDisabled": true,
    "name": "recommender.bigqueryTableStatsInsights.list",
    "stage": "BETA",
    "title": "List BigQuery table stats insights."
  },
  {
    "apiDisabled": true,
    "name": "recommender.bigqueryTableStatsInsights.update",
    "stage": "BETA",
    "title": "Update BigQuery table stats insights."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Bigtable Cluster Performance Insight Type.",
    "name": "recommender.bigtableClusterPerformanceInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Bigtable Cluster Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Bigtable Cluster Performance Insight Type.",
    "name": "recommender.bigtableClusterPerformanceInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Bigtable Cluster Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Bigtable Cluster Performance Insight Type.",
    "name": "recommender.bigtableClusterPerformanceInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Bigtable Cluster Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Bigtable Cluster Performance Recommender.",
    "name": "recommender.bigtableClusterPerformanceRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Bigtable Cluster Performance Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Bigtable Cluster Performance Recommender.",
    "name": "recommender.bigtableClusterPerformanceRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Bigtable Cluster Performance Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Bigtable Cluster Performance Recommender.",
    "name": "recommender.bigtableClusterPerformanceRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Bigtable Cluster Performance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudAssetInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Cloud Asset Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudAssetInsights.list",
    "stage": "GA",
    "title": "List Insights for the Cloud Asset Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudAssetInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Cloud Asset Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Cloud Cost General Insight Type.",
    "name": "recommender.cloudCostGeneralInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud Cost General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Cloud Cost General Insight Type.",
    "name": "recommender.cloudCostGeneralInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud Cost General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Cloud Cost General Insight Type.",
    "name": "recommender.cloudCostGeneralInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud Cost General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Cloud Cost General Recommender.",
    "name": "recommender.cloudCostGeneralRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Cloud Cost General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Cloud Cost General Recommender.",
    "name": "recommender.cloudCostGeneralRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Cloud Cost General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Cloud Cost General Recommender.",
    "name": "recommender.cloudCostGeneralRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Cloud Cost General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Cloud Deprecation General Insight Type.",
    "name": "recommender.cloudDeprecationGeneralInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud Deprecation General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Cloud Deprecation General Insight Type.",
    "name": "recommender.cloudDeprecationGeneralInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud Deprecation General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Cloud Deprecation General Insight Type.",
    "name": "recommender.cloudDeprecationGeneralInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud Deprecation General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Cloud Deprecation General Recommender.",
    "name": "recommender.cloudDeprecationGeneralRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Cloud Deprecation General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Cloud Deprecation General Recommender.",
    "name": "recommender.cloudDeprecationGeneralRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Cloud Deprecation General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Cloud Deprecation General Recommender.",
    "name": "recommender.cloudDeprecationGeneralRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Cloud Deprecation General Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudFunctionsPerformanceInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Cloud Function Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudFunctionsPerformanceInsights.list",
    "stage": "GA",
    "title": "List Insights for the Cloud Function Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudFunctionsPerformanceInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Cloud Function Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudFunctionsPerformanceRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendations for the Cloud Function Performance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudFunctionsPerformanceRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Cloud Function Performance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudFunctionsPerformanceRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendations State for the Cloud Function Performance Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Cloud Manageability General Insight Type.",
    "name": "recommender.cloudManageabilityGeneralInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud Manageability General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Cloud Manageability General Insight Type.",
    "name": "recommender.cloudManageabilityGeneralInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud Manageability General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Cloud Manageability General Insight Type.",
    "name": "recommender.cloudManageabilityGeneralInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud Manageability General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Cloud Manageability General Recommender.",
    "name": "recommender.cloudManageabilityGeneralRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Cloud Manageability General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Cloud Manageability General Recommender.",
    "name": "recommender.cloudManageabilityGeneralRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Cloud Manageability General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Cloud Manageability General Recommender.",
    "name": "recommender.cloudManageabilityGeneralRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Cloud Manageability General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Cloud Performance General Insight Type.",
    "name": "recommender.cloudPerformanceGeneralInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud Performance General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Cloud Performance General Insight Type.",
    "name": "recommender.cloudPerformanceGeneralInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud Performance General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Cloud Performance General Insight Type.",
    "name": "recommender.cloudPerformanceGeneralInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud Performance General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Cloud Performance General Recommender.",
    "name": "recommender.cloudPerformanceGeneralRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Cloud Performance General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Cloud Performance General Recommender.",
    "name": "recommender.cloudPerformanceGeneralRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Cloud Performance General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Cloud Performance General Recommender.",
    "name": "recommender.cloudPerformanceGeneralRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Cloud Performance General Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudRecentChangeInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Cloud RecentChange Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudRecentChangeInsights.list",
    "stage": "GA",
    "title": "List Insights for the Cloud RecentChange Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudRecentChangeInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Cloud RecentChange Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudRecentChangeRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendations for the Cloud RecentChange Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudRecentChangeRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Cloud RecentChange Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudRecentChangeRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendations State for the Cloud RecentChange Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudRecentChangeRecommenderConfig.get",
    "stage": "GA",
    "title": "Get RecommenderConfig for the Cloud RecentChange Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudRecentChangeRecommenderConfig.update",
    "stage": "GA",
    "title": "Update RecommenderConfig State for the Cloud RecentChange Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Cloud Reliability General Insight Type.",
    "name": "recommender.cloudReliabilityGeneralInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud Reliability General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Cloud Reliability General Insight Type.",
    "name": "recommender.cloudReliabilityGeneralInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud Reliability General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Cloud Reliability General Insight Type.",
    "name": "recommender.cloudReliabilityGeneralInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud Reliability General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Cloud Reliability General Recommender.",
    "name": "recommender.cloudReliabilityGeneralRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Cloud Reliability General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Cloud Reliability General Recommender.",
    "name": "recommender.cloudReliabilityGeneralRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Cloud Reliability General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Cloud Reliability General Recommender.",
    "name": "recommender.cloudReliabilityGeneralRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Cloud Reliability General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Cloud Security General Insight Type.",
    "name": "recommender.cloudSecurityGeneralInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud Security General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Cloud Security General Insight Type.",
    "name": "recommender.cloudSecurityGeneralInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud Security General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Cloud Security General Insight Type.",
    "name": "recommender.cloudSecurityGeneralInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud Security General Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Cloud Security General Recommender.",
    "name": "recommender.cloudSecurityGeneralRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Cloud Security General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Cloud Security General Recommender.",
    "name": "recommender.cloudSecurityGeneralRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Cloud Security General Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Cloud Security General Recommender.",
    "name": "recommender.cloudSecurityGeneralRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Cloud Security General Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlIdleInstanceRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendation for the Cloud SQL Idle Instance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlIdleInstanceRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Cloud SQL Idle Instance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlIdleInstanceRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendation State for the Cloud SQL Idle Instance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceActivityInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud SQL Instance Activity Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceActivityInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud SQL Instance Activity Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceActivityInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud SQL Instance Activity Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceCpuUsageInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud SQL Instance CPU Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceCpuUsageInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud SQL Instance CPU Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceCpuUsageInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud SQL Instance CPU Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceDiskUsageTrendInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud SQL Instance Disk Usage Trend Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceDiskUsageTrendInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud SQL Instance Disk Usage Trend Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceDiskUsageTrendInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud SQL Instance Disk Usage Trend Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceMemoryUsageInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud SQL Instance Memory Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceMemoryUsageInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud SQL Instance Memory Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceMemoryUsageInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud SQL Instance Memory Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceOomProbabilityInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud SQL Instance OOM Probability Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceOomProbabilityInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud SQL Instance OOM Probability Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceOomProbabilityInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud SQL Instance OOM Probability Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceOutOfDiskRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendation for the Cloud SQL Instance Out of Disk Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceOutOfDiskRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Cloud SQL Instance Out of Disk Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceOutOfDiskRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendation State for the Cloud SQL Instance Out of Disk Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstancePerformanceInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud SQL Instance Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstancePerformanceInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud SQL Instance Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstancePerformanceInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud SQL Instance Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstancePerformanceRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendation for the Cloud SQL Instance Performance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstancePerformanceRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Cloud SQL Instance Performance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstancePerformanceRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendation State for the Cloud SQL Instance Performance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceReliabilityInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloudsql Instance Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceReliabilityInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloudsql Instance Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceReliabilityInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloudsql Instance Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceReliabilityRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Cloudsql Instance Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceReliabilityRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Cloudsql Instance Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceReliabilityRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Cloudsql Instance Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceSecurityInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Cloud SQL Instance Security Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceSecurityInsights.list",
    "stage": "GA",
    "title": "List Insights for the Cloud SQL Instance Security Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceSecurityInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Cloud SQL Instance Security Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceSecurityRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation for the Cloud SQL Instance Security Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceSecurityRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Cloud SQL Instance Security Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceSecurityRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for the Cloud SQL Instance Security Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud SQL Instance Underprovisioned CPU Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud SQL Instance Underprovisioned CPU Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceUnderprovisionedCpuUsageInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud SQL Instance Underprovisioned CPU Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cloud SQL Instance Underprovisioned Memory Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cloud SQL Instance Underprovisioned Memory Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlInstanceUnderprovisionedMemoryUsageInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cloud SQL Instance Underprovisioned Memory Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlOverprovisionedInstanceRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendation for the Cloud SQL Overprovisioned Instance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlOverprovisionedInstanceRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Cloud SQL Overprovisioned Instance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlOverprovisionedInstanceRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendation State for the Cloud SQL Overprovisioned Instance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlUnderProvisionedInstanceRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendation for the Cloud SQL Under Provisioned Instance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlUnderProvisionedInstanceRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Cloud SQL Under Provisioned Instance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.cloudsqlUnderProvisionedInstanceRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendation State for the Cloud SQL Under Provisioned Instance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.commitmentUtilizationInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Commitments Utlization."
  },
  {
    "apiDisabled": true,
    "name": "recommender.commitmentUtilizationInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Commitments Utlization."
  },
  {
    "apiDisabled": true,
    "name": "recommender.commitmentUtilizationInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Commitments Utlization."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeAddressIdleResourceInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Address Idle Resource Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeAddressIdleResourceInsights.list",
    "stage": "GA",
    "title": "List Insights for the Address Idle Resource Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeAddressIdleResourceInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Address Idle Resource Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeAddressIdleResourceRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation for the GCE Address Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeAddressIdleResourceRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the GCE Address Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeAddressIdleResourceRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for the GCE Address Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeDiskIdleResourceInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Disk Idle Resource Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeDiskIdleResourceInsights.list",
    "stage": "GA",
    "title": "List Insights for the Disk Idle Resource Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeDiskIdleResourceInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Disk Idle Resource Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeDiskIdleResourceRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation for the GCE Disk Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeDiskIdleResourceRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the GCE Disk Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeDiskIdleResourceRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for the GCE Disk Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeFirewallInsightTypeConfigs.get",
    "stage": "GA",
    "title": "Get InsightTypeConfig for the Firewall Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeFirewallInsightTypeConfigs.update",
    "stage": "GA",
    "title": "Update InsightTypeConfig for the Firewall Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeFirewallInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Firewall Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeFirewallInsights.list",
    "stage": "GA",
    "title": "List Insights for the Firewall Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeFirewallInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Firewall Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeImageIdleResourceInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Image Idle Resource Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeImageIdleResourceInsights.list",
    "stage": "GA",
    "title": "List Insights for the Image Idle Resource Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeImageIdleResourceInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Image Idle Resource Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeImageIdleResourceRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation for the GCE Image Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeImageIdleResourceRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the GCE Image Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeImageIdleResourceRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for the GCE Image Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceCpuUsageInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Instance CPU Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceCpuUsageInsights.list",
    "stage": "GA",
    "title": "List Insights for the Instance CPU Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceCpuUsageInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Instance CPU Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceCpuUsagePredictionInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Instance CPU Usage Prediction Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceCpuUsagePredictionInsights.list",
    "stage": "GA",
    "title": "List Insights for the Instance CPU Usage Prediction Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceCpuUsagePredictionInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Instance CPU Usage Prediction Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceCpuUsageTrendInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Instance CPU Usage Trend Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceCpuUsageTrendInsights.list",
    "stage": "GA",
    "title": "List Insights for the Instance CPU Usage Trend Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceCpuUsageTrendInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Instance CPU Usage Trend Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerCpuUsageInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Instance Group Manager CPU Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerCpuUsageInsights.list",
    "stage": "GA",
    "title": "List Insights for the Instance Group Manager CPU Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerCpuUsageInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Instance Group Manager CPU Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Instance Group Manager CPU Usage Prediction Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.list",
    "stage": "GA",
    "title": "List Insights for the Instance Group Manager CPU Usage Prediction Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerCpuUsagePredictionInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Instance Group Manager CPU Usage Prediction Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Instance Group Manager CPU Usage Trend Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.list",
    "stage": "GA",
    "title": "List Insights for the Instance Group Manager CPU Usage Trend Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerCpuUsageTrendInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Instance Group Manager CPU Usage Trend Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerMachineTypeRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation for the GCE Instance Group Manager Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerMachineTypeRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the GCE Instance Group Manager Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerMachineTypeRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for the GCE Instance Group Manager Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerMemoryUsageInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Instance Group Manager Memory Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerMemoryUsageInsights.list",
    "stage": "GA",
    "title": "List Insights for the Instance Group Manager Memory Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerMemoryUsageInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Instance Group Manager Memory Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Instance Memory Usage Prediction Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.list",
    "stage": "GA",
    "title": "List Insights for the Instance Memory Usage Prediction Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceGroupManagerMemoryUsagePredictionInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Instance Memory Usage Prediction Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceIdleResourceRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation for the GCE Instance Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceIdleResourceRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the GCE Instance Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceIdleResourceRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for the GCE Instance Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceIdleResourceRecommenderConfig.get",
    "stage": "GA",
    "title": "Get RecommenderConfig for the GCE Instance Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceIdleResourceRecommenderConfig.update",
    "stage": "GA",
    "title": "Update RecommenderConfig State for the GCE Instance Idle Resource Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMachineTypeRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation for the GCE Instance Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMachineTypeRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the GCE Instance Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMachineTypeRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for the GCE Instance Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMachineTypeRecommenderConfig.get",
    "stage": "BETA",
    "title": "Get RecommenderConfig for the GCE Instance Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMachineTypeRecommenderConfig.update",
    "stage": "BETA",
    "title": "Update RecommenderConfig State for the GCE Instance Machine Type Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMemoryUsageInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Instance Memory Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMemoryUsageInsights.list",
    "stage": "GA",
    "title": "List Insights for the Instance Memory Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMemoryUsageInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Instance Memory Usage Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMemoryUsagePredictionInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Instance Memory Usage Prediction Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMemoryUsagePredictionInsights.list",
    "stage": "GA",
    "title": "List Insights for the Instance Memory Usage Prediction Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceMemoryUsagePredictionInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Instance Memory Usage Prediction Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceNetworkThroughputInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Instance Network Throughput Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceNetworkThroughputInsights.list",
    "stage": "GA",
    "title": "List Insights for the Instance Network Throughput Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.computeInstanceNetworkThroughputInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Instance Network Throughput Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.containerDiagnosisInsights.get",
    "stage": "GA",
    "title": "Get Insight for GKE diagnosis."
  },
  {
    "apiDisabled": true,
    "name": "recommender.containerDiagnosisInsights.list",
    "stage": "GA",
    "title": "List Insights for GKE diagnosis."
  },
  {
    "apiDisabled": true,
    "name": "recommender.containerDiagnosisInsights.update",
    "stage": "GA",
    "title": "Update Insight State for GKE diagnosis."
  },
  {
    "apiDisabled": true,
    "name": "recommender.containerDiagnosisRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation for GKE diagnosis."
  },
  {
    "apiDisabled": true,
    "name": "recommender.containerDiagnosisRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for GKE diagnosis."
  },
  {
    "apiDisabled": true,
    "name": "recommender.containerDiagnosisRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation for GKE diagnosis."
  },
  {
    "apiDisabled": true,
    "name": "recommender.costInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Cost Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.costInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Cost Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.costInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Cost Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.dataflowDiagnosticsInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Dataflow Diagnostics Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.dataflowDiagnosticsInsights.list",
    "stage": "GA",
    "title": "List Insights for the Dataflow Diagnostics Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.dataflowDiagnosticsInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Dataflow Diagnostics Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.errorReportingInsights.get",
    "stage": "GA",
    "title": "Get Insight for Cloud Error Reporting."
  },
  {
    "apiDisabled": true,
    "name": "recommender.errorReportingInsights.list",
    "stage": "GA",
    "title": "List Insights for Cloud Error Reporting."
  },
  {
    "apiDisabled": true,
    "name": "recommender.errorReportingInsights.update",
    "stage": "GA",
    "title": "Update Insight State for Cloud Error Reporting."
  },
  {
    "apiDisabled": true,
    "name": "recommender.errorReportingRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation for Cloud Error Reporting."
  },
  {
    "apiDisabled": true,
    "name": "recommender.errorReportingRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for Cloud Error Reporting."
  },
  {
    "apiDisabled": true,
    "name": "recommender.errorReportingRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation for Cloud Error Reporting."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Firestore Database FirebaseRules Insight Type.",
    "name": "recommender.firestoreDatabaseFirebaseRulesInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Firestore Database FirebaseRules Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Firestore Database FirebaseRules Insight Type.",
    "name": "recommender.firestoreDatabaseFirebaseRulesInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Firestore Database FirebaseRules Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Firestore Database FirebaseRules Insight Type.",
    "name": "recommender.firestoreDatabaseFirebaseRulesInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Firestore Database FirebaseRules Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Firestore Database FirebaseRules Recommender.",
    "name": "recommender.firestoreDatabaseFirebaseRulesRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Firestore Database FirebaseRules Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Firestore Database FirebaseRules Recommender.",
    "name": "recommender.firestoreDatabaseFirebaseRulesRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Firestore Database FirebaseRules Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Firestore Database FirebaseRules Recommender.",
    "name": "recommender.firestoreDatabaseFirebaseRulesRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Firestore Database FirebaseRules Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Firestore Database Reliability Insight Type.",
    "name": "recommender.firestoreDatabaseReliabilityInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Firestore Database Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Firestore Database Reliability Insight Type.",
    "name": "recommender.firestoreDatabaseReliabilityInsights.list",
    "stage": "GA",
    "title": "List Insights for the Firestore Database Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Firestore Database Reliability Insight Type.",
    "name": "recommender.firestoreDatabaseReliabilityInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Firestore Database Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Firestore Database Reliability Recommender.",
    "name": "recommender.firestoreDatabaseReliabilityRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendations for the Firestore Database Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Firestore Database Reliability Recommender.",
    "name": "recommender.firestoreDatabaseReliabilityRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Firestore Database Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Firestore Database Reliability Recommender.",
    "name": "recommender.firestoreDatabaseReliabilityRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendations State for the Firestore Database Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpGuidedExperienceInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Google Maps Platform guided experience Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpGuidedExperienceInsights.list",
    "stage": "GA",
    "title": "List Insights for the Google Maps Platform guided experience Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpGuidedExperienceInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Google Maps Platform guided experience Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpGuidedExperienceRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation about a specified Google Maps Platform guided experience suggestion."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpGuidedExperienceRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations about guiding the console experience for Google Maps Platform users."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpGuidedExperienceRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for a Google Maps Platform guided experience recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpProjectManagementInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Google Maps Platform project management Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpProjectManagementInsights.list",
    "stage": "GA",
    "title": "List Insights for the Google Maps Platform project management Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpProjectManagementInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Google Maps Platform project management Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpProjectManagementRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation about the specified Google Maps Platform."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpProjectManagementRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations about the Google Maps Platform."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpProjectManagementRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for the Google Maps Platform recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpProjectProductSuggestionsInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Google Maps Platform product suggestions Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpProjectProductSuggestionsInsights.list",
    "stage": "GA",
    "title": "List Insights for the Google Maps Platform product suggestions Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpProjectProductSuggestionsInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Google Maps Platform product suggestions Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpProjectProductSuggestionsRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation about a specified Google Maps Platform product suggestion."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpProjectProductSuggestionsRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations about Google Maps Platform product suggestions."
  },
  {
    "apiDisabled": true,
    "name": "recommender.gmpProjectProductSuggestionsRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for the Google Maps Platform Product Suggestions recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyChangeRiskInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Iam Policy ChangeRisk Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyChangeRiskInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Iam Policy ChangeRisk Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyChangeRiskInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Iam Policy ChangeRisk Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyChangeRiskRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Iam Policy ChangeRisk Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyChangeRiskRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Iam Policy ChangeRisk Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyChangeRiskRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Iam Policy ChangeRisk Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyInsights.get",
    "stage": "GA",
    "title": "Get Insight for the IAM Policy Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyInsights.list",
    "stage": "GA",
    "title": "List Insights for the IAM Policy Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the IAM Policy Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyLateralMovementInsights.get",
    "stage": "GA",
    "title": "Get Insight for the IAM Policy Lateral Movement Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyLateralMovementInsights.list",
    "stage": "GA",
    "title": "List Insights for the IAM Policy Lateral Movement Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyLateralMovementInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the IAM Policy Lateral Movement Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendation for the IAM Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the IAM Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendation State for the IAM Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyRecommenderConfig.get",
    "stage": "GA",
    "title": "Get RecommenderConfig for the IAM Policy Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamPolicyRecommenderConfig.update",
    "stage": "GA",
    "title": "Update RecommenderConfig State for the IAM Policy Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamServiceAccountChangeRiskInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Iam ServiceAccount ChangeRisk Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamServiceAccountChangeRiskInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Iam ServiceAccount ChangeRisk Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamServiceAccountChangeRiskInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Iam ServiceAccount ChangeRisk Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamServiceAccountChangeRiskRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Iam ServiceAccount ChangeRisk Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamServiceAccountChangeRiskRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Iam ServiceAccount ChangeRisk Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamServiceAccountChangeRiskRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Iam ServiceAccount ChangeRisk Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamServiceAccountInsights.get",
    "stage": "GA",
    "title": "Get Insight for the IAM Service Account Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamServiceAccountInsights.list",
    "stage": "GA",
    "title": "List Insights for the IAM Service Account Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.iamServiceAccountInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the IAM Service Account Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "recommender.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "recommender.loggingProductSuggestionContainerInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the GKE Logging Product Suggestion Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.loggingProductSuggestionContainerInsights.list",
    "stage": "BETA",
    "title": "List Insights for the GKE Logging Product Suggestion Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.loggingProductSuggestionContainerInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the GKE Logging Product Suggestion Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.loggingProductSuggestionContainerRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendation for the GKE Logging Product Suggestion Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.loggingProductSuggestionContainerRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the GKE Logging Product Suggestion Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.loggingProductSuggestionContainerRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendation State for the GKE Logging Product Suggestion Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Memorystore Manageability Insight Type.",
    "name": "recommender.memorystoreManageabilityInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Memorystore Manageability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Memorystore Manageability Insight Type.",
    "name": "recommender.memorystoreManageabilityInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Memorystore Manageability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Memorystore Manageability Insight Type.",
    "name": "recommender.memorystoreManageabilityInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Memorystore Manageability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Memorystore Manageability Recommender.",
    "name": "recommender.memorystoreManageabilityRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Memorystore Manageability Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Memorystore Manageability Recommender.",
    "name": "recommender.memorystoreManageabilityRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Memorystore Manageability Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Memorystore Manageability Recommender.",
    "name": "recommender.memorystoreManageabilityRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Memorystore Manageability Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Memorystore Performance Insight Type.",
    "name": "recommender.memorystorePerformanceInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Memorystore Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Memorystore Performance Insight Type.",
    "name": "recommender.memorystorePerformanceInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Memorystore Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Memorystore Performance Insight Type.",
    "name": "recommender.memorystorePerformanceInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Memorystore Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Memorystore Performance Recommender.",
    "name": "recommender.memorystorePerformanceRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Memorystore Performance Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Memorystore Performance Recommender.",
    "name": "recommender.memorystorePerformanceRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Memorystore Performance Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Memorystore Performance Recommender.",
    "name": "recommender.memorystorePerformanceRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Memorystore Performance Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Memorystore Reliability Insight Type.",
    "name": "recommender.memorystoreReliabilityInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Memorystore Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Memorystore Reliability Insight Type.",
    "name": "recommender.memorystoreReliabilityInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Memorystore Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Memorystore Reliability Insight Type.",
    "name": "recommender.memorystoreReliabilityInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Memorystore Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Memorystore Reliability Recommender.",
    "name": "recommender.memorystoreReliabilityRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Memorystore Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Memorystore Reliability Recommender.",
    "name": "recommender.memorystoreReliabilityRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Memorystore Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Memorystore Reliability Recommender.",
    "name": "recommender.memorystoreReliabilityRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Memorystore Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Memorystore Utilization Insight Type.",
    "name": "recommender.memorystoreUtilizationInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Memorystore Utilization Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Memorystore Utilization Insight Type.",
    "name": "recommender.memorystoreUtilizationInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Memorystore Utilization Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Memorystore Utilization Insight Type.",
    "name": "recommender.memorystoreUtilizationInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Memorystore Utilization Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.monitoringProductSuggestionComputeInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the GCE Monitoring Product Suggestion Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.monitoringProductSuggestionComputeInsights.list",
    "stage": "BETA",
    "title": "List Insights for the GCE Monitoring Product Suggestion Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.monitoringProductSuggestionComputeInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the GCE Monitoring Product Suggestion Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.monitoringProductSuggestionComputeRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendation for the GCE Monitoring Product Suggestion Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.monitoringProductSuggestionComputeRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the GCE Monitoring Product Suggestion Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.monitoringProductSuggestionComputeRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendation State for the GCE Monitoring Product Suggestion Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerCloudSqlInsights.get",
    "stage": "GA",
    "title": "Get Insight for Network Analyzer Cloud SQL Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerCloudSqlInsights.list",
    "stage": "GA",
    "title": "List Insights for Network Analyzer Cloud SQL Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerCloudSqlInsights.update",
    "stage": "GA",
    "title": "Update Insight State for Network Analyzer Cloud SQL Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerDynamicRouteInsights.get",
    "stage": "GA",
    "title": "Get Insight for Network Analyzer Dynamic Route Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerDynamicRouteInsights.list",
    "stage": "GA",
    "title": "List Insights for Network Analyzer Dynamic Route Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerDynamicRouteInsights.update",
    "stage": "GA",
    "title": "Update Insight State for Network Analyzer Dynamic Route Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerGkeConnectivityInsights.get",
    "stage": "GA",
    "title": "Get Insight for Network Analyzer GKE Connectivity Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerGkeConnectivityInsights.list",
    "stage": "GA",
    "title": "List Insights for Network Analyzer GKE Connectivity Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerGkeConnectivityInsights.update",
    "stage": "GA",
    "title": "Update Insight State for Network Analyzer GKE Connectivity Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerGkeIpAddressInsights.get",
    "stage": "GA",
    "title": "Get Insight for Network Analyzer GKE IP Address Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerGkeIpAddressInsights.list",
    "stage": "GA",
    "title": "List Insights for Network Analyzer GKE IP Address Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerGkeIpAddressInsights.update",
    "stage": "GA",
    "title": "Update Insight State for Network Analyzer GKE IP Address Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for Network Analyzer GKE Service Account Insights Insight Type.",
    "name": "recommender.networkAnalyzerGkeServiceAccountInsights.get",
    "stage": "GA",
    "title": "Get Insight for Network Analyzer GKE Service Account Insights Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for Network Analyzer GKE Service Account Insights Insight Type.",
    "name": "recommender.networkAnalyzerGkeServiceAccountInsights.list",
    "stage": "GA",
    "title": "List Insights for Network Analyzer GKE Service Account Insights Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for Network Analyzer GKE Service Account Insights Insight Type.",
    "name": "recommender.networkAnalyzerGkeServiceAccountInsights.update",
    "stage": "GA",
    "title": "Update Insight State for Network Analyzer GKE Service Account Insights Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerIpAddressInsights.get",
    "stage": "GA",
    "title": "Get Insight for Network Analyzer IP Address Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerIpAddressInsights.list",
    "stage": "GA",
    "title": "List Insights for Network Analyzer IP Address Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerIpAddressInsights.update",
    "stage": "GA",
    "title": "Update Insight State for Network Analyzer IP Address Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerLoadBalancerInsights.get",
    "stage": "GA",
    "title": "Get Insight for Network Analyzer Load Balancer Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerLoadBalancerInsights.list",
    "stage": "GA",
    "title": "List Insights for Network Analyzer Load Balancer Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerLoadBalancerInsights.update",
    "stage": "GA",
    "title": "Update Insight State for Network Analyzer Load Balancer Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerVpcConnectivityInsights.get",
    "stage": "GA",
    "title": "Get Insight for Network Analyzer VPC Connectivity Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerVpcConnectivityInsights.list",
    "stage": "GA",
    "title": "List Insights for Network Analyzer VPC Connectivity Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.networkAnalyzerVpcConnectivityInsights.update",
    "stage": "GA",
    "title": "Update Insight State for Network Analyzer VPC Connectivity Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Org Policy Insight Type.",
    "name": "recommender.orgPolicyInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Org Policy Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Org Policy Insight Type.",
    "name": "recommender.orgPolicyInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Org Policy Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Org Policy Insight Type.",
    "name": "recommender.orgPolicyInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Org Policy Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Org Policy Recommender.",
    "name": "recommender.orgPolicyRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Org Policy Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Org Policy Recommender.",
    "name": "recommender.orgPolicyRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Org Policy Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Org Policy Recommender.",
    "name": "recommender.orgPolicyRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Org Policy Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectChangeRiskInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Resourcemanager Project ChangeRisk Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectChangeRiskInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Resourcemanager Project ChangeRisk Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectChangeRiskInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Resourcemanager Project ChangeRisk Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectChangeRiskRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Resourcemanager Project ChangeRisk Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectChangeRiskRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Resourcemanager Project ChangeRisk Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectChangeRiskRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Resourcemanager Project ChangeRisk Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.get",
    "stage": "GA",
    "title": "Get InsightTypeConfig for the Project Utilization Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectUtilizationInsightTypeConfigs.update",
    "stage": "GA",
    "title": "Update InsightTypeConfig for the Project Utilization Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectUtilizationInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Project Utilization Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectUtilizationInsights.list",
    "stage": "GA",
    "title": "List Insights for the Project Utilization Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectUtilizationInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Project Utilization Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectUtilizationRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendations for the Project Utilization Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectUtilizationRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Project Utilization Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectUtilizationRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendations State for the Project Utilization Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.get",
    "stage": "GA",
    "title": "Get RecommenderConfig for the Project Utilization Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerProjectUtilizationRecommenderConfigs.update",
    "stage": "GA",
    "title": "Update RecommenderConfig for the Project Utilization Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerServiceLimitInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Service Limit Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerServiceLimitInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Service Limit Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerServiceLimitInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Service Limit Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerServiceLimitRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendation for the Service Limit Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerServiceLimitRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Service Limit Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.resourcemanagerServiceLimitRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendation State for the Service Limit Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceCostInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Cloud Run Service Cost Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceCostInsights.list",
    "stage": "GA",
    "title": "List Insights for the Cloud Run Service Cost Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceCostInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Cloud Run Service Cost Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceCostRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendations for the Cloud Run Service Cost Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceCostRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Cloud Run Service Cost Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceCostRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendations State for the Cloud Run Service Cost Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceIdentityInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Cloud Run Service Identity Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceIdentityInsights.list",
    "stage": "GA",
    "title": "List Insights for the Cloud Run Service Identity Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceIdentityInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Cloud Run Service Identity Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceIdentityRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendations for the Cloud Run Service Identity Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceIdentityRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Cloud Run Service Identity Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceIdentityRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendations State for the Cloud Run Service Identity Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Run Service Performance Insight Type.",
    "name": "recommender.runServicePerformanceInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Run Service Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Run Service Performance Insight Type.",
    "name": "recommender.runServicePerformanceInsights.list",
    "stage": "GA",
    "title": "List Insights for the Run Service Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Run Service Performance Insight Type.",
    "name": "recommender.runServicePerformanceInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Run Service Performance Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Run Service Performance Recommender.",
    "name": "recommender.runServicePerformanceRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendations for the Run Service Performance Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Run Service Performance Recommender.",
    "name": "recommender.runServicePerformanceRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Run Service Performance Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Run Service Performance Recommender.",
    "name": "recommender.runServicePerformanceRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendations State for the Run Service Performance Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceSecurityInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Cloud Run Service Security Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceSecurityInsights.list",
    "stage": "GA",
    "title": "List Insights for the Cloud Run Service Security Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceSecurityInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Cloud Run Service Security Insight Type."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceSecurityRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendations for the Cloud Run Service Security Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceSecurityRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Cloud Run Service Security Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.runServiceSecurityRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendations State for the Cloud Run Service Security Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Spanner Database Security Insight Type.",
    "name": "recommender.spannerDatabaseSecurityInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Spanner Database Security Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Spanner Database Security Insight Type.",
    "name": "recommender.spannerDatabaseSecurityInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Spanner Database Security Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Spanner Database Security Insight Type.",
    "name": "recommender.spannerDatabaseSecurityInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Spanner Database Security Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Spanner Database Security Recommender.",
    "name": "recommender.spannerDatabaseSecurityRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Spanner Database Security Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Spanner Database Security Recommender.",
    "name": "recommender.spannerDatabaseSecurityRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Spanner Database Security Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Spanner Database Security Recommender.",
    "name": "recommender.spannerDatabaseSecurityRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Spanner Database Security Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Spanner Project Reliability Insight Type.",
    "name": "recommender.spannerProjectReliabilityInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Spanner Project Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Spanner Project Reliability Insight Type.",
    "name": "recommender.spannerProjectReliabilityInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Spanner Project Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Spanner Project Reliability Insight Type.",
    "name": "recommender.spannerProjectReliabilityInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Spanner Project Reliability Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Spanner Project Reliability Recommender.",
    "name": "recommender.spannerProjectReliabilityRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendations for the Spanner Project Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Spanner Project Reliability Recommender.",
    "name": "recommender.spannerProjectReliabilityRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Spanner Project Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Spanner Project Reliability Recommender.",
    "name": "recommender.spannerProjectReliabilityRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendations State for the Spanner Project Reliability Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.spendBasedCommitmentInsights.get",
    "stage": "BETA",
    "title": "Get Insight for the Spend Based Commitments Utilization."
  },
  {
    "apiDisabled": true,
    "name": "recommender.spendBasedCommitmentInsights.list",
    "stage": "BETA",
    "title": "List Insights for the Spend Based Commitments Utilization."
  },
  {
    "apiDisabled": true,
    "name": "recommender.spendBasedCommitmentInsights.update",
    "stage": "BETA",
    "title": "Update Insight State for the Spend Based Commitments Utilization."
  },
  {
    "apiDisabled": true,
    "name": "recommender.spendBasedCommitmentRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendation for the Spend Based Commitments."
  },
  {
    "apiDisabled": true,
    "name": "recommender.spendBasedCommitmentRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Spend Based Commitments."
  },
  {
    "apiDisabled": true,
    "name": "recommender.spendBasedCommitmentRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendation State for the Spend Based Commitments."
  },
  {
    "apiDisabled": true,
    "name": "recommender.spendBasedCommitmentRecommenderConfig.get",
    "stage": "BETA",
    "title": "Get RecommenderConfig for the Spend Based Commitments Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.spendBasedCommitmentRecommenderConfig.update",
    "stage": "BETA",
    "title": "Update RecommenderConfig State for the Spend Based Commitments Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Get Insight for the Storage Bucket SoftDelete Insight Type.",
    "name": "recommender.storageBucketSoftDeleteInsights.get",
    "stage": "GA",
    "title": "Get Insight for the Storage Bucket SoftDelete Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "List Insights for the Storage Bucket SoftDelete Insight Type.",
    "name": "recommender.storageBucketSoftDeleteInsights.list",
    "stage": "GA",
    "title": "List Insights for the Storage Bucket SoftDelete Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Update Insight State for the Storage Bucket SoftDelete Insight Type.",
    "name": "recommender.storageBucketSoftDeleteInsights.update",
    "stage": "GA",
    "title": "Update Insight State for the Storage Bucket SoftDelete Insight Type."
  },
  {
    "apiDisabled": true,
    "description": "Get Recommendations for the Storage Bucket SoftDelete Recommender.",
    "name": "recommender.storageBucketSoftDeleteRecommendations.get",
    "stage": "GA",
    "title": "Get Recommendations for the Storage Bucket SoftDelete Recommender."
  },
  {
    "apiDisabled": true,
    "description": "List Recommendations for the Storage Bucket SoftDelete Recommender.",
    "name": "recommender.storageBucketSoftDeleteRecommendations.list",
    "stage": "GA",
    "title": "List Recommendations for the Storage Bucket SoftDelete Recommender."
  },
  {
    "apiDisabled": true,
    "description": "Update Recommendations State for the Storage Bucket SoftDelete Recommender.",
    "name": "recommender.storageBucketSoftDeleteRecommendations.update",
    "stage": "GA",
    "title": "Update Recommendations State for the Storage Bucket SoftDelete Recommender."
  },
  {
    "apiDisabled": true,
    "name": "recommender.usageCommitmentRecommendations.get",
    "stage": "BETA",
    "title": "Get Recommendation for the Usage Commitments."
  },
  {
    "apiDisabled": true,
    "name": "recommender.usageCommitmentRecommendations.list",
    "stage": "BETA",
    "title": "List Recommendations for the Usage Commitments."
  },
  {
    "apiDisabled": true,
    "name": "recommender.usageCommitmentRecommendations.update",
    "stage": "BETA",
    "title": "Update Recommendation State for the Usage Commitments."
  },
  {
    "apiDisabled": true,
    "name": "redis.backupCollections.create",
    "stage": "GA",
    "title": "Create Backup Collection"
  },
  {
    "apiDisabled": true,
    "name": "redis.backupCollections.delete",
    "stage": "GA",
    "title": "Delete Backup Collection"
  },
  {
    "apiDisabled": true,
    "name": "redis.backupCollections.get",
    "stage": "GA",
    "title": "Get Backup Collection"
  },
  {
    "apiDisabled": true,
    "name": "redis.backupCollections.list",
    "stage": "GA",
    "title": "List Backup Collections"
  },
  {
    "apiDisabled": true,
    "name": "redis.backups.create",
    "stage": "GA",
    "title": "Create Backup"
  },
  {
    "apiDisabled": true,
    "name": "redis.backups.delete",
    "stage": "GA",
    "title": "Delete Backup"
  },
  {
    "apiDisabled": true,
    "name": "redis.backups.export",
    "stage": "GA",
    "title": "Export Backup"
  },
  {
    "apiDisabled": true,
    "name": "redis.backups.get",
    "stage": "GA",
    "title": "Get Backup"
  },
  {
    "apiDisabled": true,
    "name": "redis.backups.list",
    "stage": "GA",
    "title": "List Backups"
  },
  {
    "apiDisabled": true,
    "name": "redis.clusters.backup",
    "stage": "GA",
    "title": "Backup Redis Cluster"
  },
  {
    "apiDisabled": true,
    "name": "redis.clusters.connect",
    "stage": "BETA",
    "title": "Connect and access Redis Cluster"
  },
  {
    "apiDisabled": true,
    "name": "redis.clusters.create",
    "stage": "BETA",
    "title": "Create Cluster"
  },
  {
    "apiDisabled": true,
    "name": "redis.clusters.delete",
    "stage": "BETA",
    "title": "Delete Cluster"
  },
  {
    "apiDisabled": true,
    "name": "redis.clusters.get",
    "stage": "BETA",
    "title": "Get Cluster"
  },
  {
    "apiDisabled": true,
    "name": "redis.clusters.list",
    "stage": "BETA",
    "title": "List Clusters"
  },
  {
    "apiDisabled": true,
    "name": "redis.clusters.update",
    "stage": "BETA",
    "title": "Update Cluster"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.create",
    "stage": "GA",
    "title": "Create Instances"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.delete",
    "stage": "GA",
    "title": "Delete Instance"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.export",
    "stage": "GA",
    "title": "Take Snapshot"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.failover",
    "stage": "GA",
    "title": "Failover Instance"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.get",
    "stage": "GA",
    "title": "Get Instance"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.getAuthString",
    "stage": "GA",
    "title": "Get Instance AUTH string"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.import",
    "stage": "GA",
    "title": "Load Redis DB from Snapshot"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.list",
    "stage": "GA",
    "title": "List Instances"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.rescheduleMaintenance",
    "stage": "GA",
    "title": "Reschedule upcoming maintenance"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.update",
    "stage": "GA",
    "title": "Update Instance"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.updateAuth",
    "stage": "GA",
    "title": "Update Instance AUTH status"
  },
  {
    "apiDisabled": true,
    "name": "redis.instances.upgrade",
    "stage": "GA",
    "title": "Upgrade Instance"
  },
  {
    "apiDisabled": true,
    "name": "redis.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "redis.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "redis.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "redis.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "redis.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "redis.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.actions.create",
    "stage": "BETA",
    "title": "Create Action"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.actions.delete",
    "stage": "BETA",
    "title": "Delete Action"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.actions.get",
    "stage": "BETA",
    "title": "Get Action"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.actions.set",
    "stage": "BETA",
    "title": "Set Action Result"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.actions.update",
    "stage": "BETA",
    "title": "Update Action"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.blobs.create",
    "stage": "BETA",
    "title": "Create Blob"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.blobs.get",
    "stage": "BETA",
    "title": "Get Blob"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.botsessions.create",
    "stage": "BETA",
    "title": "Create Bot Session"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.botsessions.update",
    "stage": "BETA",
    "title": "Update Bot Session"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.instances.create",
    "stage": "BETA",
    "title": "Create Instance"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.instances.delete",
    "stage": "BETA",
    "title": "Delete Instance"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.instances.get",
    "stage": "BETA",
    "title": "Get Instance"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.instances.list",
    "stage": "BETA",
    "title": "List Instances"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.instances.update",
    "stage": "BETA",
    "title": "Update Instance"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.logstreams.create",
    "stage": "BETA",
    "title": "Create Logstream"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.logstreams.get",
    "stage": "BETA",
    "title": "Get Logstream"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.logstreams.update",
    "stage": "BETA",
    "title": "Update Logstream"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.workerpools.create",
    "stage": "BETA",
    "title": "Create Worker Pool"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.workerpools.delete",
    "stage": "BETA",
    "title": "Delete Worker Pool"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.workerpools.get",
    "stage": "BETA",
    "title": "Get Worker Pool"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.workerpools.list",
    "stage": "BETA",
    "title": "List Worker Pools"
  },
  {
    "apiDisabled": true,
    "name": "remotebuildexecution.workerpools.update",
    "stage": "BETA",
    "title": "Update Worker Pool"
  },
  {
    "name": "resourcemanager.hierarchyNodes.createTagBinding",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.hierarchyNodes.deleteTagBinding",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.hierarchyNodes.listEffectiveTags",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.hierarchyNodes.listTagBindings",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.createBillingAssignment",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "resourcemanager.projects.createPolicyBinding",
    "stage": "GA",
    "title": "Create IAM Policy Binding on Project"
  },
  {
    "name": "resourcemanager.projects.delete",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.deleteBillingAssignment",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "resourcemanager.projects.deletePolicyBinding",
    "stage": "GA",
    "title": "Delete IAM Policy Binding on Project"
  },
  {
    "name": "resourcemanager.projects.get",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.move",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "resourcemanager.projects.searchPolicyBinding",
    "primaryPermission": "resourcemanager.projects.searchPolicyBindings",
    "stage": "GA",
    "title": "Search IAM Policy Bindings on Project"
  },
  {
    "apiDisabled": true,
    "name": "resourcemanager.projects.searchPolicyBindings",
    "stage": "GA",
    "title": "Search IAM Policy Bindings on Project"
  },
  {
    "name": "resourcemanager.projects.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.undelete",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.update",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.projects.updateLiens",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "resourcemanager.projects.updatePolicyBinding",
    "stage": "GA",
    "title": "Update IAM Policy Binding on Project"
  },
  {
    "name": "resourcemanager.resourceTagBindings.create",
    "primaryPermission": "resourcemanager.hierarchyNodes.createTagBinding",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.resourceTagBindings.delete",
    "primaryPermission": "resourcemanager.hierarchyNodes.deleteTagBinding",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.resourceTagBindings.list",
    "primaryPermission": "resourcemanager.hierarchyNodes.listTagBindings",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagHolds.create",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagHolds.delete",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagHolds.list",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagKeys.create",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagKeys.delete",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagKeys.get",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagKeys.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagKeys.list",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagKeys.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagKeys.update",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagValueBindings.create",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagValueBindings.delete",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagValues.create",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagValues.delete",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagValues.get",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagValues.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagValues.list",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagValues.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "resourcemanager.tagValues.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "resourcesettings.settings.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "resourcesettings.settings.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "resourcesettings.settings.update",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "description": "Get a project alert config",
    "name": "retail.alertConfigs.get",
    "stage": "BETA",
    "title": "Get project alert config"
  },
  {
    "description": "Update a project alert config",
    "name": "retail.alertConfigs.update",
    "stage": "BETA",
    "title": "Update project alert config"
  },
  {
    "apiDisabled": true,
    "description": "Add a catalog attribute to attributes config",
    "name": "retail.attributesConfigs.addCatalogAttribute",
    "stage": "GA",
    "title": "Add catalog attribute"
  },
  {
    "description": "Delete a batch of catalog attribute",
    "name": "retail.attributesConfigs.batchRemoveCatalogAttributes",
    "stage": "BETA",
    "title": "Batch remove catalog attribute"
  },
  {
    "description": "Export catalog attributes under an attributes config",
    "name": "retail.attributesConfigs.exportCatalogAttributes",
    "stage": "BETA",
    "title": "Export catalog attributes"
  },
  {
    "apiDisabled": true,
    "description": "Get a catalog attributes config",
    "name": "retail.attributesConfigs.get",
    "stage": "GA",
    "title": "Get catalog attributes config"
  },
  {
    "description": "Import catalog attributes to attributes config",
    "name": "retail.attributesConfigs.importCatalogAttributes",
    "stage": "BETA",
    "title": "Import catalog attributes"
  },
  {
    "apiDisabled": true,
    "description": "Delete a catalog attribute",
    "name": "retail.attributesConfigs.removeCatalogAttribute",
    "stage": "GA",
    "title": "Delete catalog attribute"
  },
  {
    "apiDisabled": true,
    "description": "Replace a catalog attribute with updated properties",
    "name": "retail.attributesConfigs.replaceCatalogAttribute",
    "stage": "GA",
    "title": "Replace catalog attribute"
  },
  {
    "apiDisabled": true,
    "description": "Update a catalog attributes config. Individual CatalogAttributes can be created, modifed, or deleted with this permission.",
    "name": "retail.attributesConfigs.update",
    "stage": "GA",
    "title": "Update catalog attributes config"
  },
  {
    "description": "Get a branch",
    "name": "retail.branches.get",
    "stage": "BETA",
    "title": "Get branch"
  },
  {
    "description": "List branches",
    "name": "retail.branches.list",
    "stage": "BETA",
    "title": "List branches"
  },
  {
    "description": "Get completion within catalog",
    "name": "retail.catalogs.completeQuery",
    "stage": "BETA",
    "title": "Get completion within catalog"
  },
  {
    "apiDisabled": true,
    "description": "Export analytics metrics",
    "name": "retail.catalogs.exportAnalyticsMetrics",
    "stage": "GA",
    "title": "Export analytics metrics"
  },
  {
    "apiDisabled": true,
    "description": "Get a catalog",
    "name": "retail.catalogs.get",
    "stage": "GA",
    "title": "Get catalog"
  },
  {
    "description": "Import data into catalog",
    "name": "retail.catalogs.import",
    "stage": "BETA",
    "title": "Import data into catalog"
  },
  {
    "apiDisabled": true,
    "description": "List catalogs",
    "name": "retail.catalogs.list",
    "stage": "GA",
    "title": "List catalogs"
  },
  {
    "apiDisabled": true,
    "description": "Update catalog",
    "name": "retail.catalogs.update",
    "stage": "GA",
    "title": "Update catalog"
  },
  {
    "apiDisabled": true,
    "description": "Create a control",
    "name": "retail.controls.create",
    "stage": "GA",
    "title": "Create control"
  },
  {
    "apiDisabled": true,
    "description": "Delete a control",
    "name": "retail.controls.delete",
    "stage": "GA",
    "title": "Delete control"
  },
  {
    "description": "Export controls under a catalog or serving config.",
    "name": "retail.controls.export",
    "stage": "BETA",
    "title": "Export controls"
  },
  {
    "apiDisabled": true,
    "description": "Get a control",
    "name": "retail.controls.get",
    "stage": "GA",
    "title": "Get control"
  },
  {
    "description": "Import controls under a catalog or serving config.",
    "name": "retail.controls.import",
    "stage": "BETA",
    "title": "Import controls"
  },
  {
    "apiDisabled": true,
    "description": "List controls under a catalog",
    "name": "retail.controls.list",
    "stage": "GA",
    "title": "List controls under a catalog"
  },
  {
    "apiDisabled": true,
    "description": "Update a control",
    "name": "retail.controls.update",
    "stage": "GA",
    "title": "Update control"
  },
  {
    "description": "Creates an experiment under a catalog",
    "name": "retail.experiments.create",
    "stage": "BETA",
    "title": "Creates an experiment"
  },
  {
    "description": "Delete an experiment under a catalog",
    "name": "retail.experiments.delete",
    "stage": "BETA",
    "title": "Delete experiment"
  },
  {
    "description": "Get an experiment",
    "name": "retail.experiments.get",
    "stage": "BETA",
    "title": "Get experiment"
  },
  {
    "description": "List experiments",
    "name": "retail.experiments.list",
    "stage": "BETA",
    "title": "List experiments"
  },
  {
    "description": "Load the experiment analytics Looker dashboard URL for an experiment",
    "name": "retail.experiments.loadExperimentLookerDashboard",
    "stage": "BETA",
    "title": "Load experiment Looker dashboard"
  },
  {
    "description": "Query the traffic metrics of an Experiment",
    "name": "retail.experiments.queryTrafficMetrics",
    "stage": "BETA",
    "title": "Query experiment traffic metrics"
  },
  {
    "description": "Update an experiment under a catalog",
    "name": "retail.experiments.update",
    "stage": "BETA",
    "title": "Update experiment"
  },
  {
    "description": "Get the merchant config",
    "name": "retail.merchantConfigs.get",
    "stage": "BETA",
    "title": "Get merchant config"
  },
  {
    "description": "Update the merchant config",
    "name": "retail.merchantConfigs.update",
    "stage": "BETA",
    "title": "Update merchant config"
  },
  {
    "description": "Delete a merchant control as an approver",
    "name": "retail.merchantControls.approverDelete",
    "stage": "BETA",
    "title": "Delete merchant control as an approver"
  },
  {
    "description": "Get a merchant control as an approver",
    "name": "retail.merchantControls.approverGet",
    "stage": "BETA",
    "title": "Get merchant control as an approver"
  },
  {
    "description": "List merchant controls under a catalog as an approver",
    "name": "retail.merchantControls.approverList",
    "stage": "BETA",
    "title": "List merchant controls under a catalog as an approver"
  },
  {
    "description": "Update a merchant control as an approver",
    "name": "retail.merchantControls.approverUpdate",
    "stage": "BETA",
    "title": "Update merchant control as an approver"
  },
  {
    "description": "Create a merchant control as a creator",
    "name": "retail.merchantControls.creatorCreate",
    "stage": "BETA",
    "title": "Create merchant control as a creator"
  },
  {
    "description": "Delete a merchant control as a creator",
    "name": "retail.merchantControls.creatorDelete",
    "stage": "BETA",
    "title": "Delete merchant control as a creator"
  },
  {
    "description": "Get a merchant control as a creator",
    "name": "retail.merchantControls.creatorGet",
    "stage": "BETA",
    "title": "Get merchant control as a creator"
  },
  {
    "description": "List merchant controls under a catalog as a creator",
    "name": "retail.merchantControls.creatorList",
    "stage": "BETA",
    "title": "List merchant controls under a catalog as a creator"
  },
  {
    "description": "Submit a merchant control as a creator",
    "name": "retail.merchantControls.creatorSubmit",
    "stage": "BETA",
    "title": "Submit merchant control as a creator"
  },
  {
    "description": "Update a merchant control as a creator",
    "name": "retail.merchantControls.creatorUpdate",
    "stage": "BETA",
    "title": "Update merchant control as a creator"
  },
  {
    "apiDisabled": true,
    "description": "Create a model under a catalog",
    "name": "retail.models.create",
    "stage": "GA",
    "title": "Create recommendation model"
  },
  {
    "apiDisabled": true,
    "description": "Delete a model under a catalog",
    "name": "retail.models.delete",
    "stage": "GA",
    "title": "Delete recommendation model"
  },
  {
    "apiDisabled": true,
    "description": "Get a model under a catalog",
    "name": "retail.models.get",
    "stage": "GA",
    "title": "Get recommendation model"
  },
  {
    "apiDisabled": true,
    "description": "List models under a catalog",
    "name": "retail.models.list",
    "stage": "GA",
    "title": "List recommendation models"
  },
  {
    "apiDisabled": true,
    "description": "Pause a recommendation model under a catalog",
    "name": "retail.models.pause",
    "stage": "GA",
    "title": "Pause recommendation model"
  },
  {
    "apiDisabled": true,
    "description": "Resume a model serving config under a catalog",
    "name": "retail.models.resume",
    "stage": "GA",
    "title": "Resume recommendation model"
  },
  {
    "apiDisabled": true,
    "description": "Tune a model under a catalog",
    "name": "retail.models.tune",
    "stage": "GA",
    "title": "Tune model"
  },
  {
    "apiDisabled": true,
    "description": "Update a model under a catalog",
    "name": "retail.models.update",
    "stage": "GA",
    "title": "Update recommendation model"
  },
  {
    "apiDisabled": true,
    "description": "Get an operation",
    "name": "retail.operations.get",
    "stage": "GA",
    "title": "Get operation"
  },
  {
    "apiDisabled": true,
    "description": "List Operations under a project",
    "name": "retail.operations.list",
    "stage": "GA",
    "title": "List Operations under a project"
  },
  {
    "apiDisabled": true,
    "description": "Get predict results for a placement",
    "name": "retail.placements.predict",
    "stage": "GA",
    "title": "Get predict results"
  },
  {
    "description": "Get search results for a placement",
    "name": "retail.placements.search",
    "stage": "BETA",
    "title": "Get search results"
  },
  {
    "apiDisabled": true,
    "description": "Create a product",
    "name": "retail.products.create",
    "stage": "GA",
    "title": "Create product"
  },
  {
    "apiDisabled": true,
    "description": "Delete a product",
    "name": "retail.products.delete",
    "stage": "GA",
    "title": "Delete product"
  },
  {
    "apiDisabled": true,
    "description": "Export products under a branch",
    "name": "retail.products.export",
    "stage": "GA",
    "title": "Export products"
  },
  {
    "apiDisabled": true,
    "description": "Get a product",
    "name": "retail.products.get",
    "stage": "GA",
    "title": "Get product"
  },
  {
    "apiDisabled": true,
    "description": "Imports products under a branch",
    "name": "retail.products.import",
    "stage": "GA",
    "title": "Import products"
  },
  {
    "apiDisabled": true,
    "description": "List products under a branch",
    "name": "retail.products.list",
    "stage": "GA",
    "title": "List products under a branch"
  },
  {
    "apiDisabled": true,
    "description": "Purge products under a branch",
    "name": "retail.products.purge",
    "stage": "GA",
    "title": "Purge products"
  },
  {
    "apiDisabled": true,
    "description": "Set sponsorship info for product",
    "name": "retail.products.setSponsorship",
    "stage": "GA",
    "title": "Set product sponsorship"
  },
  {
    "apiDisabled": true,
    "description": "Update a product",
    "name": "retail.products.update",
    "stage": "GA",
    "title": "Update product"
  },
  {
    "apiDisabled": true,
    "description": "Accept the Data Terms",
    "name": "retail.retailProjects.acceptDataTerms",
    "stage": "GA",
    "title": "Accept Data Terms"
  },
  {
    "apiDisabled": true,
    "description": "Get the retail project",
    "name": "retail.retailProjects.get",
    "stage": "GA",
    "title": "Get retail project"
  },
  {
    "apiDisabled": true,
    "description": "Create a serving config",
    "name": "retail.servingConfigs.create",
    "stage": "GA",
    "title": "Create serving config"
  },
  {
    "apiDisabled": true,
    "description": "Delete a serving config",
    "name": "retail.servingConfigs.delete",
    "stage": "GA",
    "title": "Delete serving config"
  },
  {
    "apiDisabled": true,
    "description": "Get a serving config",
    "name": "retail.servingConfigs.get",
    "stage": "GA",
    "title": "Get serving config"
  },
  {
    "apiDisabled": true,
    "description": "List serving configs under a catalog",
    "name": "retail.servingConfigs.list",
    "stage": "GA",
    "title": "List serving configs under a catalog"
  },
  {
    "description": "Get predict results for a serving config",
    "name": "retail.servingConfigs.predict",
    "stage": "BETA",
    "title": "Get predict results"
  },
  {
    "description": "Get search results for a serving config",
    "name": "retail.servingConfigs.search",
    "stage": "BETA",
    "title": "Get search results"
  },
  {
    "apiDisabled": true,
    "description": "Update a serving config",
    "name": "retail.servingConfigs.update",
    "stage": "GA",
    "title": "Update serving config"
  },
  {
    "apiDisabled": true,
    "description": "Creates a user events under a catalog",
    "name": "retail.userEvents.create",
    "stage": "GA",
    "title": "Creates a user event"
  },
  {
    "apiDisabled": true,
    "description": "Import user user events under a catalog",
    "name": "retail.userEvents.import",
    "stage": "GA",
    "title": "Import user user events"
  },
  {
    "apiDisabled": true,
    "description": "Purge user events under a catalog",
    "name": "retail.userEvents.purge",
    "stage": "GA",
    "title": "Purge user events"
  },
  {
    "apiDisabled": true,
    "description": "Rejoin user events under a catalog",
    "name": "retail.userEvents.rejoin",
    "stage": "GA",
    "title": "Rejoin user events"
  },
  {
    "apiDisabled": true,
    "name": "riscconfigurationservice.riscconfigs.createOrUpdate",
    "stage": "BETA",
    "title": "Create or update RISC configuration"
  },
  {
    "apiDisabled": true,
    "name": "riscconfigurationservice.riscconfigs.delete",
    "stage": "BETA",
    "title": "Delete RISC configuration"
  },
  {
    "apiDisabled": true,
    "name": "riscconfigurationservice.riscconfigs.get",
    "stage": "BETA",
    "title": "Get RISC configuration"
  },
  {
    "apiDisabled": true,
    "name": "rma.annotations.create",
    "stage": "GA",
    "title": "Create Annotation"
  },
  {
    "apiDisabled": true,
    "name": "rma.annotations.get",
    "stage": "GA",
    "title": "Get Annotation"
  },
  {
    "apiDisabled": true,
    "name": "rma.collectors.create",
    "stage": "GA",
    "title": "Create Collector"
  },
  {
    "apiDisabled": true,
    "name": "rma.collectors.delete",
    "stage": "GA",
    "title": "Delete Collector"
  },
  {
    "apiDisabled": true,
    "name": "rma.collectors.get",
    "stage": "GA",
    "title": "Get Collector"
  },
  {
    "apiDisabled": true,
    "name": "rma.collectors.list",
    "stage": "GA",
    "title": "List Collector"
  },
  {
    "apiDisabled": true,
    "name": "rma.collectors.update",
    "stage": "GA",
    "title": "Update Collector"
  },
  {
    "apiDisabled": true,
    "name": "rma.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "rma.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "rma.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "rma.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "rma.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "rma.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "routeoptimization.locations.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "routeoptimization.operations.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "routeoptimization.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.configurations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.configurations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.executions.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.executions.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.executions.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.executions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.jobs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.jobs.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.jobs.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.jobs.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.jobs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.jobs.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.jobs.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.jobs.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.jobs.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.jobs.run",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.jobs.runWithOverrides",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.jobs.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.jobs.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "run.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "run.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "run.revisions.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.revisions.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.revisions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.routes.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.routes.invoke",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.routes.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.services.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.services.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.services.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.services.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.services.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.services.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.services.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.services.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.services.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.services.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.services.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.tasks.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.tasks.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "run.workerpools.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "run.workerpools.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "run.workerpools.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "run.workerpools.getIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "run.workerpools.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "run.workerpools.setIamPolicy",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "run.workerpools.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.applications.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.applications.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.applications.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.applications.getStatus",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.applications.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.applications.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.deployments.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.deployments.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.deployments.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "runapps.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.create",
    "stage": "GA",
    "title": "Create Config Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.delete",
    "stage": "GA",
    "title": "Delete Config Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.get",
    "stage": "GA",
    "title": "Get Config Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy for Config object"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.list",
    "stage": "GA",
    "title": "List Config Resources"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy for Config object"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.configs.update",
    "stage": "GA",
    "title": "Update Config Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.create",
    "stage": "GA",
    "title": "Create Variable Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.delete",
    "stage": "GA",
    "title": "Delete Variable Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.get",
    "stage": "GA",
    "title": "Get Variable Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy for Variable object"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.list",
    "stage": "GA",
    "title": "List Variable Resources"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy for Variable object"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.update",
    "stage": "GA",
    "title": "Update Variable Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.variables.watch",
    "stage": "GA",
    "title": "Watch Variable Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.create",
    "stage": "GA",
    "title": "Create Waiter Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.delete",
    "stage": "GA",
    "title": "Delete Waiter Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.get",
    "stage": "GA",
    "title": "Get Waiter Resource"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy for Waiter object"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.list",
    "stage": "GA",
    "title": "List Waiter Resources"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy for Waiter object"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "runtimeconfig.waiters.update",
    "stage": "GA",
    "title": "Update Waiter Resource"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.releases.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.releases.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.releases.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.releases.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.releases.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.rolloutKinds.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.rolloutKinds.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.rolloutKinds.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.rolloutKinds.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.rolloutKinds.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.rollouts.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.rollouts.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.rollouts.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.rollouts.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.rollouts.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.saas.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.saas.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.saas.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.saas.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.saas.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.unitKinds.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.unitKinds.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.unitKinds.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.unitKinds.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.unitKinds.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.unitOperations.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.unitOperations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.unitOperations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.unitOperations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.unitOperations.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.units.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.units.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.units.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.units.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "saasservicemgmt.units.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.secrets.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.secrets.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.secrets.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.secrets.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.secrets.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.secrets.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.secrets.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.secrets.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.secrets.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.secrets.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.secrets.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.versions.access",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.versions.add",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.versions.destroy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.versions.disable",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.versions.enable",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.versions.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "secretmanager.versions.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Activate Overwatches",
    "name": "securedlandingzone.overwatches.activate",
    "stage": "BETA",
    "title": "Activate Overwatches"
  },
  {
    "apiDisabled": true,
    "description": "Create Overwatches",
    "name": "securedlandingzone.overwatches.create",
    "stage": "BETA",
    "title": "Create Overwatches"
  },
  {
    "apiDisabled": true,
    "description": "Delete Overwatches",
    "name": "securedlandingzone.overwatches.delete",
    "stage": "BETA",
    "title": "Delete Overwatches"
  },
  {
    "apiDisabled": true,
    "description": "Get Overwatches",
    "name": "securedlandingzone.overwatches.get",
    "stage": "BETA",
    "title": "Get Overwatches"
  },
  {
    "apiDisabled": true,
    "description": "List all Overwatches",
    "name": "securedlandingzone.overwatches.list",
    "stage": "BETA",
    "title": "List all Overwatches under a parent"
  },
  {
    "apiDisabled": true,
    "description": "Suspend Overwatches",
    "name": "securedlandingzone.overwatches.suspend",
    "stage": "BETA",
    "title": "Suspend Overwatches"
  },
  {
    "apiDisabled": true,
    "description": "Update Overwatches",
    "name": "securedlandingzone.overwatches.update",
    "stage": "BETA",
    "title": "Update Overwatches"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.branchRules.create",
    "stage": "BETA",
    "title": "Create Branch Rule"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.branchRules.delete",
    "stage": "BETA",
    "title": "Delete Branch Rule"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.branchRules.get",
    "stage": "BETA",
    "title": "Get Branch Rule"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.branchRules.list",
    "stage": "BETA",
    "title": "List Branch Rules"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.branchRules.update",
    "stage": "BETA",
    "title": "Update Branch Rule"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.hooks.create",
    "stage": "BETA",
    "title": "Create Hook"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.hooks.delete",
    "stage": "BETA",
    "title": "Delete Hook"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.hooks.get",
    "stage": "BETA",
    "title": "Get Hook"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.hooks.list",
    "stage": "BETA",
    "title": "List Hooks"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.hooks.update",
    "stage": "BETA",
    "title": "Update Hook"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.instances.access",
    "stage": "BETA",
    "title": "Access Instance"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.instances.create",
    "stage": "BETA",
    "title": "Create Instance"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.instances.createRepository",
    "stage": "BETA",
    "title": "Create repository in Instance"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.instances.delete",
    "stage": "BETA",
    "title": "Delete Instance"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.instances.get",
    "stage": "BETA",
    "title": "Get Instance"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.instances.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Instance"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.instances.list",
    "stage": "BETA",
    "title": "List Instance"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.instances.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Instance"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.issuecomments.create",
    "stage": "BETA",
    "title": "Create Issue Comment"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.issuecomments.delete",
    "stage": "BETA",
    "title": "Delete Issue Comment"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.issuecomments.get",
    "stage": "BETA",
    "title": "Get Issue Comment"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.issuecomments.list",
    "stage": "BETA",
    "title": "List Issue Comments"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.issuecomments.update",
    "stage": "BETA",
    "title": "Update Issue Comment"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.issues.close",
    "stage": "BETA",
    "title": "Close Issue"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.issues.create",
    "stage": "BETA",
    "title": "Create Issue"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.issues.delete",
    "stage": "BETA",
    "title": "Delete Issue"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.issues.get",
    "stage": "BETA",
    "title": "Get Issue"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.issues.list",
    "stage": "BETA",
    "title": "List Issues"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.issues.open",
    "stage": "BETA",
    "title": "Open Issue"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.issues.update",
    "stage": "BETA",
    "title": "Update Issue"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.prcomments.create",
    "stage": "BETA",
    "title": "Create Pull Request Comment"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.prcomments.delete",
    "stage": "BETA",
    "title": "Delete Pull Request Comment"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.prcomments.get",
    "stage": "BETA",
    "title": "Get Pull Request Comment"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.prcomments.list",
    "stage": "BETA",
    "title": "List Pull Request Comments"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.prcomments.resolve",
    "stage": "BETA",
    "title": "Resolve Pull Request Comment"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.prcomments.unresolve",
    "stage": "BETA",
    "title": "Unresolve Pull Request Comment"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.prcomments.update",
    "stage": "BETA",
    "title": "Update Pull Request Comment"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.pullRequests.close",
    "stage": "BETA",
    "title": "Close Pull Request"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.pullRequests.create",
    "stage": "BETA",
    "title": "Create Pull Request"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.pullRequests.get",
    "stage": "BETA",
    "title": "Get Pull Request"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.pullRequests.list",
    "stage": "BETA",
    "title": "List Pull Requests"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.pullRequests.listFileDiffs",
    "stage": "BETA",
    "title": "List Pull Request File Diffs"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.pullRequests.merge",
    "stage": "BETA",
    "title": "Merge Pull Request"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.pullRequests.open",
    "stage": "BETA",
    "title": "Open Pull Request"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.pullRequests.update",
    "stage": "BETA",
    "title": "Update Pull Request"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.approvePullRequests",
    "stage": "BETA",
    "title": "Approve pull requests in a repository"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.create",
    "stage": "BETA",
    "title": "Create Repository"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.delete",
    "stage": "BETA",
    "title": "Delete Repository"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.fetch",
    "stage": "BETA",
    "title": "Clone/fetch Repository"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.get",
    "stage": "BETA",
    "title": "Get Repository"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM Policy on Repository"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.list",
    "stage": "BETA",
    "title": "List Repository"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.push",
    "stage": "BETA",
    "title": "Push Repository"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.readIssues",
    "stage": "BETA",
    "title": "Read issues in repository in UI"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.readPullRequests",
    "stage": "BETA",
    "title": "Read pull requests in repository in UI"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM Policy on Repository"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.update",
    "stage": "BETA",
    "title": "Update Repository"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.writeIssues",
    "stage": "BETA",
    "title": "Write issues in repository in UI"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.repositories.writePullRequests",
    "stage": "BETA",
    "title": "Write pull requests in repository in UI"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.sshkeys.create",
    "stage": "BETA",
    "title": "Create SSH key"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.sshkeys.createAny",
    "stage": "BETA",
    "title": "Create any SSH key"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.sshkeys.delete",
    "stage": "BETA",
    "title": "Delete SSH key"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.sshkeys.deleteAny",
    "stage": "BETA",
    "title": "Delete any SSH key"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.sshkeys.get",
    "stage": "BETA",
    "title": "Get SSH keys"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.sshkeys.list",
    "stage": "BETA",
    "title": "List SSH keys"
  },
  {
    "apiDisabled": true,
    "name": "securesourcemanager.sshkeys.listAny",
    "stage": "BETA",
    "title": "List all SSH keys"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.assets.group",
    "stage": "GA",
    "title": "Group asset data"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.assets.list",
    "stage": "GA",
    "title": "List assets data"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.assets.listAssetPropertyNames",
    "stage": "GA",
    "title": "List asset property names"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.assets.runDiscovery",
    "stage": "GA",
    "title": "Run asset discovery"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.assetsecuritymarks.update",
    "stage": "GA",
    "title": "Update asset security marks"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.bigQueryExports.create",
    "stage": "GA",
    "title": "Create a BigQuery Export"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.bigQueryExports.delete",
    "stage": "GA",
    "title": "Delete a BigQuery Export"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.bigQueryExports.get",
    "stage": "GA",
    "title": "Get BigQuery Export by exportId"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.bigQueryExports.list",
    "stage": "GA",
    "title": "List BigQuery Exports"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.bigQueryExports.update",
    "stage": "GA",
    "title": "Update a BigQuery Export"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.billingtier.update",
    "stage": "GA",
    "title": "Update BillingTier"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.complianceReports.aggregate",
    "stage": "BETA",
    "title": "Aggregate compliance reports"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.compliancesnapshots.list",
    "stage": "BETA",
    "title": "List compliance snapshots"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.containerthreatdetectionsettings.calculate",
    "stage": "BETA",
    "title": "Calculate ContainerThreatDetectionSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.containerthreatdetectionsettings.get",
    "stage": "BETA",
    "title": "Get ContainerThreatDetectionSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.containerthreatdetectionsettings.update",
    "stage": "BETA",
    "title": "Update ContainerThreatDetectionSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.effectivesecurityhealthanalyticscustommodules.get",
    "stage": "GA",
    "title": "Get EffectiveSecurityHealthAnalyticsCustomModules"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.effectivesecurityhealthanalyticscustommodules.list",
    "stage": "GA",
    "title": "List EffectiveSecurityHealthAnalyticsCustomModules"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.eventthreatdetectionsettings.calculate",
    "stage": "BETA",
    "title": "Calculate EventThreatDetectionSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.eventthreatdetectionsettings.get",
    "stage": "BETA",
    "title": "Get EventThreatDetectionSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.eventthreatdetectionsettings.update",
    "stage": "BETA",
    "title": "Update EventThreatDetectionSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.findingexplanations.get",
    "stage": "GA",
    "title": "Get finding explanations"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.findingexternalsystems.update",
    "stage": "GA",
    "title": "Update external systems for a finding."
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.findings.bulkMuteUpdate",
    "stage": "GA",
    "title": "Bulk update for mute attribute in the finding data"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.findings.export",
    "stage": "GA",
    "title": "Bulk export findings to BigQuery"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.findings.group",
    "stage": "GA",
    "title": "Group finding data"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.findings.list",
    "stage": "GA",
    "title": "List finding data"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.findings.listFindingPropertyNames",
    "stage": "GA",
    "title": "List finding property names"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.findings.setMute",
    "stage": "GA",
    "title": "Set mute for finding"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.findings.setState",
    "stage": "GA",
    "title": "Set state for finding"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.findings.setWorkflowState",
    "stage": "BETA",
    "title": "Set workflow state for finding"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.findings.update",
    "stage": "GA",
    "title": "Create or update finding"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.findingsecuritymarks.update",
    "stage": "GA",
    "title": "Update finding security marks"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.graphs.get",
    "stage": "BETA",
    "title": "Get graph"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.graphs.query",
    "stage": "BETA",
    "title": "Query graph"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.integratedvulnerabilityscannersettings.calculate",
    "stage": "GA",
    "title": "Calculate IntegratedVulnerabilityScannerSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.integratedvulnerabilityscannersettings.get",
    "stage": "GA",
    "title": "Get IntegratedVulnerabilityScannerSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.integratedvulnerabilityscannersettings.update",
    "stage": "GA",
    "title": "Update IntegratedVulnerabilityScannerSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.issues.get",
    "stage": "GA",
    "title": "Get issue"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.issues.group",
    "stage": "GA",
    "title": "Group issues"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.issues.list",
    "stage": "GA",
    "title": "List issues"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.issues.listFilterValues",
    "stage": "GA",
    "title": "List issue filter values"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.issues.mute",
    "stage": "GA",
    "title": "Mute issue"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.muteconfigs.create",
    "stage": "GA",
    "title": "Create Mute Config"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.muteconfigs.delete",
    "stage": "GA",
    "title": "Delete Mute Config"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.muteconfigs.get",
    "stage": "GA",
    "title": "Get Mute Config"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.muteconfigs.list",
    "stage": "GA",
    "title": "List Mute Configs"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.muteconfigs.update",
    "stage": "GA",
    "title": "Update Mute Config"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.notificationconfig.create",
    "stage": "GA",
    "title": "Create notification configuration"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.notificationconfig.delete",
    "stage": "GA",
    "title": "Delete notification configuration"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.notificationconfig.get",
    "stage": "GA",
    "title": "Get notification configuration"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.notificationconfig.list",
    "stage": "GA",
    "title": "List notification configurations"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.notificationconfig.update",
    "stage": "GA",
    "title": "Update notification configuration"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.rapidvulnerabilitydetectionsettings.calculate",
    "stage": "GA",
    "title": "Calculate RapidVulnerabilityDetectionSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.rapidvulnerabilitydetectionsettings.get",
    "stage": "GA",
    "title": "Get RapidVulnerabilityDetectionSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.rapidvulnerabilitydetectionsettings.update",
    "stage": "GA",
    "title": "Update RapidVulnerabilityDetectionSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.securitycentersettings.get",
    "stage": "BETA",
    "title": "Get SecurityCenterSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.securitycentersettings.update",
    "stage": "BETA",
    "title": "Update SecurityCenterSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.securityhealthanalyticscustommodules.create",
    "stage": "GA",
    "title": "Create SecurityHealthAnalyticsCustomModules"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.securityhealthanalyticscustommodules.delete",
    "stage": "GA",
    "title": "Delete SecurityHealthAnalyticsCustomModules"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.securityhealthanalyticscustommodules.get",
    "stage": "GA",
    "title": "Get SecurityHealthAnalyticsCustomModules"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.securityhealthanalyticscustommodules.list",
    "stage": "GA",
    "title": "List SecurityHealthAnalyticsCustomModules"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.securityhealthanalyticscustommodules.simulate",
    "stage": "GA",
    "title": "Simulate SecurityHealthAnalyticsCustomModules"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.securityhealthanalyticscustommodules.test",
    "stage": "GA",
    "title": "Test SecurityHealthAnalyticsCustomModules"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.securityhealthanalyticscustommodules.update",
    "stage": "GA",
    "title": "Update SecurityHealthAnalyticsCustomModules"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.securityhealthanalyticssettings.calculate",
    "stage": "BETA",
    "title": "Calculate SecurityHealthAnalyticsSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.securityhealthanalyticssettings.get",
    "stage": "BETA",
    "title": "Get SecurityHealthAnalyticsSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.securityhealthanalyticssettings.update",
    "stage": "BETA",
    "title": "Update SecurityHealthAnalyticsSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.sources.get",
    "stage": "GA",
    "title": "Get sources"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.sources.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.sources.list",
    "stage": "GA",
    "title": "List sources"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.sources.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.sources.update",
    "stage": "GA",
    "title": "Update sources"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.userinterfacemetadata.get",
    "stage": "BETA",
    "title": "Get UserInterfaceMetadata"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.virtualmachinethreatdetectionsettings.calculate",
    "stage": "GA",
    "title": "Calculate VirtualMachineThreatDetectionSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.virtualmachinethreatdetectionsettings.get",
    "stage": "GA",
    "title": "Get VirtualMachineThreatDetectionSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.virtualmachinethreatdetectionsettings.update",
    "stage": "GA",
    "title": "Update VirtualMachineThreatDetectionSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.vulnerabilitysnapshots.list",
    "stage": "BETA",
    "title": "List vulnerability snapshots"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.websecurityscannersettings.calculate",
    "stage": "BETA",
    "title": "Calculate WebSecurityScannerSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.websecurityscannersettings.get",
    "stage": "BETA",
    "title": "Get WebSecurityScannerSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycenter.websecurityscannersettings.update",
    "stage": "BETA",
    "title": "Update WebSecurityScannerSettings"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.billingMetadata.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.effectiveEventThreatDetectionCustomModules.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.effectiveEventThreatDetectionCustomModules.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.effectiveSecurityHealthAnalyticsCustomModules.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.eventThreatDetectionCustomModules.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.eventThreatDetectionCustomModules.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.eventThreatDetectionCustomModules.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.eventThreatDetectionCustomModules.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.eventThreatDetectionCustomModules.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.eventThreatDetectionCustomModules.validate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityCenterServices.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityCenterServices.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityCenterServices.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityCommandCenter.activate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityCommandCenter.checkActivationOperation",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityCommandCenter.checkEligibility",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityCommandCenter.checkOnboardingStatus",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityCommandCenter.generateServiceAccounts",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityCommandCenter.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityCommandCenter.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityHealthAnalyticsCustomModules.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityHealthAnalyticsCustomModules.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityHealthAnalyticsCustomModules.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityHealthAnalyticsCustomModules.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityHealthAnalyticsCustomModules.simulate",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityHealthAnalyticsCustomModules.test",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securitycentermanagement.securityHealthAnalyticsCustomModules.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.operations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.postureDeployments.create",
    "stage": "GA",
    "title": "Create Posture Deployment"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.postureDeployments.delete",
    "stage": "GA",
    "title": "Delete Posture Deployment"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.postureDeployments.get",
    "stage": "GA",
    "title": "Get Posture Deployment"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.postureDeployments.list",
    "stage": "GA",
    "title": "List Posture Deployments"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.postureDeployments.update",
    "stage": "GA",
    "title": "Update Posture Deployment"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.postureTemplates.get",
    "stage": "GA",
    "title": "Get Posture Template"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.postureTemplates.list",
    "stage": "GA",
    "title": "List Posture Templates"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.postures.create",
    "stage": "GA",
    "title": "Create a Posture"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.postures.delete",
    "stage": "GA",
    "title": "Delete a Posture"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.postures.extract",
    "stage": "GA",
    "title": "Export a Posture"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.postures.get",
    "stage": "GA",
    "title": "Get a Posture"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.postures.list",
    "stage": "GA",
    "title": "List Postures"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.postures.update",
    "stage": "GA",
    "title": "Update a Posture"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.reports.create",
    "stage": "GA",
    "title": "Create Report"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.reports.get",
    "stage": "GA",
    "title": "Get Report"
  },
  {
    "apiDisabled": true,
    "name": "securityposture.reports.list",
    "stage": "GA",
    "title": "List Reports"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindingoperations.get",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindingoperations.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindings.create",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindings.delete",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindings.get",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindings.getIamPolicy",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindings.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.bindings.setIamPolicy",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.create",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.delete",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.get",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.getIamPolicy",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.setIamPolicy",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.catalogs.validate",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instanceoperations.get",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instanceoperations.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.create",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.delete",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.get",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.getIamPolicy",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.list",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.setIamPolicy",
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "name": "servicebroker.instances.update",
    "stage": "DEPRECATED"
  },
  {
    "name": "serviceconsumermanagement.consumers.get",
    "stage": "BETA",
    "title": "Get the enablement state of a service for a consumer"
  },
  {
    "name": "serviceconsumermanagement.quota.get",
    "stage": "BETA",
    "title": "Get quota information"
  },
  {
    "name": "serviceconsumermanagement.quota.update",
    "stage": "BETA",
    "title": "Set quota overrides"
  },
  {
    "apiDisabled": true,
    "name": "serviceconsumermanagement.tenancyu.addResource",
    "stage": "BETA",
    "title": "Add a resource in a tenancy unit for a service"
  },
  {
    "apiDisabled": true,
    "name": "serviceconsumermanagement.tenancyu.create",
    "stage": "BETA",
    "title": "Create a tenancy unit for a service"
  },
  {
    "apiDisabled": true,
    "name": "serviceconsumermanagement.tenancyu.delete",
    "stage": "BETA",
    "title": "Delete a tenancy unit for a service"
  },
  {
    "apiDisabled": true,
    "name": "serviceconsumermanagement.tenancyu.list",
    "stage": "BETA",
    "title": "List or search tenancy units for a service"
  },
  {
    "apiDisabled": true,
    "name": "serviceconsumermanagement.tenancyu.removeResource",
    "stage": "BETA",
    "title": "Remove a resource from a tenancy unit for a service"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.create",
    "stage": "GA",
    "title": "Create Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.delete",
    "stage": "GA",
    "title": "Delete Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.get",
    "stage": "GA",
    "title": "Read Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.list",
    "stage": "GA",
    "title": "List Endpoints"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.endpoints.update",
    "stage": "GA",
    "title": "Update Endpoint"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.associatePrivateZone",
    "stage": "GA",
    "title": "Associate Private DNS Zone with Namespace"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.create",
    "stage": "GA",
    "title": "Create Namespace"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.delete",
    "stage": "GA",
    "title": "Delete Namespace"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.get",
    "stage": "GA",
    "title": "Read Namespace"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.list",
    "stage": "GA",
    "title": "List Namespaces"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.namespaces.update",
    "stage": "GA",
    "title": "Update Namespace"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.networks.access",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.networks.attach",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.bind",
    "stage": "GA",
    "title": "Bind a Service Directory service to a Service Binding"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.create",
    "stage": "GA",
    "title": "Create Service"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.delete",
    "stage": "GA",
    "title": "Delete Service"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.get",
    "stage": "GA",
    "title": "Read Service"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.list",
    "stage": "GA",
    "title": "List Services"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.resolve",
    "stage": "GA",
    "title": "Resolve a Service and all of its Endpoints"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicedirectory.services.update",
    "stage": "GA",
    "title": "Update Service"
  },
  {
    "name": "servicehealth.artifacts.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "servicehealth.events.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicehealth.events.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicehealth.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicehealth.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicehealth.organizationEvents.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicehealth.organizationEvents.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicehealth.organizationImpacts.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "servicehealth.organizationImpacts.list",
    "stage": "GA"
  },
  {
    "name": "servicehealth.statuses.get",
    "stage": "BETA"
  },
  {
    "name": "servicemanagement.services.bind",
    "stage": "GA",
    "title": "Activate/Deactivate service."
  },
  {
    "apiDisabled": true,
    "name": "servicemanagement.services.check",
    "stage": "GA",
    "title": "Check the usage of the service."
  },
  {
    "name": "servicemanagement.services.create",
    "stage": "GA",
    "title": "Create service"
  },
  {
    "name": "servicemanagement.services.delete",
    "stage": "GA",
    "title": "Delete service"
  },
  {
    "name": "servicemanagement.services.get",
    "stage": "GA",
    "title": "Read service"
  },
  {
    "name": "servicemanagement.services.getIamPolicy",
    "stage": "GA"
  },
  {
    "name": "servicemanagement.services.list",
    "stage": "GA",
    "title": "List services"
  },
  {
    "apiDisabled": true,
    "name": "servicemanagement.services.quota",
    "stage": "GA",
    "title": "Allocate and release quota of the service."
  },
  {
    "apiDisabled": true,
    "name": "servicemanagement.services.report",
    "stage": "GA",
    "title": "Report the usage of the service."
  },
  {
    "name": "servicemanagement.services.setIamPolicy",
    "stage": "GA"
  },
  {
    "name": "servicemanagement.services.update",
    "stage": "GA",
    "title": "Update service"
  },
  {
    "name": "servicenetworking.operations.cancel",
    "stage": "DEPRECATED",
    "title": "Cancel operation"
  },
  {
    "name": "servicenetworking.operations.delete",
    "stage": "DEPRECATED",
    "title": "Delete operation"
  },
  {
    "name": "servicenetworking.operations.get",
    "stage": "DEPRECATED",
    "title": "Read operation"
  },
  {
    "name": "servicenetworking.operations.list",
    "stage": "DEPRECATED",
    "title": "List operations"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.addDnsRecordSet",
    "stage": "BETA",
    "title": "Add DNS record set"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.addDnsZone",
    "stage": "BETA",
    "title": "Add DNS zone"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.addPeering",
    "stage": "BETA",
    "title": "Add peering"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.addSubnetwork",
    "stage": "BETA",
    "title": "Add subnetwork"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.createPeeredDnsDomain",
    "stage": "BETA",
    "title": "Create peered DNS domain"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.deleteConnection",
    "stage": "BETA",
    "title": "Delete connection"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.deletePeeredDnsDomain",
    "stage": "BETA",
    "title": "Delete peered DNS domain"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.disableVpcServiceControls",
    "stage": "BETA",
    "title": "Disable vpc service controls"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.enableVpcServiceControls",
    "stage": "BETA",
    "title": "Enable vpc service controls"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.get",
    "stage": "BETA",
    "title": "Get service networking states"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.getConsumerConfig",
    "stage": "BETA",
    "title": "Get consumer config"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.listPeeredDnsDomains",
    "stage": "BETA",
    "title": "List peered DNS domains"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.removeDnsRecordSet",
    "stage": "BETA",
    "title": "Remove DNS record set"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.removeDnsZone",
    "stage": "BETA",
    "title": "Remove DNS zone"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.updateConsumerConfig",
    "stage": "BETA",
    "title": "Update consumer config"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.updateDnsRecordSet",
    "stage": "BETA",
    "title": "Update DNS record set"
  },
  {
    "apiDisabled": true,
    "name": "servicenetworking.services.use",
    "stage": "BETA",
    "title": "Use servicenetworking services"
  },
  {
    "apiDisabled": true,
    "description": "Get ClustersSecurityInfo",
    "name": "servicesecurityinsights.clusterSecurityInfo.get",
    "stage": "BETA",
    "title": "Get ClusterSecurityInfo"
  },
  {
    "apiDisabled": true,
    "description": "List ClustersSecurityInfo",
    "name": "servicesecurityinsights.clusterSecurityInfo.list",
    "stage": "BETA",
    "title": "List ClusterSecurityInfo"
  },
  {
    "apiDisabled": true,
    "description": "Get Policies",
    "name": "servicesecurityinsights.policies.get",
    "stage": "BETA",
    "title": "Get Policies"
  },
  {
    "apiDisabled": true,
    "description": "Get ProjectStates",
    "name": "servicesecurityinsights.projectStates.get",
    "stage": "BETA",
    "title": "Get ProjectStates"
  },
  {
    "apiDisabled": true,
    "description": "List Workloads SecurityInfo",
    "name": "servicesecurityinsights.securityInfo.list",
    "stage": "BETA",
    "title": "List Workloads SecurityInfo"
  },
  {
    "apiDisabled": true,
    "description": "Get SecurityViews",
    "name": "servicesecurityinsights.securityViews.get",
    "stage": "BETA",
    "title": "Get SecurityViews"
  },
  {
    "apiDisabled": true,
    "description": "Look up Workload Policies",
    "name": "servicesecurityinsights.workloadPolicies.list",
    "stage": "BETA",
    "title": "Look up Workload Policies"
  },
  {
    "apiDisabled": true,
    "description": "Get Workload SecurityInfo",
    "name": "servicesecurityinsights.workloadSecurityInfo.get",
    "stage": "BETA",
    "title": "Get Workload SecurityInfo"
  },
  {
    "name": "serviceusage.apiKeys.create",
    "primaryPermission": "apikeys.keys.create",
    "stage": "BETA",
    "title": "Create a new API key"
  },
  {
    "name": "serviceusage.apiKeys.delete",
    "primaryPermission": "apikeys.keys.delete",
    "stage": "BETA",
    "title": "Delete an API key"
  },
  {
    "name": "serviceusage.apiKeys.get",
    "primaryPermission": "apikeys.keys.get",
    "stage": "BETA",
    "title": "Get API key details"
  },
  {
    "name": "serviceusage.apiKeys.getProjectForKey",
    "primaryPermission": "apikeys.keys.lookup",
    "stage": "BETA",
    "title": "Get parent and name for the corresponding key"
  },
  {
    "name": "serviceusage.apiKeys.list",
    "primaryPermission": "apikeys.keys.list",
    "stage": "BETA",
    "title": "List API keys"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.apiKeys.regenerate",
    "stage": "BETA",
    "title": "Regenerate an API key"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.apiKeys.revert",
    "stage": "BETA",
    "title": "Revert an API key"
  },
  {
    "name": "serviceusage.apiKeys.update",
    "primaryPermission": "apikeys.keys.update",
    "stage": "BETA",
    "title": "Update API key details"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.quotas.get",
    "stage": "BETA",
    "title": "Get quota information"
  },
  {
    "customRolesSupportLevel": "TESTING",
    "name": "serviceusage.quotas.update",
    "stage": "BETA",
    "title": "Set quota overrides"
  },
  {
    "name": "serviceusage.services.disable",
    "stage": "GA",
    "title": "Disable a service"
  },
  {
    "name": "serviceusage.services.enable",
    "stage": "GA",
    "title": "Enable a service"
  },
  {
    "name": "serviceusage.services.get",
    "stage": "GA",
    "title": "Get enablement state of a service"
  },
  {
    "name": "serviceusage.services.list",
    "stage": "GA",
    "title": "List services used by a project"
  },
  {
    "name": "serviceusage.services.use",
    "stage": "GA",
    "title": "Consume quota and billing"
  },
  {
    "apiDisabled": true,
    "name": "source.repos.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "source.repos.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "source.repos.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "source.repos.getIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "source.repos.getProjectConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "source.repos.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "source.repos.setIamPolicy",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "source.repos.update",
    "onlyInPredefinedRoles": true,
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "source.repos.updateProjectConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "source.repos.updateRepoConfig",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backupOperations.cancel",
    "stage": "GA",
    "title": "Cancel a Spanner backup operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backupOperations.get",
    "stage": "GA",
    "title": "Get a Spanner backup operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backupOperations.list",
    "stage": "GA",
    "title": "List Spanner backup operations"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backupSchedules.create",
    "stage": "GA",
    "title": "Create a backup schedule of a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backupSchedules.delete",
    "stage": "GA",
    "title": "Delete a Spanner backup schedule"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backupSchedules.get",
    "stage": "GA",
    "title": "Get a Spanner backup schedule"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backupSchedules.getIamPolicy",
    "stage": "GA",
    "title": "Get a Spanner backup schedule's IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backupSchedules.list",
    "stage": "GA",
    "title": "List Spanner backup schedules"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backupSchedules.setIamPolicy",
    "stage": "GA",
    "title": "Set a Spanner backup schedule's IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backupSchedules.update",
    "stage": "GA",
    "title": "Update a Spanner backup schedule"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.copy",
    "stage": "GA",
    "title": "Copy a backup of a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.create",
    "stage": "GA",
    "title": "Create a backup of a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.delete",
    "stage": "GA",
    "title": "Delete a Spanner backup"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.get",
    "stage": "GA",
    "title": "Get a Spanner backup's metadata"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.getIamPolicy",
    "stage": "GA",
    "title": "Get a Spanner backup's IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.list",
    "stage": "GA",
    "title": "List Spanner backups"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.restoreDatabase",
    "stage": "GA",
    "title": "Permission to restore from a particular backup to a new Spanner database. To restore, the caller also needs the spanner.databases.create permission to create the new Spanner database."
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.setIamPolicy",
    "stage": "GA",
    "title": "Set a Spanner backup's IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "spanner.backups.update",
    "stage": "GA",
    "title": "Update a Spanner backup's metadata"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databaseOperations.cancel",
    "stage": "GA",
    "title": "Cancel a Spanner database operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databaseOperations.get",
    "stage": "GA",
    "title": "Get a Spanner database operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databaseOperations.list",
    "stage": "GA",
    "title": "List Spanner database operations"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databaseRoles.list",
    "stage": "GA",
    "title": "List Spanner database roles"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.adapt",
    "stage": "GA",
    "title": "Adapt a message for a supported adapter protocol on a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.addSplitPoints",
    "stage": "GA",
    "title": "Add Split Points on a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.beginOrRollbackReadWriteTransaction",
    "stage": "GA",
    "title": "Begin/rollback a read-write transaction on a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.beginPartitionedDmlTransaction",
    "stage": "GA",
    "title": "Begin a partitioned-dml transaction on a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.beginReadOnlyTransaction",
    "stage": "GA",
    "title": "Begin a read-only transaction on a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.changequorum",
    "stage": "GA",
    "title": "Change quorum of a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.create",
    "stage": "GA",
    "title": "Create a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.createBackup",
    "stage": "GA",
    "title": "Create a backup of a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.drop",
    "stage": "GA",
    "title": "Drop a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.get",
    "stage": "GA",
    "title": "Get a Spanner database's metadata"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.getDdl",
    "stage": "GA",
    "title": "Get a Spanner database's schema"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.getIamPolicy",
    "stage": "GA",
    "title": "Get a Spanner database's IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.list",
    "stage": "GA",
    "title": "List Spanner databases"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.partitionQuery",
    "stage": "GA",
    "title": "Spanner partition query"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.partitionRead",
    "stage": "GA",
    "title": "Spanner partition read"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.read",
    "stage": "GA",
    "title": "Read from a Spanner database using the read API"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.select",
    "stage": "GA",
    "title": "SQL select from a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.setIamPolicy",
    "stage": "GA",
    "title": "Set a Spanner database's IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.update",
    "stage": "GA",
    "title": "Update a Spanner database's metadata"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.updateDdl",
    "stage": "GA",
    "title": "Update a Spanner database's schema"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.useDataBoost",
    "stage": "GA",
    "title": "Use Spanner independent compute resources to query or read from a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.useRoleBasedAccess",
    "stage": "GA",
    "title": "Use database role based access on a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.databases.write",
    "stage": "GA",
    "title": "Write into a Spanner database"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceConfigOperations.cancel",
    "stage": "GA",
    "title": "Cancel a Spanner instance config operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceConfigOperations.delete",
    "stage": "GA",
    "title": "Delete a Spanner instance config operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceConfigOperations.get",
    "stage": "GA",
    "title": "Get a Spanner instance config operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceConfigOperations.list",
    "stage": "GA",
    "title": "List Spanner instance config operations"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceConfigs.create",
    "stage": "GA",
    "title": "Create a Spanner custom instance configuration"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceConfigs.delete",
    "stage": "GA",
    "title": "Delete a Spanner custom instance configuration"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceConfigs.get",
    "stage": "GA",
    "title": "Get a Spanner instance configuration"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceConfigs.list",
    "stage": "GA",
    "title": "List the set of instance configurations"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceConfigs.update",
    "stage": "GA",
    "title": "Update a Spanner custom instance configuration"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceOperations.cancel",
    "stage": "GA",
    "title": "Cancel a Spanner instance operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceOperations.delete",
    "stage": "GA",
    "title": "Delete a Spanner instance operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceOperations.get",
    "stage": "GA",
    "title": "Get a Spanner instance operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instanceOperations.list",
    "stage": "GA",
    "title": "List Spanner instance operations"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instancePartitionOperations.cancel",
    "stage": "BETA",
    "title": "Cancel a Spanner instance partition operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instancePartitionOperations.delete",
    "stage": "BETA",
    "title": "Delete a Spanner instance partition operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instancePartitionOperations.get",
    "stage": "BETA",
    "title": "Get a Spanner instance partition operation"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instancePartitionOperations.list",
    "stage": "BETA",
    "title": "List Spanner instance partition operations"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instancePartitions.create",
    "stage": "BETA",
    "title": "Create a Spanner instance partition"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instancePartitions.delete",
    "stage": "BETA",
    "title": "Delete a Spanner instance partition"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instancePartitions.get",
    "stage": "BETA",
    "title": "Get a Spanner instance partition's metadata"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instancePartitions.list",
    "stage": "BETA",
    "title": "List Spanner instance partitions"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instancePartitions.update",
    "stage": "BETA",
    "title": "Update a Spanner instance partition"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.create",
    "stage": "GA",
    "title": "Create a Spanner instance"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.delete",
    "stage": "GA",
    "title": "Delete a Spanner instance"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.get",
    "stage": "GA",
    "title": "Get a Spanner instance's configuration"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.getIamPolicy",
    "stage": "GA",
    "title": "Get a Spanner instance's IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.list",
    "stage": "GA",
    "title": "List Spanner instances"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.setIamPolicy",
    "stage": "GA",
    "title": "Set a Spanner instance's IAM Policy"
  },
  {
    "apiDisabled": true,
    "name": "spanner.instances.update",
    "stage": "GA",
    "title": "Update a Spanner instance"
  },
  {
    "apiDisabled": true,
    "name": "spanner.sessions.create",
    "stage": "GA",
    "title": "Create a Spanner session"
  },
  {
    "apiDisabled": true,
    "name": "spanner.sessions.delete",
    "stage": "GA",
    "title": "Delete a Spanner session"
  },
  {
    "apiDisabled": true,
    "name": "spanner.sessions.get",
    "stage": "GA",
    "title": "Get a Spanner session"
  },
  {
    "apiDisabled": true,
    "name": "spanner.sessions.list",
    "stage": "GA",
    "title": "List all Spanner sessions"
  },
  {
    "apiDisabled": true,
    "description": "Create Phrases",
    "name": "speakerid.phrases.create",
    "stage": "GA",
    "title": "Create Phrases"
  },
  {
    "apiDisabled": true,
    "description": "Delete Phrases",
    "name": "speakerid.phrases.delete",
    "stage": "GA",
    "title": "Delete Phrases"
  },
  {
    "apiDisabled": true,
    "description": "Get Phrases",
    "name": "speakerid.phrases.get",
    "stage": "GA",
    "title": "Get Phrases"
  },
  {
    "apiDisabled": true,
    "description": "List Phrases",
    "name": "speakerid.phrases.list",
    "stage": "GA",
    "title": "List Phrases"
  },
  {
    "apiDisabled": true,
    "description": "Get Settings",
    "name": "speakerid.settings.get",
    "stage": "GA",
    "title": "Get Settings"
  },
  {
    "apiDisabled": true,
    "description": "Update Settings",
    "name": "speakerid.settings.update",
    "stage": "GA",
    "title": "Update Settings"
  },
  {
    "apiDisabled": true,
    "description": "Create Speakers",
    "name": "speakerid.speakers.create",
    "stage": "GA",
    "title": "Create Speakers"
  },
  {
    "apiDisabled": true,
    "description": "Delete Speakers",
    "name": "speakerid.speakers.delete",
    "stage": "GA",
    "title": "Delete Speakers"
  },
  {
    "apiDisabled": true,
    "description": "Get Speakers",
    "name": "speakerid.speakers.get",
    "stage": "GA",
    "title": "Get Speakers"
  },
  {
    "apiDisabled": true,
    "description": "List Speakers",
    "name": "speakerid.speakers.list",
    "stage": "GA",
    "title": "List Speakers"
  },
  {
    "apiDisabled": true,
    "description": "Verify Speakers",
    "name": "speakerid.speakers.verify",
    "stage": "GA",
    "title": "Verify Speakers"
  },
  {
    "apiDisabled": true,
    "description": "Use adaptation resources when recognizing audio.",
    "name": "speech.adaptations.execute",
    "stage": "GA",
    "title": "Execute adaptation resources"
  },
  {
    "apiDisabled": true,
    "description": "Get config",
    "name": "speech.config.get",
    "stage": "GA",
    "title": "Get config"
  },
  {
    "apiDisabled": true,
    "description": "Update config",
    "name": "speech.config.update",
    "stage": "GA",
    "title": "Update config"
  },
  {
    "apiDisabled": true,
    "description": "Create custom class",
    "name": "speech.customClasses.create",
    "stage": "GA",
    "title": "Create custom class"
  },
  {
    "apiDisabled": true,
    "description": "Delete custom class",
    "name": "speech.customClasses.delete",
    "stage": "GA",
    "title": "Delete custom class"
  },
  {
    "apiDisabled": true,
    "description": "Get custom classes",
    "name": "speech.customClasses.get",
    "stage": "GA",
    "title": "Get custom classes"
  },
  {
    "apiDisabled": true,
    "description": "List custom classes",
    "name": "speech.customClasses.list",
    "stage": "GA",
    "title": "List custom classes"
  },
  {
    "apiDisabled": true,
    "description": "Undelete CustomClass",
    "name": "speech.customClasses.undelete",
    "stage": "GA",
    "title": "Undelete CustomClass"
  },
  {
    "apiDisabled": true,
    "description": "Update custom class",
    "name": "speech.customClasses.update",
    "stage": "GA",
    "title": "Update custom class"
  },
  {
    "apiDisabled": true,
    "description": "Get location",
    "name": "speech.locations.get",
    "stage": "GA",
    "title": "Get location"
  },
  {
    "apiDisabled": true,
    "description": "List locations",
    "name": "speech.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "description": "Cancel an operation",
    "name": "speech.operations.cancel",
    "stage": "GA",
    "title": "Cancel an operation"
  },
  {
    "apiDisabled": true,
    "description": "Delete an operation",
    "name": "speech.operations.delete",
    "stage": "GA",
    "title": "Delete an operation"
  },
  {
    "apiDisabled": true,
    "description": "Get operation",
    "name": "speech.operations.get",
    "stage": "GA",
    "title": "Get operation"
  },
  {
    "apiDisabled": true,
    "description": "List operations",
    "name": "speech.operations.list",
    "stage": "GA",
    "title": "List operations"
  },
  {
    "apiDisabled": true,
    "description": "Wait for an operation to finish",
    "name": "speech.operations.wait",
    "stage": "GA",
    "title": "Wait for an operation to finish"
  },
  {
    "apiDisabled": true,
    "description": "Create phrase set",
    "name": "speech.phraseSets.create",
    "stage": "GA",
    "title": "Create phrase set"
  },
  {
    "apiDisabled": true,
    "description": "Delete phrase set",
    "name": "speech.phraseSets.delete",
    "stage": "GA",
    "title": "Delete phrase set"
  },
  {
    "apiDisabled": true,
    "description": "Get phrase sets",
    "name": "speech.phraseSets.get",
    "stage": "GA",
    "title": "Get phrase sets"
  },
  {
    "apiDisabled": true,
    "description": "List phrase sets",
    "name": "speech.phraseSets.list",
    "stage": "GA",
    "title": "List phrase sets"
  },
  {
    "apiDisabled": true,
    "description": "Undelete PhraseSet",
    "name": "speech.phraseSets.undelete",
    "stage": "GA",
    "title": "Undelete PhraseSet"
  },
  {
    "apiDisabled": true,
    "description": "Update phrase set",
    "name": "speech.phraseSets.update",
    "stage": "GA",
    "title": "Update phrase set"
  },
  {
    "apiDisabled": true,
    "description": "Create recognizer",
    "name": "speech.recognizers.create",
    "stage": "GA",
    "title": "Create recognizer"
  },
  {
    "apiDisabled": true,
    "description": "Delete recognizer",
    "name": "speech.recognizers.delete",
    "stage": "GA",
    "title": "Delete recognizer"
  },
  {
    "apiDisabled": true,
    "description": "Get recognizer",
    "name": "speech.recognizers.get",
    "stage": "GA",
    "title": "Get recognizer"
  },
  {
    "apiDisabled": true,
    "description": "List recognizer",
    "name": "speech.recognizers.list",
    "stage": "GA",
    "title": "List recognizer"
  },
  {
    "apiDisabled": true,
    "description": "Use recognizer for recognition",
    "name": "speech.recognizers.recognize",
    "stage": "GA",
    "title": "Use recognizer for recognition"
  },
  {
    "apiDisabled": true,
    "description": "Undelete recognizer",
    "name": "speech.recognizers.undelete",
    "stage": "GA",
    "title": "Undelete recognizer"
  },
  {
    "apiDisabled": true,
    "description": "Update recognizer",
    "name": "speech.recognizers.update",
    "stage": "GA",
    "title": "Update recognizer"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "stackdriver.projects.edit",
    "onlyInPredefinedRoles": true,
    "stage": "DEPRECATED"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "TESTING",
    "name": "stackdriver.projects.get",
    "stage": "DEPRECATED"
  },
  {
    "name": "stackdriver.resourceMetadata.list",
    "stage": "BETA"
  },
  {
    "name": "stackdriver.resourceMetadata.write",
    "stage": "BETA"
  },
  {
    "name": "storage.anywhereCaches.create",
    "stage": "BETA",
    "title": "Create GCS Anywhere Caches"
  },
  {
    "name": "storage.anywhereCaches.disable",
    "stage": "BETA",
    "title": "Disable GCS Anywhere Caches"
  },
  {
    "name": "storage.anywhereCaches.get",
    "stage": "BETA",
    "title": "Get GCS Anywhere Caches Metadata"
  },
  {
    "name": "storage.anywhereCaches.list",
    "stage": "BETA",
    "title": "Get GCS Anywhere Caches Metadata"
  },
  {
    "name": "storage.anywhereCaches.pause",
    "stage": "BETA",
    "title": "Pause GCS Anywhere Caches"
  },
  {
    "name": "storage.anywhereCaches.resume",
    "stage": "BETA",
    "title": "Resume GCS Anywhere Caches"
  },
  {
    "name": "storage.anywhereCaches.update",
    "stage": "BETA",
    "title": "Update GCS Anywhere Caches"
  },
  {
    "name": "storage.bucketOperations.cancel",
    "stage": "GA",
    "title": "Cancel GCS Bucket Long-running Operation"
  },
  {
    "name": "storage.bucketOperations.get",
    "stage": "GA",
    "title": "Get GCS Bucket Long-running Operation"
  },
  {
    "name": "storage.bucketOperations.list",
    "stage": "GA",
    "title": "List GCS Bucket Long-running Operations"
  },
  {
    "name": "storage.buckets.create",
    "stage": "GA",
    "title": "Create GCS Bucket"
  },
  {
    "name": "storage.buckets.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on GCS Bucket"
  },
  {
    "name": "storage.buckets.delete",
    "stage": "GA",
    "title": "Delete GCS Bucket"
  },
  {
    "name": "storage.buckets.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on GCS Bucket"
  },
  {
    "name": "storage.buckets.enableObjectRetention",
    "stage": "GA",
    "title": "Enable Object Retention on GCS Bucket"
  },
  {
    "name": "storage.buckets.exemptFromIpFilter",
    "stage": "BETA",
    "title": "Exempt From IP filtering"
  },
  {
    "name": "storage.buckets.get",
    "stage": "GA",
    "title": "Read GCS Bucket Metadata"
  },
  {
    "name": "storage.buckets.getIamPolicy",
    "stage": "GA",
    "title": "Read GCS Bucket IAM Policy"
  },
  {
    "name": "storage.buckets.getIpFilter",
    "stage": "BETA",
    "title": "Read GCS Bucket Ip Filtering Configuration"
  },
  {
    "name": "storage.buckets.getObjectInsights",
    "stage": "GA",
    "title": "Collect insights for all the objects in the bucket"
  },
  {
    "name": "storage.buckets.list",
    "stage": "GA",
    "title": "List GCS Buckets"
  },
  {
    "name": "storage.buckets.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on GCS Bucket"
  },
  {
    "name": "storage.buckets.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on GCS Bucket"
  },
  {
    "name": "storage.buckets.relocate",
    "stage": "BETA",
    "title": "Relocate GCS Bucket"
  },
  {
    "name": "storage.buckets.restore",
    "stage": "GA",
    "title": "Restore GCS Bucket"
  },
  {
    "name": "storage.buckets.setIamPolicy",
    "stage": "GA",
    "title": "Set GCS Bucket IAM Policy"
  },
  {
    "name": "storage.buckets.setIpFilter",
    "stage": "BETA",
    "title": "Set GCS Bucket Ip Filtering Configuration"
  },
  {
    "name": "storage.buckets.update",
    "stage": "GA",
    "title": "Update GCS Bucket Metadata"
  },
  {
    "name": "storage.folders.create",
    "stage": "GA",
    "title": "Create GCS Folder"
  },
  {
    "name": "storage.folders.delete",
    "stage": "GA",
    "title": "Delete GCS Folder"
  },
  {
    "name": "storage.folders.get",
    "stage": "GA",
    "title": "Get GCS Folder Metadata"
  },
  {
    "name": "storage.folders.list",
    "stage": "GA",
    "title": "List GCS Folder"
  },
  {
    "name": "storage.folders.rename",
    "stage": "GA",
    "title": "Rename GCS Folder"
  },
  {
    "name": "storage.hmacKeys.create",
    "stage": "GA",
    "title": "Create GCS HMAC Key"
  },
  {
    "name": "storage.hmacKeys.delete",
    "stage": "GA",
    "title": "Delete GCS HMAC Key"
  },
  {
    "name": "storage.hmacKeys.get",
    "stage": "GA",
    "title": "Read GCS HMAC Key Metadata"
  },
  {
    "name": "storage.hmacKeys.list",
    "stage": "GA",
    "title": "List GCS HMAC Keys"
  },
  {
    "name": "storage.hmacKeys.update",
    "stage": "GA",
    "title": "Update GCS HMAC Key Metadata"
  },
  {
    "name": "storage.intelligenceConfigs.get",
    "stage": "GA"
  },
  {
    "name": "storage.intelligenceConfigs.update",
    "stage": "GA"
  },
  {
    "name": "storage.managedFolders.create",
    "stage": "GA",
    "title": "Create GCS Managed Folders"
  },
  {
    "name": "storage.managedFolders.delete",
    "stage": "GA",
    "title": "Delete GCS Managed Folders"
  },
  {
    "name": "storage.managedFolders.get",
    "stage": "GA",
    "title": "Get GCS Managed Folders Metadata"
  },
  {
    "name": "storage.managedFolders.getIamPolicy",
    "stage": "GA",
    "title": "Read GCS Managed Folders IAM Policy"
  },
  {
    "name": "storage.managedFolders.list",
    "stage": "GA",
    "title": "List GCS Managed Folders"
  },
  {
    "name": "storage.managedFolders.setIamPolicy",
    "stage": "GA",
    "title": "Set GCS Managed Folders IAM Policy"
  },
  {
    "name": "storage.managementHubs.get",
    "primaryPermission": "storage.intelligenceConfigs.get",
    "stage": "GA"
  },
  {
    "name": "storage.managementHubs.update",
    "primaryPermission": "storage.intelligenceConfigs.update",
    "stage": "GA"
  },
  {
    "name": "storage.multipartUploads.abort",
    "stage": "GA",
    "title": "Abort GCS Multipart Upload"
  },
  {
    "name": "storage.multipartUploads.create",
    "stage": "GA",
    "title": "Create GCS Multipart Upload"
  },
  {
    "name": "storage.multipartUploads.list",
    "stage": "GA",
    "title": "List GCS Multipart Uploads"
  },
  {
    "name": "storage.multipartUploads.listParts",
    "stage": "GA",
    "title": "List GCS Multipart Upload Parts"
  },
  {
    "name": "storage.objects.create",
    "stage": "GA",
    "title": "Create GCS Object"
  },
  {
    "name": "storage.objects.delete",
    "stage": "GA",
    "title": "Delete GCS Object"
  },
  {
    "name": "storage.objects.get",
    "stage": "GA",
    "title": "Read GCS Object Data and Metadata"
  },
  {
    "name": "storage.objects.getIamPolicy",
    "stage": "GA",
    "title": "Get GCS Object IAM Policy"
  },
  {
    "name": "storage.objects.list",
    "stage": "GA",
    "title": "List GCS Objects"
  },
  {
    "name": "storage.objects.move",
    "stage": "GA",
    "title": "Move GCS Object"
  },
  {
    "name": "storage.objects.overrideUnlockedRetention",
    "stage": "GA",
    "title": "Override Unlocked GCS Object Retention"
  },
  {
    "name": "storage.objects.restore",
    "stage": "GA",
    "title": "Restore GCS Object"
  },
  {
    "name": "storage.objects.setIamPolicy",
    "stage": "GA",
    "title": "Set GCS Object IAM Policy"
  },
  {
    "name": "storage.objects.setRetention",
    "stage": "GA",
    "title": "Set GCS Object Retention"
  },
  {
    "name": "storage.objects.update",
    "stage": "GA",
    "title": "Update GCS Object Metadata"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.datasetConfigs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.datasetConfigs.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.datasetConfigs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.datasetConfigs.linkDataset",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.datasetConfigs.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.datasetConfigs.unlinkDataset",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.datasetConfigs.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.locations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.operations.cancel",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.operations.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.reportConfigs.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.reportConfigs.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.reportConfigs.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.reportConfigs.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.reportConfigs.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.reportDetails.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storageinsights.reportDetails.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.agentpools.create",
    "stage": "GA",
    "title": "Create AgentPool"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.agentpools.delete",
    "stage": "GA",
    "title": "Delete AgentPool"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.agentpools.get",
    "stage": "GA",
    "title": "Get AgentPool"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.agentpools.list",
    "stage": "GA",
    "title": "List AgentPools."
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "storagetransfer.agentpools.report",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Report to an AgentPool"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.agentpools.update",
    "stage": "GA",
    "title": "Update AgentPool"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.jobs.create",
    "stage": "GA",
    "title": "Create TransferJob"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.jobs.delete",
    "stage": "GA",
    "title": "Delete TransferJob"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.jobs.get",
    "stage": "GA",
    "title": "Read TransferJob"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.jobs.list",
    "stage": "GA",
    "title": "List TransferJobs and their executions."
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.jobs.run",
    "stage": "GA",
    "title": "Run TransferJob"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.jobs.update",
    "stage": "GA",
    "title": "Update TransferJob"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "storagetransfer.operations.assign",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Assign work for a TransferOperation"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.operations.cancel",
    "stage": "GA",
    "title": "Cancel TransferOperation"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.operations.get",
    "stage": "GA",
    "title": "Read TransferOperation"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.operations.list",
    "stage": "GA",
    "title": "List TransferOperations"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.operations.pause",
    "stage": "GA",
    "title": "Pause TransferOperation"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "name": "storagetransfer.operations.report",
    "onlyInPredefinedRoles": true,
    "stage": "GA",
    "title": "Report progress of a TransferOperation"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.operations.resume",
    "stage": "GA",
    "title": "Resume TransferOperation"
  },
  {
    "apiDisabled": true,
    "name": "storagetransfer.projects.getServiceAccount",
    "stage": "GA",
    "title": "Read Storage Transfer Service Account"
  },
  {
    "apiDisabled": true,
    "name": "stream.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "stream.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "stream.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "stream.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "stream.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "stream.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "stream.streamContents.build",
    "stage": "GA",
    "title": "Build StreamContent"
  },
  {
    "apiDisabled": true,
    "name": "stream.streamContents.create",
    "stage": "GA",
    "title": "Create StreamContent"
  },
  {
    "apiDisabled": true,
    "name": "stream.streamContents.delete",
    "stage": "GA",
    "title": "Delete StreamContent"
  },
  {
    "apiDisabled": true,
    "name": "stream.streamContents.get",
    "stage": "GA",
    "title": "Get StreamContent"
  },
  {
    "apiDisabled": true,
    "name": "stream.streamContents.list",
    "stage": "GA",
    "title": "List StreamContent"
  },
  {
    "apiDisabled": true,
    "name": "stream.streamContents.update",
    "stage": "GA",
    "title": "Update StreamContent"
  },
  {
    "apiDisabled": true,
    "name": "stream.streamInstances.create",
    "stage": "GA",
    "title": "Create StreamInstance"
  },
  {
    "apiDisabled": true,
    "name": "stream.streamInstances.delete",
    "stage": "GA",
    "title": "Delete StreamInstance"
  },
  {
    "apiDisabled": true,
    "name": "stream.streamInstances.get",
    "stage": "GA",
    "title": "Get StreamInstance"
  },
  {
    "apiDisabled": true,
    "name": "stream.streamInstances.list",
    "stage": "GA",
    "title": "List StreamInstance"
  },
  {
    "apiDisabled": true,
    "name": "stream.streamInstances.rollout",
    "stage": "GA",
    "title": "Rollout StreamInstance"
  },
  {
    "apiDisabled": true,
    "name": "stream.streamInstances.update",
    "stage": "GA",
    "title": "Update StreamInstance"
  },
  {
    "apiDisabled": true,
    "name": "subscribewithgoogledeveloper.tools.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Approve a TNA blueprint",
    "name": "telcoautomation.blueprints.approve",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Create a TNA blueprint",
    "name": "telcoautomation.blueprints.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Delete a TNA blueprint",
    "name": "telcoautomation.blueprints.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Get a TNA blueprint",
    "name": "telcoautomation.blueprints.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "List TNA blueprints",
    "name": "telcoautomation.blueprints.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Propose a TNA blueprint",
    "name": "telcoautomation.blueprints.propose",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Update a TNA blueprint",
    "name": "telcoautomation.blueprints.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Applies a TNA deployment package to Orchestration Cluster.",
    "name": "telcoautomation.deployments.apply",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Compute status of a TNA deployment",
    "name": "telcoautomation.deployments.computeStatus",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Create a TNA deployment",
    "name": "telcoautomation.deployments.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Delete a TNA deployment",
    "name": "telcoautomation.deployments.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Get a TNA deployment",
    "name": "telcoautomation.deployments.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "List TNA deployments",
    "name": "telcoautomation.deployments.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Rollback TNA deployment",
    "name": "telcoautomation.deployments.rollback",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Update a TNA deployment",
    "name": "telcoautomation.deployments.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "customRolesSupportLevel": "NOT_SUPPORTED",
    "description": "Creates TNA edge cluster's SLM instance",
    "name": "telcoautomation.edgeSlms.create",
    "onlyInPredefinedRoles": true,
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Delete TNA edge cluster's SLM instance",
    "name": "telcoautomation.edgeSlms.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Get TNA edge cluster's SLM instance",
    "name": "telcoautomation.edgeSlms.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "List TNA edge cluster's SLM instances",
    "name": "telcoautomation.edgeSlms.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Apply a TNA hydrated deployment to workload cluster.",
    "name": "telcoautomation.hydratedDeployments.apply",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Get a TNA hydrated deployment.",
    "name": "telcoautomation.hydratedDeployments.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "List TNA hydrated deployments.",
    "name": "telcoautomation.hydratedDeployments.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Update a TNA hydrated deployment.",
    "name": "telcoautomation.hydratedDeployments.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "telcoautomation.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "telcoautomation.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "telcoautomation.operations.cancel",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "telcoautomation.operations.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "telcoautomation.operations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "telcoautomation.operations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "telcoautomation.orchestrationClusters.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "telcoautomation.orchestrationClusters.delete",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "telcoautomation.orchestrationClusters.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "telcoautomation.orchestrationClusters.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "description": "Get a TNA public blueprint.",
    "name": "telcoautomation.publicBlueprints.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "telcoautomation.publicBlueprints.list",
    "stage": "BETA"
  },
  {
    "name": "telemetry.consumers.writeLogs",
    "stage": "BETA"
  },
  {
    "name": "telemetry.consumers.writeMetrics",
    "stage": "BETA"
  },
  {
    "name": "telemetry.consumers.writeTraces",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "telemetry.metrics.write",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "telemetry.traces.write",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "description": "Create a DataSet",
    "name": "timeseriesinsights.datasets.create",
    "stage": "BETA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "description": "Delete a DataSet",
    "name": "timeseriesinsights.datasets.delete",
    "stage": "BETA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "description": "Evaluate one slice",
    "name": "timeseriesinsights.datasets.evaluate",
    "stage": "BETA",
    "title": "Evaluate"
  },
  {
    "apiDisabled": true,
    "description": "List DataSets",
    "name": "timeseriesinsights.datasets.list",
    "stage": "BETA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "description": "Query from a DataSet",
    "name": "timeseriesinsights.datasets.query",
    "stage": "BETA",
    "title": "Query"
  },
  {
    "apiDisabled": true,
    "description": "Append events to the DataSet",
    "name": "timeseriesinsights.datasets.update",
    "stage": "BETA",
    "title": "Append"
  },
  {
    "apiDisabled": true,
    "name": "timeseriesinsights.locations.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "timeseriesinsights.locations.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "tpu.acceleratortypes.get",
    "stage": "GA",
    "title": "Get acceleratorTypes"
  },
  {
    "apiDisabled": true,
    "name": "tpu.acceleratortypes.list",
    "stage": "GA",
    "title": "List acceleratorTypes"
  },
  {
    "apiDisabled": true,
    "name": "tpu.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "tpu.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.create",
    "stage": "GA",
    "title": "Create Nodes"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.delete",
    "stage": "GA",
    "title": "Delete Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.get",
    "stage": "GA",
    "title": "Get Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.list",
    "stage": "GA",
    "title": "List Nodes"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.performMaintenance",
    "stage": "GA",
    "title": "Perform Maintenance on Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.reimage",
    "stage": "GA",
    "title": "Reimage Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.reset",
    "stage": "GA",
    "title": "Reset Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.simulateMaintenanceEvent",
    "stage": "GA",
    "title": "Simulate Maintenance Event on Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.start",
    "stage": "GA",
    "title": "Start Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.stop",
    "stage": "GA",
    "title": "Stop Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.nodes.update",
    "stage": "GA",
    "title": "Update Node"
  },
  {
    "apiDisabled": true,
    "name": "tpu.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "tpu.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "tpu.runtimeversions.get",
    "stage": "GA",
    "title": "Get runtimeVersions"
  },
  {
    "apiDisabled": true,
    "name": "tpu.runtimeversions.list",
    "stage": "GA",
    "title": "List runtimeVersions"
  },
  {
    "apiDisabled": true,
    "name": "tpu.tensorflowversions.get",
    "stage": "GA",
    "title": "Get tensorflowVersions"
  },
  {
    "apiDisabled": true,
    "name": "tpu.tensorflowversions.list",
    "stage": "GA",
    "title": "List tensorflowVersions"
  },
  {
    "apiDisabled": true,
    "name": "trafficdirector.networks.getConfigs",
    "stage": "BETA",
    "title": "GET"
  },
  {
    "apiDisabled": true,
    "name": "trafficdirector.networks.reportMetrics",
    "stage": "BETA",
    "title": "Report"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobTemplates.create",
    "stage": "GA",
    "title": "Create Transcoder Job Template"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobTemplates.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on Job Template"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobTemplates.delete",
    "stage": "GA",
    "title": "Delete Transcoder Job Template"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobTemplates.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on Job Template"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobTemplates.get",
    "stage": "GA",
    "title": "Read Transcoder Job Template"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobTemplates.list",
    "stage": "GA",
    "title": "List Transcoder Job Templates"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobTemplates.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on Job Template"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobTemplates.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on Job Template"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobs.create",
    "stage": "GA",
    "title": "Create Transcoder Job"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobs.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on Job"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobs.delete",
    "stage": "GA",
    "title": "Delete Transcoder Job"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobs.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on Job"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobs.get",
    "stage": "GA",
    "title": "Read Transcoder Job"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobs.list",
    "stage": "GA",
    "title": "List Transcoder Jobs"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobs.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tag Bindings on Job"
  },
  {
    "apiDisabled": true,
    "name": "transcoder.jobs.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on Job"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.appliances.create",
    "stage": "BETA",
    "title": "Create Appliance"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.appliances.delete",
    "stage": "BETA",
    "title": "Delete Appliance"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.appliances.get",
    "stage": "BETA",
    "title": "Get Appliance"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.appliances.list",
    "stage": "BETA",
    "title": "List Appliances"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.appliances.update",
    "stage": "BETA",
    "title": "Update Appliance"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.credentials.get",
    "stage": "BETA",
    "title": "Get Credential"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.operations.list",
    "stage": "BETA",
    "title": "List Operations"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.orders.create",
    "stage": "BETA",
    "title": "Create Order"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.orders.delete",
    "stage": "BETA",
    "title": "Delete Order"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.orders.get",
    "stage": "BETA",
    "title": "Get Order"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.orders.list",
    "stage": "BETA",
    "title": "List Orders"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.orders.update",
    "stage": "BETA",
    "title": "Update Order"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.savedAddresses.create",
    "stage": "BETA",
    "title": "Create Saved Address"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.savedAddresses.delete",
    "stage": "BETA",
    "title": "Delete Saved Address"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.savedAddresses.get",
    "stage": "BETA",
    "title": "Get Saved Address"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.savedAddresses.list",
    "stage": "BETA",
    "title": "List Saved Addresses"
  },
  {
    "apiDisabled": true,
    "name": "transferappliance.savedAddresses.update",
    "stage": "BETA",
    "title": "Update Saved Address"
  },
  {
    "apiDisabled": true,
    "description": "Create portal",
    "name": "translationhub.portals.create",
    "stage": "BETA",
    "title": "Create portal"
  },
  {
    "apiDisabled": true,
    "description": "Delete portal",
    "name": "translationhub.portals.delete",
    "stage": "BETA",
    "title": "Delete portal"
  },
  {
    "apiDisabled": true,
    "description": "Get portal",
    "name": "translationhub.portals.get",
    "stage": "BETA",
    "title": "Get portal"
  },
  {
    "apiDisabled": true,
    "description": "List portals",
    "name": "translationhub.portals.list",
    "stage": "BETA",
    "title": "List portals"
  },
  {
    "apiDisabled": true,
    "description": "Update portal",
    "name": "translationhub.portals.update",
    "stage": "BETA",
    "title": "Update portal"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.cdnKeys.create",
    "stage": "GA",
    "title": "Create Video Stitcher CDN key"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.cdnKeys.delete",
    "stage": "GA",
    "title": "Delete Video Stitcher CDN key"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.cdnKeys.get",
    "stage": "GA",
    "title": "Read Video Stitcher CDN key"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.cdnKeys.list",
    "stage": "GA",
    "title": "List Video Stitcher CDN keys"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.cdnKeys.update",
    "stage": "GA",
    "title": "Update Video Stitcher CDN key"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.liveAdTagDetails.get",
    "stage": "GA",
    "title": "Get Video Stitcher Live Ad Tag Request"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.liveAdTagDetails.list",
    "stage": "GA",
    "title": "List Video Stitcher Live Ad Tag Requests"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.liveConfigs.create",
    "stage": "GA",
    "title": "Create Video Stitcher Live Config"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.liveConfigs.delete",
    "stage": "GA",
    "title": "Delete Video Stitcher Live Config"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.liveConfigs.get",
    "stage": "GA",
    "title": "Read Video Stitcher Live Config"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.liveConfigs.list",
    "stage": "GA",
    "title": "List Video Stitcher Live Configs"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.liveSessions.create",
    "stage": "GA",
    "title": "Create Video Stitcher Live Session"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.liveSessions.get",
    "stage": "GA",
    "title": "Read Video Stitcher Live Session"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.operations.cancel",
    "stage": "GA",
    "title": "Cancel Video Stitcher Operation"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.operations.delete",
    "stage": "GA",
    "title": "Delete Video Stitcher Operation"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.operations.get",
    "stage": "GA",
    "title": "Get Video Stitcher Operation"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.operations.list",
    "stage": "GA",
    "title": "List Video Stitcher Operations"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.slates.create",
    "stage": "GA",
    "title": "Create Video Stitcher Slate"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.slates.delete",
    "stage": "GA",
    "title": "Delete Video Stitcher Slate"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.slates.get",
    "stage": "GA",
    "title": "Read Video Stitcher Slate"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.slates.list",
    "stage": "GA",
    "title": "List Video Stitcher Slate"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.slates.update",
    "stage": "GA",
    "title": "Update Video Stitcher Slate"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.vodAdTagDetails.get",
    "stage": "GA",
    "title": "Get Video Stitcher VOD Ad Tag Request"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.vodAdTagDetails.list",
    "stage": "GA",
    "title": "List Video Stitcher VOD Ad Tag Requests"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.vodConfigs.create",
    "stage": "GA",
    "title": "Create Video Stitcher Vod Config"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.vodConfigs.delete",
    "stage": "GA",
    "title": "Delete Video Stitcher Vod Config"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.vodConfigs.get",
    "stage": "GA",
    "title": "Read Video Stitcher Vod Config"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.vodConfigs.list",
    "stage": "GA",
    "title": "List Video Stitcher Vod Configs"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.vodConfigs.update",
    "stage": "GA",
    "title": "Update Video Stitcher Vod Config"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.vodSessions.create",
    "stage": "GA",
    "title": "Create Video Stitcher VOD Session"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.vodSessions.get",
    "stage": "GA",
    "title": "Read Video Stitcher VOD Session"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.vodStitchDetails.get",
    "stage": "GA",
    "title": "Get Video Stitcher VOD Stitch Detail"
  },
  {
    "apiDisabled": true,
    "name": "videostitcher.vodStitchDetails.list",
    "stage": "GA",
    "title": "List Video Stitcher VOD Stitch Details"
  },
  {
    "apiDisabled": true,
    "description": "Create analyses.",
    "name": "visionai.analyses.create",
    "stage": "BETA",
    "title": "Create analyses."
  },
  {
    "apiDisabled": true,
    "description": "Delete analyses.",
    "name": "visionai.analyses.delete",
    "stage": "BETA",
    "title": "Delete analyses."
  },
  {
    "apiDisabled": true,
    "description": "Get analyses.",
    "name": "visionai.analyses.get",
    "stage": "BETA",
    "title": "Get analyses."
  },
  {
    "apiDisabled": true,
    "description": "Get IAM policy of analyses.",
    "name": "visionai.analyses.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM policy of analyses."
  },
  {
    "apiDisabled": true,
    "description": "List analyses.",
    "name": "visionai.analyses.list",
    "stage": "BETA",
    "title": "List analyses."
  },
  {
    "apiDisabled": true,
    "description": "Set IAM policy of analyses.",
    "name": "visionai.analyses.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM policy of analyses."
  },
  {
    "apiDisabled": true,
    "description": "Update analyses.",
    "name": "visionai.analyses.update",
    "stage": "BETA",
    "title": "Update analyses."
  },
  {
    "apiDisabled": true,
    "description": "Create annotations.",
    "name": "visionai.annotations.create",
    "stage": "BETA",
    "title": "Create annotations."
  },
  {
    "apiDisabled": true,
    "description": "Delete annotations.",
    "name": "visionai.annotations.delete",
    "stage": "BETA",
    "title": "Delete annotations."
  },
  {
    "apiDisabled": true,
    "description": "Get annotations.",
    "name": "visionai.annotations.get",
    "stage": "BETA",
    "title": "Get annotations."
  },
  {
    "apiDisabled": true,
    "description": "List annotations under an asset.",
    "name": "visionai.annotations.list",
    "stage": "BETA",
    "title": "List annotations under an asset."
  },
  {
    "apiDisabled": true,
    "description": "Update annotations.",
    "name": "visionai.annotations.update",
    "stage": "BETA",
    "title": "Update annotations."
  },
  {
    "apiDisabled": true,
    "description": "Create applications.",
    "name": "visionai.applications.create",
    "stage": "BETA",
    "title": "Create applications."
  },
  {
    "apiDisabled": true,
    "description": "Delete applications.",
    "name": "visionai.applications.delete",
    "stage": "BETA",
    "title": "Delete applications."
  },
  {
    "apiDisabled": true,
    "description": "Deploy applications.",
    "name": "visionai.applications.deploy",
    "stage": "BETA",
    "title": "Deploy applications."
  },
  {
    "apiDisabled": true,
    "description": "Get applications.",
    "name": "visionai.applications.get",
    "stage": "BETA",
    "title": "Get applications."
  },
  {
    "apiDisabled": true,
    "description": "List applications.",
    "name": "visionai.applications.list",
    "stage": "BETA",
    "title": "List applications."
  },
  {
    "apiDisabled": true,
    "description": "Undeploy applications.",
    "name": "visionai.applications.undeploy",
    "stage": "BETA",
    "title": "Undeploy applications."
  },
  {
    "apiDisabled": true,
    "description": "Update applications.",
    "name": "visionai.applications.update",
    "stage": "BETA",
    "title": "Update applications."
  },
  {
    "apiDisabled": true,
    "description": "Analyze an asset to provide search capability.",
    "name": "visionai.assets.analyze",
    "stage": "BETA",
    "title": "Analyze an asset."
  },
  {
    "apiDisabled": true,
    "description": "Clip assets for exporting.",
    "name": "visionai.assets.clip",
    "stage": "BETA",
    "title": "Clip assets for exporting."
  },
  {
    "apiDisabled": true,
    "description": "Create assets.",
    "name": "visionai.assets.create",
    "stage": "BETA",
    "title": "Create assets."
  },
  {
    "apiDisabled": true,
    "description": "Delete assets.",
    "name": "visionai.assets.delete",
    "stage": "BETA",
    "title": "Delete assets."
  },
  {
    "apiDisabled": true,
    "description": "Generates uri of HLS manifest for streaming.",
    "name": "visionai.assets.generateHlsUri",
    "stage": "BETA",
    "title": "Generates uri of HLS manifest for streaming."
  },
  {
    "apiDisabled": true,
    "description": "Get assets.",
    "name": "visionai.assets.get",
    "stage": "BETA",
    "title": "Get assets."
  },
  {
    "apiDisabled": true,
    "description": "Indexes an asset for search.",
    "name": "visionai.assets.index",
    "stage": "BETA",
    "title": "Indexes an asset."
  },
  {
    "apiDisabled": true,
    "description": "Ingest assets.",
    "name": "visionai.assets.ingest",
    "stage": "BETA",
    "title": "Ingest assets."
  },
  {
    "apiDisabled": true,
    "description": "List assets under a corpus.",
    "name": "visionai.assets.list",
    "stage": "BETA",
    "title": "List assets under a corpus."
  },
  {
    "apiDisabled": true,
    "description": "Remove asset's index data for search.",
    "name": "visionai.assets.removeIndex",
    "stage": "BETA",
    "title": "Remove asset index."
  },
  {
    "apiDisabled": true,
    "description": "Search assets.",
    "name": "visionai.assets.search",
    "stage": "BETA",
    "title": "Search assets."
  },
  {
    "apiDisabled": true,
    "description": "Update assets.",
    "name": "visionai.assets.update",
    "stage": "BETA",
    "title": "Update assets."
  },
  {
    "apiDisabled": true,
    "description": "Upload assets.",
    "name": "visionai.assets.upload",
    "stage": "BETA",
    "title": "Upload assets."
  },
  {
    "apiDisabled": true,
    "description": "Create clusters.",
    "name": "visionai.clusters.create",
    "stage": "BETA",
    "title": "Create clusters."
  },
  {
    "apiDisabled": true,
    "description": "Delete clusters.",
    "name": "visionai.clusters.delete",
    "stage": "BETA",
    "title": "Delete clusters."
  },
  {
    "apiDisabled": true,
    "description": "Get clusters.",
    "name": "visionai.clusters.get",
    "stage": "BETA",
    "title": "Get clusters."
  },
  {
    "apiDisabled": true,
    "description": "Get IAM policy of clusters.",
    "name": "visionai.clusters.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM policy of clusters."
  },
  {
    "apiDisabled": true,
    "description": "List clusters.",
    "name": "visionai.clusters.list",
    "stage": "BETA",
    "title": "List clusters."
  },
  {
    "apiDisabled": true,
    "description": "Set IAM policy of clusters.",
    "name": "visionai.clusters.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM policy of clusters."
  },
  {
    "apiDisabled": true,
    "description": "Update clusters.",
    "name": "visionai.clusters.update",
    "stage": "BETA",
    "title": "Update clusters."
  },
  {
    "apiDisabled": true,
    "description": "Watch event from the cluster.",
    "name": "visionai.clusters.watch",
    "stage": "BETA",
    "title": "Watch event from the cluster."
  },
  {
    "apiDisabled": true,
    "description": "Corpora level batch analyze.",
    "name": "visionai.corpora.analyze",
    "stage": "BETA",
    "title": "Corpora level batch analyze."
  },
  {
    "apiDisabled": true,
    "description": "Create corpora.",
    "name": "visionai.corpora.create",
    "stage": "BETA",
    "title": "Create corpora."
  },
  {
    "apiDisabled": true,
    "description": "Delete corpora.",
    "name": "visionai.corpora.delete",
    "stage": "BETA",
    "title": "Delete corpora."
  },
  {
    "apiDisabled": true,
    "description": "Get corpora.",
    "name": "visionai.corpora.get",
    "stage": "BETA",
    "title": "Get corpora."
  },
  {
    "apiDisabled": true,
    "description": "Import assets to a corpus.",
    "name": "visionai.corpora.import",
    "stage": "BETA",
    "title": "Import assets to a corpus."
  },
  {
    "apiDisabled": true,
    "description": "List corpora under a project.",
    "name": "visionai.corpora.list",
    "stage": "BETA",
    "title": "List corpora under a project."
  },
  {
    "apiDisabled": true,
    "description": "Corpora level search suggestion.",
    "name": "visionai.corpora.suggest",
    "stage": "BETA",
    "title": "Corpora level search suggestion."
  },
  {
    "apiDisabled": true,
    "description": "Update corpora.",
    "name": "visionai.corpora.update",
    "stage": "BETA",
    "title": "Update corpora."
  },
  {
    "apiDisabled": true,
    "description": "Create dataSchemas.",
    "name": "visionai.dataSchemas.create",
    "stage": "BETA",
    "title": "Create dataSchemas."
  },
  {
    "apiDisabled": true,
    "description": "Delete dataSchemas.",
    "name": "visionai.dataSchemas.delete",
    "stage": "BETA",
    "title": "Delete dataSchemas."
  },
  {
    "apiDisabled": true,
    "description": "Get dataSchemas.",
    "name": "visionai.dataSchemas.get",
    "stage": "BETA",
    "title": "Get dataSchemas."
  },
  {
    "apiDisabled": true,
    "description": "List dataSchemas under a corpus.",
    "name": "visionai.dataSchemas.list",
    "stage": "BETA",
    "title": "List dataSchemas under a corpus."
  },
  {
    "apiDisabled": true,
    "description": "Update dataSchemas.",
    "name": "visionai.dataSchemas.update",
    "stage": "BETA",
    "title": "Update dataSchemas."
  },
  {
    "apiDisabled": true,
    "description": "Validate dataSchemas.",
    "name": "visionai.dataSchemas.validate",
    "stage": "BETA",
    "title": "Validate dataSchemas."
  },
  {
    "apiDisabled": true,
    "description": "Create drafts.",
    "name": "visionai.drafts.create",
    "stage": "BETA",
    "title": "Create drafts."
  },
  {
    "apiDisabled": true,
    "description": "Delete drafts.",
    "name": "visionai.drafts.delete",
    "stage": "BETA",
    "title": "Delete drafts."
  },
  {
    "apiDisabled": true,
    "description": "Get drafts.",
    "name": "visionai.drafts.get",
    "stage": "BETA",
    "title": "Get drafts."
  },
  {
    "apiDisabled": true,
    "description": "List drafts.",
    "name": "visionai.drafts.list",
    "stage": "BETA",
    "title": "List drafts."
  },
  {
    "apiDisabled": true,
    "description": "Update drafts.",
    "name": "visionai.drafts.update",
    "stage": "BETA",
    "title": "Update drafts."
  },
  {
    "apiDisabled": true,
    "description": "Create events.",
    "name": "visionai.events.create",
    "stage": "BETA",
    "title": "Create events."
  },
  {
    "apiDisabled": true,
    "description": "Delete events.",
    "name": "visionai.events.delete",
    "stage": "BETA",
    "title": "Delete events."
  },
  {
    "apiDisabled": true,
    "description": "Get events.",
    "name": "visionai.events.get",
    "stage": "BETA",
    "title": "Get events."
  },
  {
    "apiDisabled": true,
    "description": "Get IAM policy of events.",
    "name": "visionai.events.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM policy of events."
  },
  {
    "apiDisabled": true,
    "description": "List events.",
    "name": "visionai.events.list",
    "stage": "BETA",
    "title": "List events."
  },
  {
    "apiDisabled": true,
    "description": "Set IAM policy of events.",
    "name": "visionai.events.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM policy of events."
  },
  {
    "apiDisabled": true,
    "description": "Update events.",
    "name": "visionai.events.update",
    "stage": "BETA",
    "title": "Update events."
  },
  {
    "apiDisabled": true,
    "description": "Create indexEndpoints.",
    "name": "visionai.indexEndpoints.create",
    "stage": "BETA",
    "title": "Create indexEndpoints."
  },
  {
    "apiDisabled": true,
    "description": "Delete indexEndpoints.",
    "name": "visionai.indexEndpoints.delete",
    "stage": "BETA",
    "title": "Delete indexEndpoints."
  },
  {
    "apiDisabled": true,
    "description": "Deploy an index to indexEndpoint.",
    "name": "visionai.indexEndpoints.deploy",
    "stage": "BETA",
    "title": "Deploy an index to indexEndpoint."
  },
  {
    "apiDisabled": true,
    "description": "Get indexEndpoints.",
    "name": "visionai.indexEndpoints.get",
    "stage": "BETA",
    "title": "Get indexEndpoints."
  },
  {
    "apiDisabled": true,
    "description": "List indexEndpoints.",
    "name": "visionai.indexEndpoints.list",
    "stage": "BETA",
    "title": "List indexEndpoints."
  },
  {
    "apiDisabled": true,
    "description": "Search assets for a given indexEndpoint.",
    "name": "visionai.indexEndpoints.search",
    "stage": "BETA",
    "title": "Search assets for a given indexEndpoint."
  },
  {
    "apiDisabled": true,
    "description": "Undeploy an index from indexEndpoint.",
    "name": "visionai.indexEndpoints.undeploy",
    "stage": "BETA",
    "title": "Undeploy an index from indexEndpoint."
  },
  {
    "apiDisabled": true,
    "description": "Update indexEndpoints.",
    "name": "visionai.indexEndpoints.update",
    "stage": "BETA",
    "title": "Update indexEndpoints."
  },
  {
    "apiDisabled": true,
    "description": "Create Indexes to search analyzed assets.",
    "name": "visionai.indexes.create",
    "stage": "BETA",
    "title": "Create Indexes."
  },
  {
    "apiDisabled": true,
    "description": "Delete Image Indexes under a corpus.",
    "name": "visionai.indexes.delete",
    "stage": "BETA",
    "title": "Delete Image Indexes."
  },
  {
    "apiDisabled": true,
    "description": "Get Indexes.",
    "name": "visionai.indexes.get",
    "stage": "BETA",
    "title": "Get Indexes."
  },
  {
    "apiDisabled": true,
    "description": "List all the Indexes under a corpus.",
    "name": "visionai.indexes.list",
    "stage": "BETA",
    "title": "List Indexes under a corpus."
  },
  {
    "apiDisabled": true,
    "description": "Update Indexes to search analyzed assets.",
    "name": "visionai.indexes.update",
    "stage": "BETA",
    "title": "Update Indexes."
  },
  {
    "apiDisabled": true,
    "description": "View all the assets in an index.",
    "name": "visionai.indexes.viewAssets",
    "stage": "BETA",
    "title": "View assets in an index."
  },
  {
    "apiDisabled": true,
    "description": "Get instances.",
    "name": "visionai.instances.get",
    "stage": "BETA",
    "title": "Get instances."
  },
  {
    "apiDisabled": true,
    "description": "List instances.",
    "name": "visionai.instances.list",
    "stage": "BETA",
    "title": "List instances."
  },
  {
    "apiDisabled": true,
    "description": "Get locations",
    "name": "visionai.locations.get",
    "stage": "BETA",
    "title": "Get locations"
  },
  {
    "apiDisabled": true,
    "description": "List locations",
    "name": "visionai.locations.list",
    "stage": "BETA",
    "title": "List locations"
  },
  {
    "apiDisabled": true,
    "description": "Cancel operations",
    "name": "visionai.operations.cancel",
    "stage": "BETA",
    "title": "Cancel operations"
  },
  {
    "apiDisabled": true,
    "description": "Delete operations",
    "name": "visionai.operations.delete",
    "stage": "BETA",
    "title": "Delete operations"
  },
  {
    "apiDisabled": true,
    "description": "Get operations",
    "name": "visionai.operations.get",
    "stage": "BETA",
    "title": "Get operations"
  },
  {
    "apiDisabled": true,
    "description": "List operations",
    "name": "visionai.operations.list",
    "stage": "BETA",
    "title": "List operations"
  },
  {
    "apiDisabled": true,
    "description": "Wait operations.",
    "name": "visionai.operations.wait",
    "stage": "BETA",
    "title": "Wait operations"
  },
  {
    "apiDisabled": true,
    "description": "Create operators.",
    "name": "visionai.operators.create",
    "stage": "BETA",
    "title": "Create operators."
  },
  {
    "apiDisabled": true,
    "description": "Delete operators.",
    "name": "visionai.operators.delete",
    "stage": "BETA",
    "title": "Delete operators."
  },
  {
    "apiDisabled": true,
    "description": "Get operators.",
    "name": "visionai.operators.get",
    "stage": "BETA",
    "title": "Get operators."
  },
  {
    "apiDisabled": true,
    "description": "Get IAM policy of operators.",
    "name": "visionai.operators.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM policy of operators."
  },
  {
    "apiDisabled": true,
    "description": "List operators.",
    "name": "visionai.operators.list",
    "stage": "BETA",
    "title": "List operators."
  },
  {
    "apiDisabled": true,
    "description": "Set IAM policy of operators.",
    "name": "visionai.operators.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM policy of operators."
  },
  {
    "apiDisabled": true,
    "description": "Update operators.",
    "name": "visionai.operators.update",
    "stage": "BETA",
    "title": "Update operators."
  },
  {
    "apiDisabled": true,
    "description": "Create processors.",
    "name": "visionai.processors.create",
    "stage": "BETA",
    "title": "Create processors."
  },
  {
    "apiDisabled": true,
    "description": "Delete processors.",
    "name": "visionai.processors.delete",
    "stage": "BETA",
    "title": "Delete processors."
  },
  {
    "apiDisabled": true,
    "description": "Get processors.",
    "name": "visionai.processors.get",
    "stage": "BETA",
    "title": "Get processors."
  },
  {
    "apiDisabled": true,
    "description": "List processors.",
    "name": "visionai.processors.list",
    "stage": "BETA",
    "title": "List processors."
  },
  {
    "apiDisabled": true,
    "description": "List Prebuilt Processor.",
    "name": "visionai.processors.listPrebuilt",
    "stage": "BETA",
    "title": "List Prebuilt Processor"
  },
  {
    "apiDisabled": true,
    "description": "Update processors.",
    "name": "visionai.processors.update",
    "stage": "BETA",
    "title": "Update processors."
  },
  {
    "apiDisabled": true,
    "description": "Create searchConfigs.",
    "name": "visionai.searchConfigs.create",
    "stage": "BETA",
    "title": "Create searchConfigs."
  },
  {
    "apiDisabled": true,
    "description": "Delete searchConfigs.",
    "name": "visionai.searchConfigs.delete",
    "stage": "BETA",
    "title": "Delete searchConfigs."
  },
  {
    "apiDisabled": true,
    "description": "Get searchConfigs.",
    "name": "visionai.searchConfigs.get",
    "stage": "BETA",
    "title": "Get searchConfigs."
  },
  {
    "apiDisabled": true,
    "description": "List searchConfigs under a corpus.",
    "name": "visionai.searchConfigs.list",
    "stage": "BETA",
    "title": "List searchConfigs under a corpus."
  },
  {
    "apiDisabled": true,
    "description": "Update searchConfigs.",
    "name": "visionai.searchConfigs.update",
    "stage": "BETA",
    "title": "Update searchConfigs."
  },
  {
    "apiDisabled": true,
    "description": "Acquire a lease on series.",
    "name": "visionai.series.acquireLease",
    "stage": "BETA",
    "title": "Acquire a lease on series."
  },
  {
    "apiDisabled": true,
    "description": "Create series.",
    "name": "visionai.series.create",
    "stage": "BETA",
    "title": "Create series."
  },
  {
    "apiDisabled": true,
    "description": "Delete series.",
    "name": "visionai.series.delete",
    "stage": "BETA",
    "title": "Delete series."
  },
  {
    "apiDisabled": true,
    "description": "Get series.",
    "name": "visionai.series.get",
    "stage": "BETA",
    "title": "Get series."
  },
  {
    "apiDisabled": true,
    "description": "Get IAM policy of series.",
    "name": "visionai.series.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM policy of series."
  },
  {
    "apiDisabled": true,
    "description": "List series.",
    "name": "visionai.series.list",
    "stage": "BETA",
    "title": "List series."
  },
  {
    "apiDisabled": true,
    "description": "Receive packets from series.",
    "name": "visionai.series.receive",
    "stage": "BETA",
    "title": "Receive packets from series."
  },
  {
    "apiDisabled": true,
    "description": "Release a lease on series.",
    "name": "visionai.series.releaseLease",
    "stage": "BETA",
    "title": "Release a lease on series."
  },
  {
    "apiDisabled": true,
    "description": "Renew a lease on series.",
    "name": "visionai.series.renewLease",
    "stage": "BETA",
    "title": "Renew a lease on series."
  },
  {
    "apiDisabled": true,
    "description": "Send packets to series.",
    "name": "visionai.series.send",
    "stage": "BETA",
    "title": "Send packets to series."
  },
  {
    "apiDisabled": true,
    "description": "Set IAM policy of series.",
    "name": "visionai.series.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM policy of series."
  },
  {
    "apiDisabled": true,
    "description": "Update series.",
    "name": "visionai.series.update",
    "stage": "BETA",
    "title": "Update series."
  },
  {
    "apiDisabled": true,
    "description": "Create streams.",
    "name": "visionai.streams.create",
    "stage": "BETA",
    "title": "Create streams."
  },
  {
    "apiDisabled": true,
    "description": "Delete streams.",
    "name": "visionai.streams.delete",
    "stage": "BETA",
    "title": "Delete streams."
  },
  {
    "apiDisabled": true,
    "description": "Get streams.",
    "name": "visionai.streams.get",
    "stage": "BETA",
    "title": "Get streams."
  },
  {
    "apiDisabled": true,
    "description": "Get IAM policy of streams.",
    "name": "visionai.streams.getIamPolicy",
    "stage": "BETA",
    "title": "Get IAM policy of streams."
  },
  {
    "apiDisabled": true,
    "description": "List streams.",
    "name": "visionai.streams.list",
    "stage": "BETA",
    "title": "List streams."
  },
  {
    "apiDisabled": true,
    "description": "Receive packets from stream.",
    "name": "visionai.streams.receive",
    "stage": "BETA",
    "title": "Receive packets from stream."
  },
  {
    "apiDisabled": true,
    "description": "Send packets to stream.",
    "name": "visionai.streams.send",
    "stage": "BETA",
    "title": "Send packets to stream."
  },
  {
    "apiDisabled": true,
    "description": "Set IAM policy of streams.",
    "name": "visionai.streams.setIamPolicy",
    "stage": "BETA",
    "title": "Set IAM policy of streams."
  },
  {
    "apiDisabled": true,
    "description": "Update streams.",
    "name": "visionai.streams.update",
    "stage": "BETA",
    "title": "Update streams."
  },
  {
    "apiDisabled": true,
    "description": "Create uistreams.",
    "name": "visionai.uistreams.create",
    "stage": "BETA",
    "title": "Create uistreams."
  },
  {
    "apiDisabled": true,
    "description": "Delete uistreams.",
    "name": "visionai.uistreams.delete",
    "stage": "BETA",
    "title": "Delete uistreams."
  },
  {
    "apiDisabled": true,
    "description": "Generate stream thumbnails.",
    "name": "visionai.uistreams.generateStreamThumbnails",
    "stage": "BETA",
    "title": "Generate stream thumbnails."
  },
  {
    "apiDisabled": true,
    "description": "Get uistreams.",
    "name": "visionai.uistreams.get",
    "stage": "BETA",
    "title": "Get uistreams."
  },
  {
    "apiDisabled": true,
    "description": "List uistreams.",
    "name": "visionai.uistreams.list",
    "stage": "BETA",
    "title": "List uistreams."
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotationSets.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotationSets.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotationSets.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotationSets.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotationSets.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotationSpecs.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotationSpecs.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotationSpecs.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotationSpecs.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotations.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotations.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotations.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotations.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.annotations.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.datasets.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.datasets.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.datasets.export",
    "stage": "GA",
    "title": "Export"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.datasets.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.datasets.import",
    "stage": "GA",
    "title": "Import"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.datasets.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.datasets.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.images.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.images.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.images.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.images.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.locations.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.locations.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.locations.reportUsageMetrics",
    "stage": "GA",
    "title": "Report Usage Metrics"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.modelEvaluations.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.modelEvaluations.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.models.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.models.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.models.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.models.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.models.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.models.writePrediction",
    "stage": "GA",
    "title": "Write Prediction"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.modules.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.modules.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.modules.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.modules.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.modules.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.operations.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.operations.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.solutionArtifacts.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.solutionArtifacts.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.solutionArtifacts.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.solutionArtifacts.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.solutionArtifacts.predict",
    "stage": "GA",
    "title": "Predict"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.solutionArtifacts.update",
    "stage": "GA",
    "title": "Update"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.solutions.create",
    "stage": "GA",
    "title": "Create"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.solutions.delete",
    "stage": "GA",
    "title": "Delete"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.solutions.get",
    "stage": "GA",
    "title": "Get"
  },
  {
    "apiDisabled": true,
    "name": "visualinspection.solutions.list",
    "stage": "GA",
    "title": "List"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.cloneJobs.create",
    "stage": "BETA",
    "title": "Create CloneJob"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.cloneJobs.get",
    "stage": "BETA",
    "title": "Get CloneJob"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.cloneJobs.list",
    "stage": "BETA",
    "title": "List CloneJob"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.cloneJobs.update",
    "stage": "BETA",
    "title": "Update CloneJob"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.cutoverJobs.create",
    "stage": "BETA",
    "title": "Create CutoverJob"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.cutoverJobs.get",
    "stage": "BETA",
    "title": "Get CutoverJob"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.cutoverJobs.list",
    "stage": "BETA",
    "title": "List CutoverJob"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.cutoverJobs.update",
    "stage": "BETA",
    "title": "Update CutoverJob"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.datacenterConnectors.create",
    "stage": "BETA",
    "title": "Create DatacenterConnector"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.datacenterConnectors.delete",
    "stage": "BETA",
    "title": "Delete DatacenterConnector"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.datacenterConnectors.get",
    "stage": "BETA",
    "title": "Get DatacenterConnector"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.datacenterConnectors.list",
    "stage": "BETA",
    "title": "List DatacenterConnector"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.datacenterConnectors.update",
    "stage": "BETA",
    "title": "Update DatacenterConnector"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.deployments.create",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.deployments.get",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.deployments.list",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.groups.create",
    "stage": "BETA",
    "title": "Create Group"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.groups.delete",
    "stage": "BETA",
    "title": "Delete Group"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.groups.get",
    "stage": "BETA",
    "title": "Get Group"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.groups.list",
    "stage": "BETA",
    "title": "List Groups"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.groups.update",
    "stage": "BETA",
    "title": "Update Group"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.imageImportJobs.cancel",
    "stage": "BETA",
    "title": "Cancel ImageImportJob"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.imageImportJobs.get",
    "stage": "BETA",
    "title": "Get ImageImportJob"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.imageImportJobs.list",
    "stage": "BETA",
    "title": "List ImageImportJobs"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.imageImports.create",
    "stage": "BETA",
    "title": "Create ImageImport"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.imageImports.delete",
    "stage": "BETA",
    "title": "Delete ImageImport"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.imageImports.get",
    "stage": "BETA",
    "title": "Get ImageImport"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.imageImports.list",
    "stage": "BETA",
    "title": "List ImageImports"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.migratingVms.create",
    "stage": "BETA",
    "title": "Create MigratingVm"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.migratingVms.delete",
    "stage": "BETA",
    "title": "Delete MigratingVm"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.migratingVms.get",
    "stage": "BETA",
    "title": "Get MigratingVm"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.migratingVms.list",
    "stage": "BETA",
    "title": "List MigratingVm"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.migratingVms.update",
    "stage": "BETA",
    "title": "Update MigratingVm"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.replicationCycles.get",
    "stage": "BETA",
    "title": "Get ReplicationCycle"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.replicationCycles.list",
    "stage": "BETA",
    "title": "List ReplicationCycles"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.sources.create",
    "stage": "BETA",
    "title": "Create Source"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.sources.delete",
    "stage": "BETA",
    "title": "Delete Source"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.sources.get",
    "stage": "BETA",
    "title": "Get Source"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.sources.list",
    "stage": "BETA",
    "title": "List Sources"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.sources.update",
    "stage": "BETA",
    "title": "Update Source"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.targets.create",
    "stage": "BETA",
    "title": "Create Target"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.targets.delete",
    "stage": "BETA",
    "title": "Delete Target"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.targets.get",
    "stage": "BETA",
    "title": "Get Target"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.targets.list",
    "stage": "BETA",
    "title": "List Targets"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.targets.update",
    "stage": "BETA",
    "title": "Update Target"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.utilizationReports.create",
    "stage": "BETA",
    "title": "Create UtilizationReport"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.utilizationReports.delete",
    "stage": "BETA",
    "title": "Delete UtilizationReport"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.utilizationReports.get",
    "stage": "BETA",
    "title": "Get UtilizationReport"
  },
  {
    "apiDisabled": true,
    "name": "vmmigration.utilizationReports.list",
    "stage": "BETA",
    "title": "List UtilizationReport"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.clusters.create",
    "stage": "GA",
    "title": "Create Clusters"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.clusters.delete",
    "stage": "GA",
    "title": "Delete Clusters"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.clusters.get",
    "stage": "GA",
    "title": "Get Clusters"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.clusters.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Clusters"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.clusters.list",
    "stage": "GA",
    "title": "List Clusters"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.clusters.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Clusters"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.clusters.update",
    "stage": "GA",
    "title": "Update Clusters"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.dnsBindPermission.get",
    "stage": "GA",
    "title": "Get DnsBindPermission"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.dnsBindPermission.grant",
    "stage": "GA",
    "title": "Grant DnsBindPermission"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.dnsBindPermission.revoke",
    "stage": "GA",
    "title": "Revoke DnsBindPermission"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.dnsForwarding.get",
    "stage": "GA",
    "title": "Get DnsForwarding"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.dnsForwarding.update",
    "stage": "GA",
    "title": "Update DnsForwarding"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.externalAccessRules.create",
    "stage": "GA",
    "title": "Create ExternalAccessRule"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.externalAccessRules.delete",
    "stage": "GA",
    "title": "Delete ExternalAccessRule"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.externalAccessRules.get",
    "stage": "GA",
    "title": "Get ExternalAccessRule"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.externalAccessRules.list",
    "stage": "GA",
    "title": "List ExternalAccessRules"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.externalAccessRules.update",
    "stage": "GA",
    "title": "Update ExternalAccessRule"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.externalAddresses.create",
    "stage": "GA",
    "title": "Create ExternalAddress"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.externalAddresses.delete",
    "stage": "GA",
    "title": "Delete ExternalAddress"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.externalAddresses.get",
    "stage": "GA",
    "title": "Get ExternalAddress"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.externalAddresses.list",
    "stage": "GA",
    "title": "List ExternalAddresses"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.externalAddresses.update",
    "stage": "GA",
    "title": "Update ExternalAddress"
  },
  {
    "apiDisabled": true,
    "description": "View, edit, create VMware Engine instances and its resources",
    "name": "vmwareengine.googleapis.com/services.use",
    "primaryPermission": "vmwareengine.services.use",
    "stage": "GA",
    "title": "Use"
  },
  {
    "apiDisabled": true,
    "description": "View VMware Engine instances and its resources",
    "name": "vmwareengine.googleapis.com/services.view",
    "primaryPermission": "vmwareengine.services.view",
    "stage": "GA",
    "title": "View"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.hcxActivationKeys.create",
    "stage": "GA",
    "title": "Create HCX Activation Key"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.hcxActivationKeys.get",
    "stage": "GA",
    "title": "Get HCX Activation Key"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.hcxActivationKeys.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on HCX Activation Keys"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.hcxActivationKeys.list",
    "stage": "GA",
    "title": "List HCX Activation Keys"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.hcxActivationKeys.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on HCX Activation Keys"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.loggingServers.create",
    "stage": "GA",
    "title": "Create Logging Servers"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.loggingServers.delete",
    "stage": "GA",
    "title": "Delete Logging Servers"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.loggingServers.get",
    "stage": "GA",
    "title": "Get Logging Servers"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.loggingServers.list",
    "stage": "GA",
    "title": "List Logging Servers"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.loggingServers.update",
    "stage": "GA",
    "title": "Update Logging Servers"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.managementDnsZoneBindings.create",
    "stage": "GA",
    "title": "Create ManagementDnsZoneBindings"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.managementDnsZoneBindings.delete",
    "stage": "GA",
    "title": "Delete ManagementDnsZoneBindings"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.managementDnsZoneBindings.get",
    "stage": "GA",
    "title": "Get ManagementDnsZoneBindings"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.managementDnsZoneBindings.list",
    "stage": "GA",
    "title": "List ManagementDnsZoneBindings"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.managementDnsZoneBindings.repair",
    "stage": "GA",
    "title": "Repair ManagementDnsZoneBindings"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.managementDnsZoneBindings.update",
    "stage": "GA",
    "title": "Update ManagementDnsZoneBindings"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPeerings.create",
    "stage": "GA",
    "title": "Create NetworkPeering"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPeerings.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on network peering"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPeerings.delete",
    "stage": "GA",
    "title": "Delete NetworkPeering"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPeerings.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on network peering"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPeerings.get",
    "stage": "GA",
    "title": "Get NetworkPeering"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPeerings.list",
    "stage": "GA",
    "title": "List NetworksPeerings"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPeerings.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tags on network peering"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPeerings.listPeeringRoutes",
    "stage": "GA",
    "title": "Lists Peering Routes for a NetworkPeering"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPeerings.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on network peering"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPeerings.update",
    "stage": "GA",
    "title": "Update NetworkPeering"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPolicies.create",
    "stage": "GA",
    "title": "Create NetworkPolicy"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPolicies.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on network policy"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPolicies.delete",
    "stage": "GA",
    "title": "Delete NetworkPolicy"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPolicies.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on network policy"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPolicies.fetchExternalAddresses",
    "stage": "GA",
    "title": "Fetch ExternalAddresses within the scope of the NetworkPolicy"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPolicies.get",
    "stage": "GA",
    "title": "Get NetworkPolicy"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPolicies.list",
    "stage": "GA",
    "title": "List NetworkPolicies"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPolicies.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tags on network policy"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPolicies.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on network policy"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.networkPolicies.update",
    "stage": "GA",
    "title": "Update NetworkPolicy"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.nodeTypes.get",
    "stage": "GA",
    "title": "Get NodeType"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.nodeTypes.list",
    "stage": "GA",
    "title": "List NodeTypes"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.nodes.get",
    "stage": "GA",
    "title": "Get Node"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.nodes.list",
    "stage": "GA",
    "title": "List Nodes"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.operations.delete",
    "stage": "GA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.operations.list",
    "stage": "GA",
    "title": "List Operations"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.create",
    "stage": "GA",
    "title": "Create PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.delete",
    "stage": "GA",
    "title": "Delete PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.get",
    "stage": "GA",
    "title": "Get PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.list",
    "stage": "GA",
    "title": "List PrivateClouds"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tags on PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.resetNsxCredentials",
    "stage": "GA",
    "title": "Reset NSX credentials of PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.resetVcenterCredentials",
    "stage": "GA",
    "title": "Reset vCenter credentials of PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.showNsxCredentials",
    "stage": "GA",
    "title": "Show NSX credentials of PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.showVcenterCredentials",
    "stage": "GA",
    "title": "Show vCenter credentials of PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.undelete",
    "stage": "GA",
    "title": "Undelete PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateClouds.update",
    "stage": "GA",
    "title": "Update PrivateCloud"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateConnections.create",
    "stage": "GA",
    "title": "Create PrivateConnection"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateConnections.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on PrivateConnection"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateConnections.delete",
    "stage": "GA",
    "title": "Delete PrivateConnection"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateConnections.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on PrivateConnection"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateConnections.get",
    "stage": "GA",
    "title": "Get PrivateConnection"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateConnections.list",
    "stage": "GA",
    "title": "List PrivateConnections"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateConnections.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tags on PrivateConnection"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateConnections.listPeeringRoutes",
    "stage": "GA",
    "title": "Lists Peering Routes for a PrivateConnection"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateConnections.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on PrivateConnection"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.privateConnections.update",
    "stage": "GA",
    "title": "Update PrivateConnection"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.projectState.get",
    "stage": "GA",
    "title": "Get ProjectState"
  },
  {
    "apiDisabled": true,
    "description": "View, edit, create VMware Engine instances and its resources",
    "name": "vmwareengine.services.use",
    "stage": "GA",
    "title": "Use"
  },
  {
    "apiDisabled": true,
    "description": "View VMware Engine instances and its resources",
    "name": "vmwareengine.services.view",
    "stage": "GA",
    "title": "View"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.subnets.get",
    "stage": "GA",
    "title": "Get Subnet"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.subnets.list",
    "stage": "GA",
    "title": "List Subnets"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.subnets.update",
    "stage": "GA",
    "title": "Update Subnet"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.vmwareEngineNetworks.create",
    "stage": "GA",
    "title": "Create VmwareEngineNetwork"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.vmwareEngineNetworks.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on VmwareEngineNetwork"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.vmwareEngineNetworks.delete",
    "stage": "GA",
    "title": "Delete VmwareEngineNetwork"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.vmwareEngineNetworks.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings VmwareEngineNetwork"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.vmwareEngineNetworks.get",
    "stage": "GA",
    "title": "Get VmwareEngineNetwork"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.vmwareEngineNetworks.list",
    "stage": "GA",
    "title": "List VmwareEngineNetworks"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.vmwareEngineNetworks.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tags on VmwareEngineNetwork"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.vmwareEngineNetworks.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on VmwareEngineNetwork"
  },
  {
    "apiDisabled": true,
    "name": "vmwareengine.vmwareEngineNetworks.update",
    "stage": "GA",
    "title": "Update VmwareEngineNetwork"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.connectors.create",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.connectors.delete",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.connectors.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.connectors.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.connectors.update",
    "stage": "BETA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.connectors.use",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.locations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.operations.get",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "vpcaccess.operations.list",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "workflows.callbacks.list",
    "stage": "GA",
    "title": "List Callbacks"
  },
  {
    "apiDisabled": true,
    "name": "workflows.callbacks.send",
    "stage": "GA",
    "title": "Send Callbacks"
  },
  {
    "apiDisabled": true,
    "name": "workflows.executions.cancel",
    "stage": "GA",
    "title": "Cancel Execution"
  },
  {
    "apiDisabled": true,
    "name": "workflows.executions.create",
    "stage": "GA",
    "title": "Create Executions"
  },
  {
    "apiDisabled": true,
    "name": "workflows.executions.get",
    "stage": "GA",
    "title": "Get Execution"
  },
  {
    "apiDisabled": true,
    "name": "workflows.executions.list",
    "stage": "GA",
    "title": "List Executions"
  },
  {
    "apiDisabled": true,
    "name": "workflows.locations.get",
    "stage": "GA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "workflows.locations.list",
    "stage": "GA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "workflows.operations.cancel",
    "stage": "GA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "workflows.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "workflows.operations.list",
    "stage": "GA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "workflows.stepEntries.get",
    "stage": "GA",
    "title": "Get Step Entry"
  },
  {
    "apiDisabled": true,
    "name": "workflows.stepEntries.list",
    "stage": "GA",
    "title": "List Step Entries"
  },
  {
    "apiDisabled": true,
    "name": "workflows.workflows.create",
    "stage": "GA",
    "title": "Create Workflows"
  },
  {
    "apiDisabled": true,
    "name": "workflows.workflows.createTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "workflows.workflows.delete",
    "stage": "GA",
    "title": "Delete Workflow"
  },
  {
    "apiDisabled": true,
    "name": "workflows.workflows.deleteTagBinding",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "workflows.workflows.get",
    "stage": "GA",
    "title": "Get Workflow"
  },
  {
    "apiDisabled": true,
    "name": "workflows.workflows.list",
    "stage": "GA",
    "title": "List Workflows"
  },
  {
    "apiDisabled": true,
    "name": "workflows.workflows.listEffectiveTags",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "workflows.workflows.listRevision",
    "stage": "GA",
    "title": "List Workflow Revisions"
  },
  {
    "apiDisabled": true,
    "name": "workflows.workflows.listTagBindings",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "workflows.workflows.update",
    "stage": "GA",
    "title": "Update Workflows"
  },
  {
    "apiDisabled": true,
    "name": "workloadcertificate.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "workloadcertificate.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "workloadcertificate.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "workloadcertificate.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "workloadcertificate.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "workloadcertificate.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "workloadcertificate.workloadCertificateFeature.get",
    "stage": "BETA",
    "title": "Get WorkloadCertificateFeature"
  },
  {
    "apiDisabled": true,
    "name": "workloadcertificate.workloadCertificateFeature.update",
    "stage": "BETA",
    "title": "Update WorkloadCertificateFeature"
  },
  {
    "apiDisabled": true,
    "name": "workloadcertificate.workloadRegistrations.create",
    "stage": "BETA",
    "title": "Create WorkloadRegistration"
  },
  {
    "apiDisabled": true,
    "name": "workloadcertificate.workloadRegistrations.delete",
    "stage": "BETA",
    "title": "Delete WorkloadRegistration"
  },
  {
    "apiDisabled": true,
    "name": "workloadcertificate.workloadRegistrations.get",
    "stage": "BETA",
    "title": "Get WorkloadRegistration"
  },
  {
    "apiDisabled": true,
    "name": "workloadcertificate.workloadRegistrations.list",
    "stage": "BETA",
    "title": "List WorkloadRegistration"
  },
  {
    "apiDisabled": true,
    "name": "workloadcertificate.workloadRegistrations.update",
    "stage": "BETA",
    "title": "Update WorkloadRegistration"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.actuations.create",
    "stage": "BETA",
    "title": "Create Actuation"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.actuations.delete",
    "stage": "BETA",
    "title": "Delete Actuation"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.actuations.get",
    "stage": "BETA",
    "title": "Get Actuation"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.actuations.list",
    "stage": "BETA",
    "title": "List Actuations"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.deployments.create",
    "stage": "BETA",
    "title": "Create Deployment"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.deployments.delete",
    "stage": "BETA",
    "title": "Delete Deployment"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.deployments.get",
    "stage": "BETA",
    "title": "Get Deployment"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.deployments.list",
    "stage": "BETA",
    "title": "List Deployments"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.discoveredprofiles.get",
    "stage": "BETA",
    "title": "Get DiscoveredProfile"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.discoveredprofiles.getHealth",
    "stage": "BETA",
    "title": "Get DiscoveredProfile Health"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.discoveredprofiles.list",
    "stage": "BETA",
    "title": "List DiscoveredProfiles"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.evaluations.create",
    "stage": "BETA",
    "title": "Create Evaluation"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.evaluations.delete",
    "stage": "BETA",
    "title": "Delete Evaluation"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.evaluations.get",
    "stage": "BETA",
    "title": "Get Evaluation"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.evaluations.list",
    "stage": "BETA",
    "title": "List Evaluations"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.evaluations.run",
    "stage": "BETA",
    "title": "Run Evaluation"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.evaluations.update",
    "stage": "BETA",
    "title": "Update Evaluation"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.executions.delete",
    "stage": "BETA",
    "title": "Delete Execution"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.executions.get",
    "stage": "BETA",
    "title": "Get Execution"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.executions.list",
    "stage": "BETA",
    "title": "List Executions"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.insights.export",
    "stage": "BETA",
    "title": "Export the insight data"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.insights.listSapSystems",
    "stage": "BETA",
    "title": "List the sap system data"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.insights.write",
    "stage": "BETA",
    "title": "Write an insight"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.locations.get",
    "stage": "BETA",
    "title": "Get Location"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.locations.list",
    "stage": "BETA",
    "title": "List Locations"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.operations.cancel",
    "stage": "BETA",
    "title": "Cancel Operation"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.operations.delete",
    "stage": "BETA",
    "title": "Delete Operation"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.operations.get",
    "stage": "BETA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.operations.list",
    "stage": "BETA",
    "title": "List Operation"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.results.list",
    "stage": "BETA",
    "title": "List Result"
  },
  {
    "apiDisabled": true,
    "name": "workloadmanager.rules.list",
    "stage": "BETA",
    "title": "List Rule"
  },
  {
    "apiDisabled": true,
    "name": "workspacemarketplace.appConfiguration.update",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "workspacemarketplace.appConfiguration.view",
    "stage": "GA"
  },
  {
    "apiDisabled": true,
    "name": "workstations.operations.get",
    "stage": "GA",
    "title": "Get Operation"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationClusters.create",
    "stage": "GA",
    "title": "Create WorkstationCluster"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationClusters.createTagBinding",
    "stage": "GA",
    "title": "Create Tag Bindings on WorkstationCluster"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationClusters.delete",
    "stage": "GA",
    "title": "Delete WorkstationCluster"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationClusters.deleteTagBinding",
    "stage": "GA",
    "title": "Delete Tag Bindings on WorkstationCluster"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationClusters.get",
    "stage": "GA",
    "title": "Get WorkstationCluster"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationClusters.list",
    "stage": "GA",
    "title": "List WorkstationCluster"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationClusters.listEffectiveTags",
    "stage": "GA",
    "title": "List Effective Tags on WorkstationCluster"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationClusters.listTagBindings",
    "stage": "GA",
    "title": "List Tag Bindings on WorkstationCluster"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationClusters.update",
    "stage": "GA",
    "title": "Update WorkstationCluster"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationConfigs.create",
    "stage": "GA",
    "title": "Create workstationConfig"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationConfigs.delete",
    "stage": "GA",
    "title": "Delete workstationConfig"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationConfigs.get",
    "stage": "GA",
    "title": "Get workstationConfig"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationConfigs.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on workstationConfig"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationConfigs.list",
    "stage": "GA",
    "title": "List workstationConfig"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationConfigs.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on workstationConfig"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstationConfigs.update",
    "stage": "GA",
    "title": "Update workstationConfig"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstations.create",
    "stage": "GA",
    "title": "Create Workstation"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstations.delete",
    "stage": "GA",
    "title": "Delete Workstation"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstations.get",
    "stage": "GA",
    "title": "Get Workstation"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstations.getIamPolicy",
    "stage": "GA",
    "title": "Get IAM Policy on Workstation"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstations.list",
    "stage": "GA",
    "title": "List Workstation"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstations.setIamPolicy",
    "stage": "GA",
    "title": "Set IAM Policy on Workstation"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstations.start",
    "stage": "GA",
    "title": "Start Workstation"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstations.stop",
    "stage": "GA",
    "title": "Stop Workstation"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstations.update",
    "stage": "GA",
    "title": "Update Workstation"
  },
  {
    "apiDisabled": true,
    "name": "workstations.workstations.use",
    "stage": "GA",
    "title": "Use Workstation"
  }
]
